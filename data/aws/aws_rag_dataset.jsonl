{"text": "Interaction: An external client or an AWS service sends data to AWS ACM\nThreat: ACM Certificate Lifecycle Misconfiguration\nDescription: Failing to implement a 'create before destroy' mechanism for ACM certificates may lead to service downtime during certificate renewals.\nMitigation: Ensure that ACM certificates are replaced using a 'create before destroy' mechanism to prevent service interruptions.", "metadata": {"threat_id": "ACM_001", "threat_name": "ACM Certificate Lifecycle Misconfiguration", "source": "An external client or an AWS service", "target": "AWS ACM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS ACM\nThreat: ACM Certificate Logging Not Configured\nDescription: If logging preferences are not configured for ACM certificates, security incidents related to certificate use may go undetected.\nMitigation: Verify logging preferences for ACM certificates and ensure logs are stored securely for auditing and compliance.", "metadata": {"threat_id": "ACM_002", "threat_name": "ACM Certificate Logging Not Configured", "source": "An external client or an AWS service", "target": "AWS ACM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS ALB\nThreat: Unencrypted ALB Listener Traffic\nDescription: ALB listeners configured with non-HTTPS protocols (e.g., HTTP) expose data in transit to interception and man-in-the-middle (MITM) attacks.\nMitigation: Ensure ALB listeners enforce HTTPS to encrypt data in transit and use TLS 1.2 or higher.", "metadata": {"threat_id": "ALB_001", "threat_name": "Unencrypted ALB Listener Traffic", "source": "An external client or an AWS service", "target": "AWS ALB"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS ALB\nThreat: Unencrypted ALB Listener Traffic\nDescription: ALB listeners configured with non-HTTPS protocols (e.g., HTTP) expose data in transit to interception and man-in-the-middle (MITM) attacks.\nMitigation: Ensure ALB listeners enforce HTTPS to encrypt data in transit and use TLS 1.2 or higher.", "metadata": {"threat_id": "ALB_002", "threat_name": "Unencrypted ALB Listener Traffic", "source": "An external client or an AWS service", "target": "AWS ALB"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS ALB\nThreat: Weak Desync Mitigation Mode in ALB\nDescription: ALBs not configured with defensive or strictest desync mitigation mode may be vulnerable to HTTP desync attacks.\nMitigation: Ensure that ALB is configured with defensive or strictest desync mitigation mode to prevent HTTP request smuggling attacks.", "metadata": {"threat_id": "ALB_027", "threat_name": "Weak Desync Mitigation Mode in ALB", "source": "An external client or an AWS service", "target": "AWS ALB"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS ALB\nThreat: Weak Desync Mitigation Mode in ALB\nDescription: ALBs not configured with defensive or strictest desync mitigation mode may be vulnerable to HTTP desync attacks.\nMitigation: Ensure that ALB is configured with defensive or strictest desync mitigation mode to prevent HTTP request smuggling attacks.", "metadata": {"threat_id": "ALB_029", "threat_name": "Weak Desync Mitigation Mode in ALB", "source": "An external client or an AWS service", "target": "AWS ALB"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS ALB\nThreat: Weak Desync Mitigation Mode in ALB\nDescription: ALBs not configured with defensive or strictest desync mitigation mode may be vulnerable to HTTP desync attacks.\nMitigation: Ensure that ALB is configured with defensive or strictest desync mitigation mode to prevent HTTP request smuggling attacks.", "metadata": {"threat_id": "ALB_029", "threat_name": "Weak Desync Mitigation Mode in ALB", "source": "An external client or an AWS service", "target": "AWS ALB"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS AMI\nThreat: Amazon Machine Images (AMIs) Not Encrypted with KMS\nDescription: Amazon Machine Images (AMIs) that are not encrypted using AWS KMS CMKs may store sensitive data without adequate protection, increasing security risks.\nMitigation: Ensure that AMIs are encrypted using AWS KMS CMKs to prevent unauthorized access.", "metadata": {"threat_id": "AMI_001", "threat_name": "Amazon Machine Images (AMIs) Not Encrypted with KMS", "source": "An external client or an AWS service", "target": "AWS AMI"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS AMI\nThreat: AMI Launch Permissions Not Restricted\nDescription: AMI launch permissions that are not properly restricted may allow unauthorized accounts to use the AMI, potentially leading to data exposure and misuse.\nMitigation: Ensure AMI launch permissions are limited to only authorized AWS accounts.", "metadata": {"threat_id": "AMI_002", "threat_name": "AMI Launch Permissions Not Restricted", "source": "An external client or an AWS service", "target": "AWS AMI"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS AMI\nThreat: Unencrypted Copied AMIs\nDescription: Failing to encrypt copied AMIs increases the risk of unauthorized access to machine images containing sensitive configurations.\nMitigation: Ensure that all copied AMIs are encrypted to protect sensitive data and comply with security best practices.", "metadata": {"threat_id": "AMI_001", "threat_name": "Unencrypted Copied AMIs", "source": "An external client or an AWS service", "target": "AWS AMI"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS AMI\nThreat: AMI Copy Operation Without CMK\nDescription: Using default encryption mechanisms without a customer-managed key (CMK) may lead to security policy violations and unauthorized data access.\nMitigation: Ensure AMI copying operations use a CMK to enforce strong encryption and access control.", "metadata": {"threat_id": "AMI_002", "threat_name": "AMI Copy Operation Without CMK", "source": "An external client or an AWS service", "target": "AWS AMI"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS AMI\nThreat: Potential WhoAMI Cloud Image Name Confusion Attack\nDescription: Misleading or unclear AMI names can lead to users deploying insecure or unauthorized images.\nMitigation: Reduce the potential for WhoAMI cloud image name confusion by using clear, verified, and approved AMI naming conventions.", "metadata": {"threat_id": "AMI_046", "threat_name": "Potential WhoAMI Cloud Image Name Confusion Attack", "source": "An external client or an AWS service", "target": "AWS AMI"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS API Gateway\nThreat: Publicly Accessible API Gateway Methods\nDescription: API Gateway methods that allow open access to backend resources may expose sensitive data and increase the risk of unauthorized access or abuse.\nMitigation: Ensure API Gateway methods enforce authentication and authorization controls to restrict access to trusted users and services.", "metadata": {"threat_id": "APIGW_001", "threat_name": "Publicly Accessible API Gateway Methods", "source": "An external client or an AWS service", "target": "AWS API Gateway"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS API Gateway\nThreat: Publicly Accessible API Gateway Methods\nDescription: API Gateway methods that allow open access to backend resources may expose sensitive data and increase the risk of unauthorized access or abuse.\nMitigation: Ensure API Gateway methods enforce authentication and authorization controls to restrict access to trusted users and services.", "metadata": {"threat_id": "APIGW_002", "threat_name": "Publicly Accessible API Gateway Methods", "source": "An external client or an AWS service", "target": "AWS API Gateway"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS API Gateway\nThreat: API Gateway X-Ray Tracing Disabled\nDescription: API Gateway stages without X-Ray tracing enabled lack visibility into request flows and potential performance or security issues.\nMitigation: Enable AWS X-Ray tracing for API Gateway stages to improve observability and troubleshooting.", "metadata": {"threat_id": "APIGW_003", "threat_name": "API Gateway X-Ray Tracing Disabled", "source": "An external client or an AWS service", "target": "AWS API Gateway"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS API Gateway\nThreat: API Gateway X-Ray Tracing Disabled\nDescription: Serverless API Gateway instances without X-Ray tracing enabled lack visibility into request flows and potential performance or security issues.\nMitigation: Enable AWS X-Ray tracing for API Gateway instances to improve observability and troubleshooting.", "metadata": {"threat_id": "APIGW_004", "threat_name": "API Gateway X-Ray Tracing Disabled", "source": "An external client or an AWS service", "target": "AWS API Gateway"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS API Gateway\nThreat: API Gateway X-Ray Tracing Disabled\nDescription: API Gateway stages without X-Ray tracing enabled lack visibility into request flows and potential performance or security issues.\nMitigation: Enable AWS X-Ray tracing for API Gateway stages to improve observability and troubleshooting.", "metadata": {"threat_id": "APIGW_005", "threat_name": "API Gateway X-Ray Tracing Disabled", "source": "An external client or an AWS service", "target": "AWS API Gateway"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS API Gateway\nThreat: API Gateway Access Logging Disabled\nDescription: API Gateway stages without access logging enabled lack visibility into request details, making it difficult to track API usage and detect security threats.\nMitigation: Enable access logging for API Gateway stages to capture request and response data for security monitoring and troubleshooting.", "metadata": {"threat_id": "APIGW_006", "threat_name": "API Gateway Access Logging Disabled", "source": "An external client or an AWS service", "target": "AWS API Gateway"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS API Gateway\nThreat: API Gateway Access Logging Disabled\nDescription: Serverless API Gateway instances without access logging enabled lack visibility into API traffic, making it difficult to detect anomalies and security threats.\nMitigation: Ensure access logging is enabled for API Gateway instances to monitor request details and enhance security analysis.", "metadata": {"threat_id": "APIGW_007", "threat_name": "API Gateway Access Logging Disabled", "source": "An external client or an AWS service", "target": "AWS API Gateway"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS API Gateway\nThreat: API Gateway Access Logging Disabled\nDescription: API Gateway stages without access logging enabled lack visibility into request details, making it difficult to track API usage and detect security threats.\nMitigation: Enable access logging for API Gateway stages to capture request and response data for security monitoring and troubleshooting.", "metadata": {"threat_id": "APIGW_008", "threat_name": "API Gateway Access Logging Disabled", "source": "An external client or an AWS service", "target": "AWS API Gateway"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS API Gateway\nThreat: API Gateway Access Logging Disabled\nDescription: API Gateway V2 stages without access logging enabled lack visibility into API traffic, making it difficult to detect anomalies and security threats.\nMitigation: Ensure access logging is enabled for API Gateway V2 stages to monitor request details and enhance security analysis.", "metadata": {"threat_id": "APIGW_009", "threat_name": "API Gateway Access Logging Disabled", "source": "An external client or an AWS service", "target": "AWS API Gateway"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS API Gateway\nThreat: API Gateway V2 Access Logging Disabled\nDescription: API Gateway V2 stages without access logging enabled lack visibility into request details, making it difficult to track API usage and detect security threats.\nMitigation: Enable access logging for API Gateway V2 stages to capture request and response data for security monitoring and troubleshooting.", "metadata": {"threat_id": "APIGW_010", "threat_name": "API Gateway V2 Access Logging Disabled", "source": "An external client or an AWS service", "target": "AWS API Gateway"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS API Gateway\nThreat: API Gateway V2 Access Logging Disabled\nDescription: Serverless HTTP APIs without access logging enabled lack visibility into API traffic, making it difficult to detect anomalies and security threats.\nMitigation: Ensure access logging is enabled for API Gateway V2 instances to monitor request details and enhance security analysis.", "metadata": {"threat_id": "APIGW_011", "threat_name": "API Gateway V2 Access Logging Disabled", "source": "An external client or an AWS service", "target": "AWS API Gateway"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS API Gateway\nThreat: API Gateway Caching Not Enabled\nDescription: Without caching enabled, API Gateway calls may result in excessive load on backend services, increasing latency and potential security risks from repeated API calls.\nMitigation: Enable API Gateway caching to improve performance, reduce backend load, and minimize the risk of API abuse.", "metadata": {"threat_id": "APIGW_012", "threat_name": "API Gateway Caching Not Enabled", "source": "An external client or an AWS service", "target": "AWS API Gateway"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS API Gateway\nThreat: API Gateway Caching Not Enabled\nDescription: Without caching, API Gateway may process redundant requests, increasing operational costs and exposing APIs to denial-of-service (DoS) risks.\nMitigation: Enable caching for AWS Serverless API to improve response times and enhance API security.", "metadata": {"threat_id": "APIGW_013", "threat_name": "API Gateway Caching Not Enabled", "source": "An external client or an AWS service", "target": "AWS API Gateway"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS API Gateway\nThreat: API Gateway Caching Not Enabled\nDescription: API Gateway without caching may expose backend services to unnecessary requests, leading to performance degradation and potential API exhaustion attacks.\nMitigation: Enable caching in API Gateway to optimize response times and reduce load on backend services.", "metadata": {"threat_id": "APIGW_014", "threat_name": "API Gateway Caching Not Enabled", "source": "An external client or an AWS service", "target": "AWS API Gateway"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS API Gateway\nThreat: API Gateway Domain Uses Outdated Security Policy\nDescription: API Gateway domains that use outdated security policies may expose applications to known vulnerabilities and weaken HTTPS encryption.\nMitigation: Ensure API Gateway Domain uses a modern security policy to enforce strong encryption and security standards.", "metadata": {"threat_id": "APIGW_002", "threat_name": "API Gateway Domain Uses Outdated Security Policy", "source": "An external client or an AWS service", "target": "AWS API Gateway"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS API Gateway\nThreat: API Gateway Deployment Lacking Create Before Destroy\nDescription: Without 'create before destroy' enabled, API deployments may experience downtime and incomplete rollouts leading to broken integrations.\nMitigation: Ensure API Gateway deployments follow 'create before destroy' principles to maintain high availability.", "metadata": {"threat_id": "API_001", "threat_name": "API Gateway Deployment Lacking Create Before Destroy", "source": "An external client or an AWS service", "target": "AWS API Gateway"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS API Gateway\nThreat: API Gateway Method Settings Not Caching Responses\nDescription: If API Gateway does not enable response caching, it may lead to increased API request latency and higher costs.\nMitigation: Ensure API Gateway method settings enable caching to improve API performance and reduce redundant requests.", "metadata": {"threat_id": "API_002", "threat_name": "API Gateway Method Settings Not Caching Responses", "source": "An external client or an AWS service", "target": "AWS API Gateway"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS API Gateway\nThreat: API Gateway Lifecycle Misconfiguration\nDescription: Not using a 'create before destroy' approach for API Gateway deployments can lead to service downtime during updates.\nMitigation: Ensure that API Gateway deployments follow a 'create before destroy' mechanism to prevent downtime.", "metadata": {"threat_id": "APIGW_001", "threat_name": "API Gateway Lifecycle Misconfiguration", "source": "An external client or an AWS service", "target": "AWS API Gateway"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS API Gateway\nThreat: API Gateway Data Trace Enabled\nDescription: Enabling Data Trace in API Gateway Method Settings may log sensitive request and response data, increasing exposure risks.\nMitigation: Ensure Data Trace is disabled in API Gateway Method Settings unless necessary for debugging in non-production environments.", "metadata": {"threat_id": "APIGW_001", "threat_name": "API Gateway Data Trace Enabled", "source": "An external client or an AWS service", "target": "AWS API Gateway"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS API Gateway\nThreat: Unencrypted API Gateway Caching\nDescription: API Gateway method settings with unencrypted caching may expose sensitive request and response data.\nMitigation: Ensure API Gateway method setting caching is configured to use encryption.", "metadata": {"threat_id": "APIGW_005", "threat_name": "Unencrypted API Gateway Caching", "source": "An external client or an AWS service", "target": "AWS API Gateway"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS API Gateway\nThreat: API GatewayV2 Route Without Authorization\nDescription: API GatewayV2 routes that do not specify an authorization type may be accessed by unauthorized users.\nMitigation: Ensure API GatewayV2 routes specify an authorization type to restrict access.", "metadata": {"threat_id": "APIGW_006", "threat_name": "API GatewayV2 Route Without Authorization", "source": "An external client or an AWS service", "target": "AWS API Gateway"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS API Gateway\nThreat: API Gateway Stage Without Proper Logging\nDescription: API Gateway stages without logging may hinder the ability to monitor and investigate security events.\nMitigation: Ensure API Gateway stages have an appropriate logging level defined for security monitoring.", "metadata": {"threat_id": "APIGateway_053", "threat_name": "API Gateway Stage Without Proper Logging", "source": "An external client or an AWS service", "target": "AWS API Gateway"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS API Gateway\nThreat: API Gateway Method Logging Not Defined\nDescription: Without logging enabled at the API method level, security teams may lack insights into API calls and potential threats.\nMitigation: Ensure API Gateway methods have logging levels appropriately defined to capture relevant security events.", "metadata": {"threat_id": "APIGateway_054", "threat_name": "API Gateway Method Logging Not Defined", "source": "An external client or an AWS service", "target": "AWS API Gateway"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS API Gateway\nThreat: API Gateway Endpoints Without Client Certificate Authentication\nDescription: API Gateway endpoints that do not use client certificate authentication may allow unauthorized access to sensitive resources.\nMitigation: Ensure AWS API Gateway endpoints enforce client certificate authentication to restrict access to trusted clients.", "metadata": {"threat_id": "API_008", "threat_name": "API Gateway Endpoints Without Client Certificate Authentication", "source": "An external client or an AWS service", "target": "AWS API Gateway"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS API Gateway\nThreat: API Gateway Requests Not Validated\nDescription: If API Gateway requests are not validated, malicious actors may send improperly formatted or insecure API requests, leading to application vulnerabilities.\nMitigation: Ensure API Gateway request validation is enabled to enforce schema compliance and protect against injection attacks.", "metadata": {"threat_id": "API_010", "threat_name": "API Gateway Requests Not Validated", "source": "An external client or an AWS service", "target": "AWS API Gateway"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS API Gateway\nThreat: API Gateway Lacks Authorization\nDescription: API methods without authorization or API keys may allow unrestricted access to backend services, leading to data exposure or misuse.\nMitigation: Ensure API Gateway methods have authorization mechanisms or API keys enforced.", "metadata": {"threat_id": "API_028", "threat_name": "API Gateway Lacks Authorization", "source": "An external client or an AWS service", "target": "AWS API Gateway"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS API Gateway\nThreat: API Gateway Not Associated with WAF\nDescription: An API endpoint lacking WAF protection is more susceptible to exploitation of common vulnerabilities (e.g., injection attacks).\nMitigation: Integrate AWS WAF with the API Gateway stage to detect and block suspicious requests.", "metadata": {"threat_id": "SEC_005", "threat_name": "API Gateway Not Associated with WAF", "source": "An external client or an AWS service", "target": "AWS API Gateway"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS API Gateway\nThreat: API Gateway Execution Logging Disabled\nDescription: Without execution logs, anomalous behavior or misconfigurations remain unnoticed, complicating security audits and incident response.\nMitigation: Enable execution logging and send logs to CloudWatch for real-time monitoring and security analysis.", "metadata": {"threat_id": "SEC_006", "threat_name": "API Gateway Execution Logging Disabled", "source": "An external client or an AWS service", "target": "AWS API Gateway"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS API Gateway\nThreat: API Gateway Not Protected by WAF\nDescription: Without WAF protection, attackers can exploit unfiltered Layer 7 vulnerabilities (e.g., SQL injection, XSS).\nMitigation: Associate an AWS WAF with the API Gateway stage to block or filter malicious requests using appropriate rules.", "metadata": {"threat_id": "SLS_001", "threat_name": "API Gateway Not Protected by WAF", "source": "An external client or an AWS service", "target": "AWS API Gateway"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS API Gateway\nThreat: API Gateway Cache Unsecured\nDescription: An unencrypted or disabled cache may expose sensitive data or degrade performance if caching is not used at all.\nMitigation: Enable and encrypt the API Gateway cache to protect data in transit and at rest, reducing latency and safeguarding content.", "metadata": {"threat_id": "SLS_002", "threat_name": "API Gateway Cache Unsecured", "source": "An external client or an AWS service", "target": "AWS API Gateway"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS API Gateway\nThreat: Execution Logging Disabled\nDescription: Without execution logging, suspicious or erroneous requests cannot be audited or diagnosed, hindering forensic analysis.\nMitigation: Enable execution logs and integrate them with monitoring solutions (e.g., CloudWatch Logs) for real-time detection and troubleshooting.", "metadata": {"threat_id": "SLS_003", "threat_name": "Execution Logging Disabled", "source": "An external client or an AWS service", "target": "AWS API Gateway"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS API Gateway\nThreat: API Gateway Insecure (HTTP) Connections\nDescription: Allowing non-HTTPS connections exposes traffic to interception, leading to data leaks or request manipulation.\nMitigation: Require SSL/TLS for all inbound requests, enforcing secure endpoints in Amazon API Gateway stages.", "metadata": {"threat_id": "SLS_004", "threat_name": "API Gateway Insecure (HTTP) Connections", "source": "An external client or an AWS service", "target": "AWS API Gateway"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS API Gateway\nThreat: X-Ray Tracing Not Enabled\nDescription: Without AWS X-Ray, pinpointing performance issues or malicious request patterns across microservices becomes more challenging.\nMitigation: Enable AWS X-Ray tracing to track end-to-end request behavior and quickly identify performance bottlenecks or anomalies.", "metadata": {"threat_id": "SLS_005", "threat_name": "X-Ray Tracing Not Enabled", "source": "An external client or an AWS service", "target": "AWS API Gateway"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS API Gateway\nThreat: No VPC Endpoint for execute-api\nDescription: If requests to API Gateway rely on public endpoints, they can be intercepted or blocked, limiting security and reliability.\nMitigation: Create a VPC endpoint for the execute-api service to route internal traffic privately without traversing the public internet.", "metadata": {"threat_id": "SLS_016", "threat_name": "No VPC Endpoint for execute-api", "source": "An external client or an AWS service", "target": "AWS API Gateway"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Account Management\nThreat: Unverified AWS Account Contacts\nDescription: AWS accounts without valid alternate and primary contacts may fail to receive critical security and compliance notifications.\nMitigation: Ensure AWS accounts have updated primary and alternate contacts to maintain security incident response readiness.", "metadata": {"threat_id": "Account_090", "threat_name": "Unverified AWS Account Contacts", "source": "An external client or an AWS service", "target": "AWS Account Management"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS AppFlow\nThreat: Unencrypted AppFlow Data Transfer\nDescription: If AppFlow flow does not use a CMK for encryption, sensitive data transfers may be exposed to unauthorized access.\nMitigation: Ensure AppFlow flow is encrypted using a customer-managed KMS key (CMK).", "metadata": {"threat_id": "AF_003", "threat_name": "Unencrypted AppFlow Data Transfer", "source": "An external client or an AWS service", "target": "AWS AppFlow"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS AppFlow\nThreat: Unsecured AppFlow Connector Profile\nDescription: If AppFlow connector profile does not use a CMK, data integrations may be vulnerable to unauthorized access.\nMitigation: Ensure AppFlow connector profile is encrypted using a customer-managed KMS key (CMK).", "metadata": {"threat_id": "AF_004", "threat_name": "Unsecured AppFlow Connector Profile", "source": "An external client or an AWS service", "target": "AWS AppFlow"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS AppSync\nThreat: AWS AppSync Logging Not Enabled\nDescription: AppSync APIs without logging enabled may limit the ability to monitor and analyze API requests for security threats and debugging purposes.\nMitigation: Ensure AWS AppSync has logging enabled to provide visibility into API requests and enhance security monitoring.", "metadata": {"threat_id": "APPSYNC_001", "threat_name": "AWS AppSync Logging Not Enabled", "source": "An external client or an AWS service", "target": "AWS AppSync"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS AppSync\nThreat: AppSync GraphQL API Field-Level Logs Not Enabled\nDescription: AppSync GraphQL APIs without field-level logging may limit the ability to track and analyze API requests, making it difficult to detect security incidents or debug issues.\nMitigation: Ensure AppSync GraphQL APIs have field-level logs enabled to enhance visibility and security monitoring.", "metadata": {"threat_id": "APPSYNC_002", "threat_name": "AppSync GraphQL API Field-Level Logs Not Enabled", "source": "An external client or an AWS service", "target": "AWS AppSync"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS AppSync\nThreat: AppSync API Cache Not Encrypted at Rest\nDescription: AppSync API caches that are not encrypted at rest may store sensitive API data in an unprotected state.\nMitigation: Ensure that AWS AppSync API Cache is encrypted at rest to prevent unauthorized access to cached API responses.", "metadata": {"threat_id": "APPSYNC_003", "threat_name": "AppSync API Cache Not Encrypted at Rest", "source": "An external client or an AWS service", "target": "AWS AppSync"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS AppSync\nThreat: AppSync API Cache Not Encrypted in Transit\nDescription: AppSync API caches that are not encrypted in transit may expose API data to interception during transmission.\nMitigation: Ensure that AWS AppSync API Cache is encrypted in transit to protect data confidentiality.", "metadata": {"threat_id": "APPSYNC_004", "threat_name": "AppSync API Cache Not Encrypted in Transit", "source": "An external client or an AWS service", "target": "AWS AppSync"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS AppSync\nThreat: AppSync Without WAF Protection\nDescription: AppSync APIs without WAF protection are vulnerable to injection attacks, DDoS, and other web-based threats.\nMitigation: Ensure AWS WAF is applied to AppSync GraphQL APIs to filter malicious requests and enhance security.", "metadata": {"threat_id": "AppSync_083", "threat_name": "AppSync Without WAF Protection", "source": "An external client or an AWS service", "target": "AWS AppSync"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Application Load Balancer\nThreat: Missing Health Checks in Target Group\nDescription: If HTTP/HTTPS Target Groups do not define health checks, traffic may be routed to unhealthy instances, leading to application downtime or degraded performance.\nMitigation: Ensure that HTTP/HTTPS Target Groups define health checks to monitor instance health and route traffic only to healthy instances.", "metadata": {"threat_id": "ALB_006", "threat_name": "Missing Health Checks in Target Group", "source": "An external client or an AWS service", "target": "AWS Application Load Balancer"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Application Load Balancer\nThreat: ALB Using Unsecured HTTP Protocol\nDescription: ALB target groups using HTTP may expose data to interception or manipulation.\nMitigation: Ensure AWS Load Balancer doesn't use HTTP protocol.", "metadata": {"threat_id": "ALB_039", "threat_name": "ALB Using Unsecured HTTP Protocol", "source": "An external client or an AWS service", "target": "AWS Application Load Balancer"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Application Load Balancer\nThreat: Unprotected ALB Listeners and Rules\nDescription: Improperly configured ALB listeners, rules, and target groups may allow insecure traffic or unauthorized access.\nMitigation: Ensure ALB listeners enforce HTTPS and security policies, and restrict access to trusted IPs and services.", "metadata": {"threat_id": "ALB_202", "threat_name": "Unprotected ALB Listeners and Rules", "source": "An external client or an AWS service", "target": "AWS Application Load Balancer"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Application Load Balancer\nThreat: Unsecured ALB Listener Certificates\nDescription: ALB listeners without properly assigned SSL/TLS certificates may expose services to man-in-the-middle (MITM) attacks.\nMitigation: Ensure ALB listeners use valid TLS certificates and enforce modern security policies.", "metadata": {"threat_id": "ALB_203", "threat_name": "Unsecured ALB Listener Certificates", "source": "An external client or an AWS service", "target": "AWS Application Load Balancer"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Application Load Balancer\nThreat: Unrestricted ALB Target Group Access\nDescription: Improperly configured target groups may expose backend services to unauthorized access or excessive traffic.\nMitigation: Ensure ALB target groups are restricted to specific sources and enforce security group policies.", "metadata": {"threat_id": "ALB_204", "threat_name": "Unrestricted ALB Target Group Access", "source": "An external client or an AWS service", "target": "AWS Application Load Balancer"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Application Load Balancer\nThreat: Unsecured ALB Listener Rules\nDescription: Weak or misconfigured listener rules may allow traffic redirection to untrusted endpoints.\nMitigation: Ensure ALB listener rules follow the principle of least privilege and allow traffic only to authorized destinations.", "metadata": {"threat_id": "ALB_205", "threat_name": "Unsecured ALB Listener Rules", "source": "An external client or an AWS service", "target": "AWS Application Load Balancer"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Athena\nThreat: Unencrypted Athena Database\nDescription: Athena databases that do not use encryption at rest expose query results and metadata to unauthorized access and potential data breaches.\nMitigation: Ensure Athena databases are configured with encryption enabled using AWS KMS to protect data at rest.", "metadata": {"threat_id": "ATHENA_001", "threat_name": "Unencrypted Athena Database", "source": "An external client or an AWS service", "target": "AWS Athena"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Athena\nThreat: Athena Workgroup Allows Clients to Disable Encryption\nDescription: Athena workgroups that do not enforce encryption allow clients to store unencrypted query results, exposing sensitive data to unauthorized access.\nMitigation: Ensure Athena workgroups enforce encryption settings to prevent clients from disabling encryption when storing query results.", "metadata": {"threat_id": "ATHENA_002", "threat_name": "Athena Workgroup Allows Clients to Disable Encryption", "source": "An external client or an AWS service", "target": "AWS Athena"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Athena\nThreat: Athena Workgroup Allows Clients to Disable Encryption\nDescription: Athena workgroups that do not enforce encryption allow clients to store unencrypted query results, exposing sensitive data to unauthorized access.\nMitigation: Ensure Athena workgroups enforce encryption settings to prevent clients from disabling encryption when storing query results.", "metadata": {"threat_id": "ATHENA_003", "threat_name": "Athena Workgroup Allows Clients to Disable Encryption", "source": "An external client or an AWS service", "target": "AWS Athena"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Athena\nThreat: Athena Workgroup Not Encrypted\nDescription: Athena workgroups that do not use encryption may store query results in an unprotected format, increasing the risk of data leakage and unauthorized access.\nMitigation: Ensure that AWS Athena workgroups are configured with encryption using AWS KMS to secure query results and prevent unauthorized access.", "metadata": {"threat_id": "ATHENA_002", "threat_name": "Athena Workgroup Not Encrypted", "source": "An external client or an AWS service", "target": "AWS Athena"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Aurora\nThreat: Unencrypted Aurora Database Cluster\nDescription: Aurora database clusters that do not use encryption at rest expose sensitive database contents to unauthorized access and potential data breaches.\nMitigation: Ensure Aurora database clusters are configured with encryption enabled using AWS KMS to protect data at rest.", "metadata": {"threat_id": "AURORA_001", "threat_name": "Unencrypted Aurora Database Cluster", "source": "An external client or an AWS service", "target": "AWS Aurora"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Aurora\nThreat: Unencrypted Aurora Database Cluster\nDescription: Aurora database clusters that do not use encryption at rest expose sensitive database contents to unauthorized access and potential data breaches.\nMitigation: Ensure Aurora database clusters are configured with encryption enabled using AWS KMS to protect data at rest.", "metadata": {"threat_id": "AURORA_002", "threat_name": "Unencrypted Aurora Database Cluster", "source": "An external client or an AWS service", "target": "AWS Aurora"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Auto Scaling\nThreat: Autoscaling Groups Without Tags for Launch Configurations\nDescription: Auto Scaling groups that do not supply tags to launch configurations may lack proper resource tracking, cost allocation, and access control enforcement.\nMitigation: Ensure that all Auto Scaling groups apply relevant tags to launch configurations for better resource management and compliance.", "metadata": {"threat_id": "AUTOSCALING_002", "threat_name": "Autoscaling Groups Without Tags for Launch Configurations", "source": "An external client or an AWS service", "target": "AWS Auto Scaling"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Auto Scaling\nThreat: EC2 Auto Scaling Groups Without Launch Templates\nDescription: Auto Scaling groups using launch configurations instead of launch templates may lack access to newer EC2 features and security improvements.\nMitigation: Ensure EC2 Auto Scaling groups use EC2 launch templates instead of deprecated launch configurations.", "metadata": {"threat_id": "AUTOSCALING_012", "threat_name": "EC2 Auto Scaling Groups Without Launch Templates", "source": "An external client or an AWS service", "target": "AWS Auto Scaling"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Backup\nThreat: AWS Backup Vault Not Encrypted with KMS CMK\nDescription: AWS Backup vaults that are not encrypted using AWS KMS CMK may store sensitive backup data in an unprotected state, increasing the risk of unauthorized access.\nMitigation: Ensure that AWS Backup vaults are encrypted at rest using AWS KMS CMK to protect backup data from unauthorized access and compliance violations.", "metadata": {"threat_id": "BACKUP_002", "threat_name": "AWS Backup Vault Not Encrypted with KMS CMK", "source": "An external client or an AWS service", "target": "AWS Backup"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Backup\nThreat: Insufficient Backup Frequency and Retention\nDescription: A backup plan with inadequate backup frequency or short retention periods increases the risk of data loss and non-compliance with recovery objectives.\nMitigation: Set backup plans to run at least daily and retain backups for a minimum recommended period (e.g., 35 days) to ensure sufficient restore points.", "metadata": {"threat_id": "STORAGE_001", "threat_name": "Insufficient Backup Frequency and Retention", "source": "An external client or an AWS service", "target": "AWS Backup"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Backup\nThreat: Unencrypted Recovery Points\nDescription: Storing backups without encryption at rest allows unauthorized individuals with storage-level access to view or extract sensitive data.\nMitigation: Enable server-side encryption (SSE) for recovery points using KMS, controlling key usage via IAM policies.", "metadata": {"threat_id": "STORAGE_002", "threat_name": "Unencrypted Recovery Points", "source": "An external client or an AWS service", "target": "AWS Backup"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Backup\nThreat: Manual Deletion of Recovery Points\nDescription: If manual deletion is not disabled, essential recovery points can be prematurely or maliciously removed, leading to irreversible data loss.\nMitigation: Disable manual deletion in the backup vault or implement retention lock policies to ensure critical backups cannot be deleted prematurely.", "metadata": {"threat_id": "STORAGE_003", "threat_name": "Manual Deletion of Recovery Points", "source": "An external client or an AWS service", "target": "AWS Backup"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Backup\nThreat: Insufficient Recovery Point Retention\nDescription: Recovery points that do not meet a minimum retention period increase the risk of losing restore capabilities for older or infrequently changed data.\nMitigation: Define and enforce minimum retention policies (e.g., 35 days) for each backup plan to maintain adequate historical restore points.", "metadata": {"threat_id": "STORAGE_004", "threat_name": "Insufficient Recovery Point Retention", "source": "An external client or an AWS service", "target": "AWS Backup"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Batch\nThreat: AWS Batch Job Defines a Privileged Container\nDescription: A privileged container in AWS Batch may have excessive permissions, increasing the risk of privilege escalation attacks.\nMitigation: Ensure AWS Batch job definitions do not define privileged containers to maintain least privilege security principles.", "metadata": {"threat_id": "BATCH_001", "threat_name": "AWS Batch Job Defines a Privileged Container", "source": "An external client or an AWS service", "target": "AWS Batch"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Bedrock\nThreat: Unencrypted Bedrock Agent\nDescription: If Bedrock Agent is not encrypted using a customer-managed key (CMK), sensitive data stored by the agent may be at risk of exposure.\nMitigation: Ensure Bedrock Agent is encrypted with a CMK to protect stored data.", "metadata": {"threat_id": "Bedrock_033", "threat_name": "Unencrypted Bedrock Agent", "source": "An external client or an AWS service", "target": "AWS Bedrock"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Bedrock\nThreat: Unencrypted Bedrock Agent\nDescription: If Bedrock Agent is not encrypted using a customer-managed key (CMK), sensitive data stored by the agent may be at risk of exposure.\nMitigation: Ensure Bedrock Agent is encrypted with a CMK to protect stored data.", "metadata": {"threat_id": "Bedrock_034", "threat_name": "Unencrypted Bedrock Agent", "source": "An external client or an AWS service", "target": "AWS Bedrock"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Bedrock\nThreat: AWS Bedrock Agent Without Guardrails\nDescription: Without guardrails, AWS Bedrock Agents may generate or process unauthorized or inappropriate responses, increasing risk.\nMitigation: Ensure AWS Bedrock agent is associated with Bedrock guardrails to maintain compliance and security policies.", "metadata": {"threat_id": "Bedrock_044", "threat_name": "AWS Bedrock Agent Without Guardrails", "source": "An external client or an AWS service", "target": "AWS Bedrock"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Certificate Manager\nThreat: Unvalidated ACM Certificates\nDescription: ACM certificates that are not properly validated may cause service disruptions due to expired or untrusted certificates.\nMitigation: Ensure ACM certificates have valid validation mechanisms such as DNS or email verification to maintain TLS security.", "metadata": {"threat_id": "ACM_091", "threat_name": "Unvalidated ACM Certificates", "source": "An external client or an AWS service", "target": "AWS Certificate Manager"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Certificate Manager\nThreat: Unprotected ACM Private Certificate Authority\nDescription: Improperly configured ACM Private CA may issue unauthorized certificates, leading to man-in-the-middle attacks and compliance violations.\nMitigation: Ensure ACM PCA is properly secured, logs certificate issuance, and enforces role-based access controls.", "metadata": {"threat_id": "ACM_092", "threat_name": "Unprotected ACM Private Certificate Authority", "source": "An external client or an AWS service", "target": "AWS Certificate Manager"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Certificate Manager\nThreat: Unprotected ACM PCA Policies\nDescription: Misconfigured ACM PCA policies may allow unauthorized certificate issuance, leading to security breaches and compliance violations.\nMitigation: Ensure ACM PCA policies restrict access to authorized entities and enforce logging for certificate issuance.", "metadata": {"threat_id": "ACMPCA_201", "threat_name": "Unprotected ACM PCA Policies", "source": "An external client or an AWS service", "target": "AWS Certificate Manager"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Certificate Manager\nThreat: Wildcard ACM Certificates\nDescription: Using wildcard certificates may lead to an increased attack surface if one subdomain is compromised.\nMitigation: Ensure ACM certificates are issued for specific domain names instead of using wildcards.", "metadata": {"threat_id": "ACM_029", "threat_name": "Wildcard ACM Certificates", "source": "An external client or an AWS service", "target": "AWS Certificate Manager"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Certificate Manager\nThreat: Expiring or Expired ACM Certificates\nDescription: An SSL/TLS certificate that is close to or past its expiration can break secure connections and expose data in transit to man-in-the-middle attacks.\nMitigation: Renew or replace expiring certificates ahead of the expiration date to maintain secure communication channels.", "metadata": {"threat_id": "SEC_003", "threat_name": "Expiring or Expired ACM Certificates", "source": "An external client or an AWS service", "target": "AWS Certificate Manager"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS CloudFormation\nThreat: CloudFormation Stacks Not Sending Event Notifications\nDescription: CloudFormation stacks that do not send event notifications to an SNS topic may prevent security teams from detecting stack changes and failures in a timely manner.\nMitigation: Ensure that CloudFormation stacks are configured to send event notifications to an SNS topic for improved monitoring and security alerting.", "metadata": {"threat_id": "CLOUDFORMATION_004", "threat_name": "CloudFormation Stacks Not Sending Event Notifications", "source": "An external client or an AWS service", "target": "AWS CloudFormation"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS CloudFront\nThreat: Unencrypted CloudFront Distribution Traffic\nDescription: CloudFront distributions that allow HTTP instead of enforcing HTTPS expose content to potential interception and tampering.\nMitigation: Set the CloudFront ViewerProtocolPolicy to enforce HTTPS-only traffic to ensure data is encrypted in transit.", "metadata": {"threat_id": "CLOUDFRONT_001", "threat_name": "Unencrypted CloudFront Distribution Traffic", "source": "An external client or an AWS service", "target": "AWS CloudFront"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS CloudFront\nThreat: Unencrypted CloudFront Distribution Traffic\nDescription: CloudFront distributions that allow HTTP instead of enforcing HTTPS expose content to potential interception and tampering.\nMitigation: Set the CloudFront ViewerProtocolPolicy to enforce HTTPS-only traffic to ensure data is encrypted in transit.", "metadata": {"threat_id": "CLOUDFRONT_002", "threat_name": "Unencrypted CloudFront Distribution Traffic", "source": "An external client or an AWS service", "target": "AWS CloudFront"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS CloudFront\nThreat: CloudFront Distribution Without WAF Protection\nDescription: CloudFront distributions that do not have AWS WAF enabled are at higher risk of web application attacks such as SQL injection, cross-site scripting (XSS), and DDoS.\nMitigation: Ensure AWS WAF is enabled on CloudFront distributions to protect against common web threats.", "metadata": {"threat_id": "CLOUDFRONT_003", "threat_name": "CloudFront Distribution Without WAF Protection", "source": "An external client or an AWS service", "target": "AWS CloudFront"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS CloudFront\nThreat: CloudFront Distribution Without WAF Protection\nDescription: CloudFront distributions that do not have AWS WAF enabled are at higher risk of web application attacks such as SQL injection, cross-site scripting (XSS), and DDoS.\nMitigation: Ensure AWS WAF is enabled on CloudFront distributions to protect against common web threats.", "metadata": {"threat_id": "CLOUDFRONT_004", "threat_name": "CloudFront Distribution Without WAF Protection", "source": "An external client or an AWS service", "target": "AWS CloudFront"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS CloudFront\nThreat: CloudFront Distribution Without Access Logging\nDescription: CloudFront distributions without access logging enabled lack visibility into content delivery access patterns, making it difficult to detect unauthorized access or abuse.\nMitigation: Enable AWS CloudFront access logging to capture detailed access logs for security monitoring and troubleshooting.", "metadata": {"threat_id": "CLOUDFRONT_005", "threat_name": "CloudFront Distribution Without Access Logging", "source": "An external client or an AWS service", "target": "AWS CloudFront"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS CloudFront\nThreat: CloudFront Distribution Without Access Logging\nDescription: CloudFront distributions without access logging enabled lack visibility into content delivery access patterns, making it difficult to detect unauthorized access or abuse.\nMitigation: Enable AWS CloudFront access logging to capture detailed access logs for security monitoring and troubleshooting.", "metadata": {"threat_id": "CLOUDFRONT_006", "threat_name": "CloudFront Distribution Without Access Logging", "source": "An external client or an AWS service", "target": "AWS CloudFront"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS CloudFront\nThreat: CloudFront Distribution Using Insecure TLS Version\nDescription: CloudFront distributions using TLS versions below 1.2 may be vulnerable to security weaknesses and attacks, such as protocol downgrade attacks.\nMitigation: Ensure that CloudFront distributions use TLS v1.2 or higher for secure transport encryption.", "metadata": {"threat_id": "CLOUDFRONT_003", "threat_name": "CloudFront Distribution Using Insecure TLS Version", "source": "An external client or an AWS service", "target": "AWS CloudFront"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS CloudFront\nThreat: CloudFront Distribution Not Enabled\nDescription: If CloudFront distribution is not enabled, applications relying on CDN services may suffer from performance degradation and security weaknesses.\nMitigation: Ensure CloudFront distribution is enabled to enhance security and performance of content delivery.", "metadata": {"threat_id": "CF_001", "threat_name": "CloudFront Distribution Not Enabled", "source": "An external client or an AWS service", "target": "AWS CloudFront"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS CloudFront\nThreat: CloudFront Missing Strict Transport Security\nDescription: If CloudFront response header policies do not enforce Strict Transport Security (HSTS), users may be vulnerable to downgrade attacks and MITM risks.\nMitigation: Ensure CloudFront response header policy enforces Strict Transport Security (HSTS) to protect against protocol downgrades and eavesdropping.", "metadata": {"threat_id": "CF_003", "threat_name": "CloudFront Missing Strict Transport Security", "source": "An external client or an AWS service", "target": "AWS CloudFront"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS CloudFront\nThreat: Missing Default Root Object in CloudFront\nDescription: A CloudFront distribution without a default root object may result in a poor user experience or expose unintended content.\nMitigation: Ensure CloudFront distributions have a default root object configured.", "metadata": {"threat_id": "CLOUDFRONT_002", "threat_name": "Missing Default Root Object in CloudFront", "source": "An external client or an AWS service", "target": "AWS CloudFront"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS CloudFront\nThreat: CloudFront Distribution Without Origin Failover\nDescription: CloudFront distributions without origin failover configured may experience service disruptions if the primary origin fails.\nMitigation: Ensure CloudFront distributions have origin failover configured for high availability.", "metadata": {"threat_id": "CLOUDFRONT_007", "threat_name": "CloudFront Distribution Without Origin Failover", "source": "An external client or an AWS service", "target": "AWS CloudFront"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS CloudFront\nThreat: Missing Geo Restriction in CloudFront\nDescription: CloudFront distributions without geo restrictions may expose content to unintended regions, increasing compliance and security risks.\nMitigation: Ensure AWS CloudFront web distribution has geo restriction enabled.", "metadata": {"threat_id": "CloudFront_035", "threat_name": "Missing Geo Restriction in CloudFront", "source": "An external client or an AWS service", "target": "AWS CloudFront"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS CloudFront\nThreat: CloudFront Distribution Without Response Headers Policy\nDescription: CloudFront distributions without a response headers policy may not enforce security headers, leaving applications vulnerable to attacks such as clickjacking and MIME sniffing.\nMitigation: Attach a response headers policy to the CloudFront distribution to enforce security headers such as Content-Security-Policy and X-Frame-Options.", "metadata": {"threat_id": "CFD_082", "threat_name": "CloudFront Distribution Without Response Headers Policy", "source": "An external client or an AWS service", "target": "AWS CloudFront"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS CloudFront\nThreat: CloudFront Distribution Without Custom SSL\nDescription: CloudFront distributions using default AWS SSL certificates instead of custom domain-specific certificates may expose data to security risks.\nMitigation: Ensure that all Amazon CloudFront distributions use a custom SSL certificate for secure HTTPS communication.", "metadata": {"threat_id": "CF_301", "threat_name": "CloudFront Distribution Without Custom SSL", "source": "An external client or an AWS service", "target": "AWS CloudFront"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS CloudFront\nThreat: CloudFront Distribution Missing Origin Access Control\nDescription: A CloudFront distribution without Origin Access enabled may allow unauthorized access to the underlying S3 bucket.\nMitigation: Ensure Origin Access Control is enabled to restrict access to the S3 bucket only via CloudFront.", "metadata": {"threat_id": "CFD_003", "threat_name": "CloudFront Distribution Missing Origin Access Control", "source": "An external client or an AWS service", "target": "AWS CloudFront"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS CloudFront\nThreat: CloudFront Distribution Using Insecure SSL Protocols\nDescription: CloudFront distributions using outdated or weak SSL protocols may expose data to interception and compromise.\nMitigation: Ensure AWS CloudFront distributions enforce secure TLS 1.2 or later for HTTPS communication.", "metadata": {"threat_id": "CFD_011", "threat_name": "CloudFront Distribution Using Insecure SSL Protocols", "source": "An external client or an AWS service", "target": "AWS CloudFront"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS CloudFront\nThreat: CloudFront Allows Non-HTTPS Connections\nDescription: CloudFront origins allowing HTTP connections may expose data to interception and man-in-the-middle attacks.\nMitigation: Enforce HTTPS-only origin protocol policy in CloudFront distributions to protect data in transit.", "metadata": {"threat_id": "CFD_030", "threat_name": "CloudFront Allows Non-HTTPS Connections", "source": "An external client or an AWS service", "target": "AWS CloudFront"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS CloudFront\nThreat: Access Logging Disabled\nDescription: If CloudFront access logs are not enabled, it becomes difficult to track and audit client requests, making suspicious activities or attacks more likely to go unnoticed.\nMitigation: Enable access logging in CloudFront and store logs securely (e.g., in an S3 bucket with restricted access) for monitoring and forensics.", "metadata": {"threat_id": "CF_001", "threat_name": "Access Logging Disabled", "source": "An external client or an AWS service", "target": "AWS CloudFront"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS CloudFront\nThreat: Distribution Not Protected by WAF\nDescription: Without an AWS WAF association, CloudFront distributions could be exposed to a variety of Layer 7 attacks, including injection and denial of service attempts.\nMitigation: Associate the distribution with AWS WAF and configure appropriate rules to filter out known attack vectors.", "metadata": {"threat_id": "CF_002", "threat_name": "Distribution Not Protected by WAF", "source": "An external client or an AWS service", "target": "AWS CloudFront"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS CloudFront\nThreat: No Custom SSL Certificate\nDescription: If the distribution is not using a custom SSL certificate, the site may present a less trusted or weaker TLS configuration to end users, potentially undermining security and user trust.\nMitigation: Use a custom SSL/TLS certificate (e.g., from ACM) to ensure secure and authenticated connections for CloudFront distributions.", "metadata": {"threat_id": "CF_003", "threat_name": "No Custom SSL Certificate", "source": "An external client or an AWS service", "target": "AWS CloudFront"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS CloudFront\nThreat: No Default Root Object Configured\nDescription: Without a default root object, users accessing the distribution root may encounter errors or be directed to unintended resources, increasing the risk of misconfigurations or unauthorized content serving.\nMitigation: Specify a default root object (e.g., index.html) so that client requests to the distribution\u2019s root are consistently and safely handled.", "metadata": {"threat_id": "CF_004", "threat_name": "No Default Root Object Configured", "source": "An external client or an AWS service", "target": "AWS CloudFront"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS CloudFront\nThreat: Deprecated SSL/TLS Protocols in Use\nDescription: If the distribution allows old or deprecated SSL/TLS protocols (e.g., SSLv3, TLS 1.0), attackers can leverage known vulnerabilities to eavesdrop or tamper with data in transit.\nMitigation: Restrict CloudFront to only modern TLS protocols and ciphers (e.g., TLS 1.2 or 1.3) in the security policy configuration.", "metadata": {"threat_id": "CF_005", "threat_name": "Deprecated SSL/TLS Protocols in Use", "source": "An external client or an AWS service", "target": "AWS CloudFront"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS CloudFront\nThreat: No Origin Access Identity (OAI)\nDescription: Without an OAI, content origins such as Amazon S3 could be publicly accessible, allowing direct bypass of CloudFront or unauthorized content retrieval.\nMitigation: Enable an origin access identity for private content in S3, ensuring only CloudFront can read objects from the origin.", "metadata": {"threat_id": "CF_006", "threat_name": "No Origin Access Identity (OAI)", "source": "An external client or an AWS service", "target": "AWS CloudFront"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS CloudFront\nThreat: No Origin Failover Configuration\nDescription: If failover is not enabled and the primary origin becomes unavailable, content delivery may be disrupted, impacting user experience and availability.\nMitigation: Configure origin failover with a secondary origin to maintain high availability if the primary origin fails.", "metadata": {"threat_id": "CF_007", "threat_name": "No Origin Failover Configuration", "source": "An external client or an AWS service", "target": "AWS CloudFront"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS CloudFront\nThreat: Server Name Indication (SNI) Not Enabled\nDescription: Disabling SNI can limit the use of secure connections on certain configurations and might force fallback to weaker security measures, risking data interception.\nMitigation: Enable SNI in CloudFront to support secure TLS connections for modern browsers and reduce the risk of fallback to insecure ciphers.", "metadata": {"threat_id": "CF_008", "threat_name": "Server Name Indication (SNI) Not Enabled", "source": "An external client or an AWS service", "target": "AWS CloudFront"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS CloudFront\nThreat: Unencrypted Traffic from CloudFront to Origin\nDescription: If the connection between CloudFront and its origin is not encrypted, an attacker on the network path can intercept or modify data in transit.\nMitigation: Enable HTTPS for origin connections to ensure end-to-end encryption and integrity of data from CloudFront to the origin.", "metadata": {"threat_id": "CF_009", "threat_name": "Unencrypted Traffic from CloudFront to Origin", "source": "An external client or an AWS service", "target": "AWS CloudFront"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS CloudFront\nThreat: Non-HTTPS Viewer Policy\nDescription: Allowing HTTP connections from the viewer to CloudFront can lead to data exposure or tampering in transit, especially for sensitive information.\nMitigation: Enforce HTTPS-only viewer connections to protect the confidentiality and integrity of content delivered by CloudFront.", "metadata": {"threat_id": "CF_010", "threat_name": "Non-HTTPS Viewer Policy", "source": "An external client or an AWS service", "target": "AWS CloudFront"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS CloudSearch\nThreat: CloudSearch Not Using Latest TLS\nDescription: Running AWS CloudSearch with an outdated TLS version increases the risk of data interception and security vulnerabilities.\nMitigation: Ensure AWS CloudSearch is configured to use the latest TLS version to secure data in transit.", "metadata": {"threat_id": "CS_001", "threat_name": "CloudSearch Not Using Latest TLS", "source": "An external client or an AWS service", "target": "AWS CloudSearch"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS CloudSearch\nThreat: CloudSearch Not Using HTTPS\nDescription: If CloudSearch does not enforce HTTPS, data transmitted over the network can be intercepted by attackers.\nMitigation: Ensure AWS CloudSearch enforces HTTPS connections for secure data transmission.", "metadata": {"threat_id": "CS_002", "threat_name": "CloudSearch Not Using HTTPS", "source": "An external client or an AWS service", "target": "AWS CloudSearch"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS CloudTrail\nThreat: Unencrypted CloudTrail Logs\nDescription: CloudTrail logs that are not encrypted expose audit logs to unauthorized access, potentially compromising forensic investigations and compliance.\nMitigation: Ensure CloudTrail logs are encrypted at rest using AWS KMS CMKs to protect sensitive log data.", "metadata": {"threat_id": "CLOUDTRAIL_001", "threat_name": "Unencrypted CloudTrail Logs", "source": "An external client or an AWS service", "target": "AWS CloudTrail"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS CloudTrail\nThreat: Unencrypted CloudTrail Logs\nDescription: CloudTrail logs that are not encrypted expose audit logs to unauthorized access, potentially compromising forensic investigations and compliance.\nMitigation: Ensure CloudTrail logs are encrypted at rest using AWS KMS CMKs to protect sensitive log data.", "metadata": {"threat_id": "CLOUDTRAIL_002", "threat_name": "Unencrypted CloudTrail Logs", "source": "An external client or an AWS service", "target": "AWS CloudTrail"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS CloudTrail\nThreat: CloudTrail Log File Validation Disabled\nDescription: CloudTrail logs without log file validation enabled can be tampered with, making it difficult to detect unauthorized changes.\nMitigation: Enable CloudTrail log file validation to ensure the integrity and authenticity of log data.", "metadata": {"threat_id": "CLOUDTRAIL_003", "threat_name": "CloudTrail Log File Validation Disabled", "source": "An external client or an AWS service", "target": "AWS CloudTrail"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS CloudTrail\nThreat: CloudTrail Log File Validation Disabled\nDescription: CloudTrail logs without log file validation enabled can be tampered with, making it difficult to detect unauthorized changes.\nMitigation: Enable CloudTrail log file validation to ensure the integrity and authenticity of log data.", "metadata": {"threat_id": "CLOUDTRAIL_004", "threat_name": "CloudTrail Log File Validation Disabled", "source": "An external client or an AWS service", "target": "AWS CloudTrail"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS CloudTrail\nThreat: CloudTrail Not Enabled in All Regions\nDescription: CloudTrail not enabled in all AWS regions increases the risk of missing security events in non-primary regions, potentially leading to undetected security breaches.\nMitigation: Ensure CloudTrail is enabled in all AWS regions to capture security-related events across the entire AWS account.", "metadata": {"threat_id": "CLOUDTRAIL_005", "threat_name": "CloudTrail Not Enabled in All Regions", "source": "An external client or an AWS service", "target": "AWS CloudTrail"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS CloudTrail\nThreat: CloudTrail Not Enabled in All Regions\nDescription: CloudTrail not enabled in all AWS regions increases the risk of missing security events in non-primary regions, potentially leading to undetected security breaches.\nMitigation: Ensure CloudTrail is enabled in all AWS regions to capture security-related events across the entire AWS account.", "metadata": {"threat_id": "CLOUDTRAIL_006", "threat_name": "CloudTrail Not Enabled in All Regions", "source": "An external client or an AWS service", "target": "AWS CloudTrail"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS CloudTrail\nThreat: CloudTrail Logging Not Enabled\nDescription: If CloudTrail logging is not enabled, user and API activities may not be recorded, leading to a lack of security auditing.\nMitigation: Ensure CloudTrail logging is enabled to monitor AWS account activities.", "metadata": {"threat_id": "CT_001", "threat_name": "CloudTrail Logging Not Enabled", "source": "An external client or an AWS service", "target": "AWS CloudTrail"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS CloudTrail\nThreat: CloudTrail Lacking SNS Notification\nDescription: If CloudTrail does not define an SNS Topic, security teams may not receive alerts on critical AWS API activity changes.\nMitigation: Ensure CloudTrail defines an SNS Topic to send security event notifications to administrators.", "metadata": {"threat_id": "CT_002", "threat_name": "CloudTrail Lacking SNS Notification", "source": "An external client or an AWS service", "target": "AWS CloudTrail"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS CloudTrail\nThreat: Unencrypted CloudTrail Event Data Store\nDescription: CloudTrail Event Data Stores that do not use Customer Managed Keys (CMKs) may lead to unauthorized access and data exposure.\nMitigation: Ensure CloudTrail Event Data Store uses CMK encryption to protect log data.", "metadata": {"threat_id": "CloudTrail_002", "threat_name": "Unencrypted CloudTrail Event Data Store", "source": "An external client or an AWS service", "target": "AWS CloudTrail"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS CloudTrail\nThreat: CloudTrail Not Integrated with CloudWatch Logs\nDescription: CloudTrail trails without integration with CloudWatch Logs may result in delayed detection of security events.\nMitigation: Ensure that all CloudTrail trails are integrated with CloudWatch Logs to enable real-time security monitoring.", "metadata": {"threat_id": "CloudTrail_062", "threat_name": "CloudTrail Not Integrated with CloudWatch Logs", "source": "An external client or an AWS service", "target": "AWS CloudTrail"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS CloudTrail\nThreat: CloudTrail Not Enabled\nDescription: If CloudTrail is disabled, AWS API activities are not recorded, making it difficult to detect security events or perform audits.\nMitigation: Enable CloudTrail across all regions and accounts to capture and monitor all API calls for compliance and security analysis.", "metadata": {"threat_id": "CT_001", "threat_name": "CloudTrail Not Enabled", "source": "An external client or an AWS service", "target": "AWS CloudTrail"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS CloudTrail\nThreat: No CloudWatch Logs Integration\nDescription: Without integration to CloudWatch Logs, suspicious or unwanted API calls go unmonitored in real time, delaying incident detection.\nMitigation: Enable CloudTrail logs to be sent to CloudWatch Logs for continuous monitoring and timely alerting on critical security events.", "metadata": {"threat_id": "CT_002", "threat_name": "No CloudWatch Logs Integration", "source": "An external client or an AWS service", "target": "AWS CloudTrail"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS CloudTrail\nThreat: Unencrypted CloudTrail Logs\nDescription: CloudTrail logs stored unencrypted in S3 can be read or tampered with by unauthorized actors with access to the underlying storage.\nMitigation: Enable encryption using KMS customer-managed keys for CloudTrail logs to protect the data at rest.", "metadata": {"threat_id": "CT_003", "threat_name": "Unencrypted CloudTrail Logs", "source": "An external client or an AWS service", "target": "AWS CloudTrail"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS CloudTrail\nThreat: Missing Log File Integrity Validation\nDescription: If log file validation is disabled, attackers can alter or remove log entries without easy detection, eroding forensic integrity.\nMitigation: Enable log file validation to ensure each CloudTrail file\u2019s authenticity and detect unauthorized modifications.", "metadata": {"threat_id": "CT_004", "threat_name": "Missing Log File Integrity Validation", "source": "An external client or an AWS service", "target": "AWS CloudTrail"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS CloudTrail\nThreat: S3 Data Event Logging Disabled\nDescription: When S3 data event logging is disabled, activity such as object-level reads/writes goes untracked, making it harder to spot malicious or accidental data access.\nMitigation: Enable S3 data events in CloudTrail to record object-level activities and maintain a comprehensive audit trail.", "metadata": {"threat_id": "CT_005", "threat_name": "S3 Data Event Logging Disabled", "source": "An external client or an AWS service", "target": "AWS CloudTrail"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS CloudTrail\nThreat: Security Trail Not Enabled\nDescription: Without a dedicated security trail, vital event categories (e.g., management events) may not be comprehensively tracked for security auditing.\nMitigation: Enable a dedicated CloudTrail security trail that captures all necessary management and data events for security governance.", "metadata": {"threat_id": "CT_006", "threat_name": "Security Trail Not Enabled", "source": "An external client or an AWS service", "target": "AWS CloudTrail"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS CloudTrail\nThreat: Single Region CloudTrail\nDescription: If CloudTrail is limited to one region, unauthorized or suspicious activities in other regions are not captured or monitored.\nMitigation: Enable multi-region CloudTrail to ensure all API activity across all regions is captured for comprehensive visibility.", "metadata": {"threat_id": "CT_007", "threat_name": "Single Region CloudTrail", "source": "An external client or an AWS service", "target": "AWS CloudTrail"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS CloudTrail\nThreat: CloudTrail Not Integrated with CloudWatch Logs\nDescription: Without sending CloudTrail logs to CloudWatch, administrators lack near real-time alerts on unauthorized activities.\nMitigation: Configure CloudTrail to stream logs to CloudWatch Logs, enabling continuous monitoring and automated alerting.", "metadata": {"threat_id": "SEC_007", "threat_name": "CloudTrail Not Integrated with CloudWatch Logs", "source": "An external client or an AWS service", "target": "AWS CloudTrail"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS CloudTrail\nThreat: CloudTrail Not Enabled\nDescription: If CloudTrail is disabled, critical API events go unrecorded, preventing audits and incident investigations.\nMitigation: Enable CloudTrail across all regions and organizations to maintain a full record of API activity.", "metadata": {"threat_id": "SEC_008", "threat_name": "CloudTrail Not Enabled", "source": "An external client or an AWS service", "target": "AWS CloudTrail"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS CloudTrail\nThreat: Unencrypted CloudTrail Logs\nDescription: Storing unencrypted logs risks exposure or tampering of sensitive information if the log storage is compromised.\nMitigation: Enable SSE-KMS or SSE-S3 encryption for CloudTrail logs to secure data at rest.", "metadata": {"threat_id": "SEC_009", "threat_name": "Unencrypted CloudTrail Logs", "source": "An external client or an AWS service", "target": "AWS CloudTrail"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS CloudTrail\nThreat: CloudTrail Log File Validation Disabled\nDescription: Without file validation, tampered logs could go undetected, impacting the reliability of forensic data.\nMitigation: Enable log file integrity validation in CloudTrail to detect unauthorized modifications.", "metadata": {"threat_id": "SEC_010", "threat_name": "CloudTrail Log File Validation Disabled", "source": "An external client or an AWS service", "target": "AWS CloudTrail"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS CloudTrail\nThreat: No Dedicated Security Trail\nDescription: If a dedicated security trail is not enabled, certain types of events may be overlooked or conflated with other logs.\nMitigation: Enable a dedicated security trail capturing all management and data events relevant to security use cases.", "metadata": {"threat_id": "SEC_011", "threat_name": "No Dedicated Security Trail", "source": "An external client or an AWS service", "target": "AWS CloudTrail"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS CloudWatch\nThreat: CloudWatch Log Group Without Retention Policy\nDescription: CloudWatch log groups that do not specify a retention period may lead to unnecessary storage costs and loss of important logs due to accidental deletion.\nMitigation: Ensure that CloudWatch log groups specify retention days to retain logs as per compliance and operational needs.", "metadata": {"threat_id": "CLOUDWATCH_001", "threat_name": "CloudWatch Log Group Without Retention Policy", "source": "An external client or an AWS service", "target": "AWS CloudWatch"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS CloudWatch\nThreat: CloudWatch Log Group Without Retention Policy\nDescription: CloudWatch log groups that do not specify a retention period may lead to unnecessary storage costs and loss of important logs due to accidental deletion.\nMitigation: Ensure that CloudWatch log groups specify retention days to retain logs as per compliance and operational needs.", "metadata": {"threat_id": "CLOUDWATCH_002", "threat_name": "CloudWatch Log Group Without Retention Policy", "source": "An external client or an AWS service", "target": "AWS CloudWatch"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS CloudWatch\nThreat: CloudWatch Log Group Not Encrypted Using KMS\nDescription: CloudWatch log groups that are not encrypted using AWS KMS may store sensitive log data without adequate protection, increasing the risk of unauthorized access.\nMitigation: Ensure that all CloudWatch log groups are encrypted using AWS KMS to protect log data and comply with security best practices.", "metadata": {"threat_id": "LOGS_003", "threat_name": "CloudWatch Log Group Not Encrypted Using KMS", "source": "An external client or an AWS service", "target": "AWS CloudWatch"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS CloudWatch\nThreat: Disabled CloudWatch Alarm Actions\nDescription: CloudWatch alarms without actions enabled may fail to notify administrators about critical events.\nMitigation: Ensure that CloudWatch alarm actions are enabled to trigger notifications and automated responses.", "metadata": {"threat_id": "CLOUDWATCH_018", "threat_name": "Disabled CloudWatch Alarm Actions", "source": "An external client or an AWS service", "target": "AWS CloudWatch"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS CloudWatch\nThreat: Insufficient Log Retention in CloudWatch\nDescription: CloudWatch logs with insufficient retention periods may result in the loss of critical security and operational data.\nMitigation: Ensure CloudWatch log groups retain logs for at least 1 year to support compliance and security investigations.", "metadata": {"threat_id": "CW_001", "threat_name": "Insufficient Log Retention in CloudWatch", "source": "An external client or an AWS service", "target": "AWS CloudWatch"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS CloudWatch\nThreat: CloudWatch Alarms Missing Actions\nDescription: Alarms without defined actions do not trigger automated remediation or notifications, delaying incident response.\nMitigation: Configure alarm actions (e.g., SNS notifications, Auto Scaling policies) for triggered alarms, ensuring timely responses.", "metadata": {"threat_id": "SEC_012", "threat_name": "CloudWatch Alarms Missing Actions", "source": "An external client or an AWS service", "target": "AWS CloudWatch"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS CodeArtifact\nThreat: CodeArtifact Domain Not Encrypted with KMS CMK\nDescription: If CodeArtifact domains are not encrypted, they may expose software packages and dependencies to unauthorized access.\nMitigation: Ensure AWS CodeArtifact Domain is encrypted using KMS CMK to secure package repositories.", "metadata": {"threat_id": "CA_001", "threat_name": "CodeArtifact Domain Not Encrypted with KMS CMK", "source": "An external client or an AWS service", "target": "AWS CodeArtifact"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS CodeBuild\nThreat: CodeBuild Project Encryption Disabled\nDescription: CodeBuild projects without encryption enabled store artifacts and logs in an unprotected state, increasing the risk of data leaks.\nMitigation: Ensure AWS CodeBuild projects use encryption for storage and logs by enabling AWS KMS encryption.", "metadata": {"threat_id": "CODEBUILD_001", "threat_name": "CodeBuild Project Encryption Disabled", "source": "An external client or an AWS service", "target": "AWS CodeBuild"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS CodeBuild\nThreat: CodeBuild Project Encryption Disabled\nDescription: CodeBuild projects without encryption enabled store artifacts and logs in an unprotected state, increasing the risk of data leaks.\nMitigation: Ensure AWS CodeBuild projects use encryption for storage and logs by enabling AWS KMS encryption.", "metadata": {"threat_id": "CODEBUILD_002", "threat_name": "CodeBuild Project Encryption Disabled", "source": "An external client or an AWS service", "target": "AWS CodeBuild"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS CodeBuild\nThreat: AWS CodeBuild Project Not Encrypted Using CMK\nDescription: CodeBuild projects that do not use AWS KMS Customer Managed Keys (CMKs) may store build artifacts without adequate encryption, increasing security risks.\nMitigation: Ensure that AWS CodeBuild projects are encrypted using AWS KMS CMK to protect build artifacts and maintain security compliance.", "metadata": {"threat_id": "CODEBUILD_002", "threat_name": "AWS CodeBuild Project Not Encrypted Using CMK", "source": "An external client or an AWS service", "target": "AWS CodeBuild"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS CodeBuild\nThreat: Unencrypted CodeBuild S3 Logs\nDescription: CodeBuild S3 logs without encryption may expose sensitive build information to unauthorized access.\nMitigation: Ensure CodeBuild S3 logs are encrypted using Customer Managed Keys (CMKs).", "metadata": {"threat_id": "CODEBUILD_008", "threat_name": "Unencrypted CodeBuild S3 Logs", "source": "An external client or an AWS service", "target": "AWS CodeBuild"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS CodeBuild\nThreat: Missing Logging Configuration in CodeBuild\nDescription: CodeBuild projects without a logging configuration may hinder forensic investigations and compliance monitoring.\nMitigation: Ensure all AWS CodeBuild project environments have a logging configuration enabled.", "metadata": {"threat_id": "CODEBUILD_011", "threat_name": "Missing Logging Configuration in CodeBuild", "source": "An external client or an AWS service", "target": "AWS CodeBuild"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS CodeBuild\nThreat: Privileged Mode Enabled in CodeBuild Projects\nDescription: CodeBuild projects with privileged mode enabled may lead to container breakout and privilege escalation risks.\nMitigation: Ensure CodeBuild project environments do not have privileged mode enabled unless explicitly required.", "metadata": {"threat_id": "CODEBUILD_013", "threat_name": "Privileged Mode Enabled in CodeBuild Projects", "source": "An external client or an AWS service", "target": "AWS CodeBuild"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS CodeBuild\nThreat: Unencrypted Build Artifacts\nDescription: If build artifacts are not encrypted, malicious actors or unauthorized users with access to the artifact storage may view or modify sensitive data.\nMitigation: Enable server-side encryption for CodeBuild project artifacts, using an AWS KMS customer-managed key to control and audit access.", "metadata": {"threat_id": "CODEBUILD_001", "threat_name": "Unencrypted Build Artifacts", "source": "An external client or an AWS service", "target": "AWS CodeBuild"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS CodeBuild\nThreat: Privileged Build Environment\nDescription: Running a privileged container can grant the build process overly broad access to the host or other AWS resources, potentially leading to privilege escalation.\nMitigation: Configure the build environment to run in non-privileged mode, limiting the build container's ability to access host resources.", "metadata": {"threat_id": "CODEBUILD_002", "threat_name": "Privileged Build Environment", "source": "An external client or an AWS service", "target": "AWS CodeBuild"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS CodeBuild\nThreat: AWS Credentials in Environment Variables\nDescription: Embedding AWS credentials in environment variables risks accidental exposure in logs or build artifacts, allowing attackers to reuse these credentials.\nMitigation: Use AWS Systems Manager Parameter Store or AWS Secrets Manager for secure credential retrieval, avoiding credentials in plain text environment variables.", "metadata": {"threat_id": "CODEBUILD_003", "threat_name": "AWS Credentials in Environment Variables", "source": "An external client or an AWS service", "target": "AWS CodeBuild"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS CodeBuild\nThreat: Build Logging Disabled\nDescription: Without logging enabled, suspicious or erroneous build activities may go unnoticed, complicating audits and incident investigations.\nMitigation: Enable detailed logging in CodeBuild projects to capture build output and diagnostic information for review and forensics.", "metadata": {"threat_id": "CODEBUILD_004", "threat_name": "Build Logging Disabled", "source": "An external client or an AWS service", "target": "AWS CodeBuild"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS CodeBuild\nThreat: Unencrypted S3 Logs\nDescription: Storing build logs unencrypted in S3 could allow malicious actors who gain access to the S3 bucket to read potentially sensitive information.\nMitigation: Enable default encryption on the S3 bucket or specify SSE-KMS for log delivery to protect build logs at rest.", "metadata": {"threat_id": "CODEBUILD_005", "threat_name": "Unencrypted S3 Logs", "source": "An external client or an AWS service", "target": "AWS CodeBuild"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS CodeBuild\nThreat: Insecure or Invalid Source Repository URL\nDescription: If the build project references an unverified or malicious repository URL, attackers can inject malicious code or compromise the software supply chain.\nMitigation: Verify and validate repository URLs, ensuring they come from trusted sources (e.g., AWS CodeCommit, GitHub with secure authentication).", "metadata": {"threat_id": "CODEBUILD_006", "threat_name": "Insecure or Invalid Source Repository URL", "source": "An external client or an AWS service", "target": "AWS CodeBuild"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS CodeCommit\nThreat: Insufficient CodeCommit Approval Rules\nDescription: If CodeCommit branch changes do not require at least 2 approvals, unauthorized changes may be introduced without proper review.\nMitigation: Ensure CodeCommit branch changes have at least 2 approvals before merging to maintain proper code review processes.", "metadata": {"threat_id": "CC_001", "threat_name": "Insufficient CodeCommit Approval Rules", "source": "An external client or an AWS service", "target": "AWS CodeCommit"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS CodeCommit\nThreat: CodeCommit Without Approval Rules\nDescription: Repositories without approval rules may allow unverified changes, leading to potential security vulnerabilities and compliance violations.\nMitigation: Ensure AWS CodeCommit repositories are configured with approval rules to enforce peer review and secure code changes.", "metadata": {"threat_id": "CodeCommit_088", "threat_name": "CodeCommit Without Approval Rules", "source": "An external client or an AWS service", "target": "AWS CodeCommit"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS CodeCommit\nThreat: Lack of CodeCommit Approval Rules\nDescription: Repositories without approval rules may allow unverified changes, leading to security vulnerabilities.\nMitigation: Ensure CodeCommit repositories enforce mandatory approval rules before merging pull requests.", "metadata": {"threat_id": "CODECOMMIT_101", "threat_name": "Lack of CodeCommit Approval Rules", "source": "An external client or an AWS service", "target": "AWS CodeCommit"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS CodeGuru Reviewer\nThreat: Unencrypted AWS CodeGuru Reviewer Repository Association\nDescription: Without encryption, sensitive repository data used by AWS CodeGuru Reviewer may be at risk of unauthorized access.\nMitigation: Ensure AWS CodeGuru Reviewer repository association is encrypted using a customer-managed key (CMK).", "metadata": {"threat_id": "CodeGuru_042", "threat_name": "Unencrypted AWS CodeGuru Reviewer Repository Association", "source": "An external client or an AWS service", "target": "AWS CodeGuru Reviewer"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS CodePipeline\nThreat: CodePipeline Artifact Store Not Using KMS CMK\nDescription: Artifacts stored in AWS CodePipeline without encryption may expose application code and sensitive data.\nMitigation: Ensure AWS CodePipeline artifact store is encrypted using a KMS CMK.", "metadata": {"threat_id": "CP_001", "threat_name": "CodePipeline Artifact Store Not Using KMS CMK", "source": "An external client or an AWS service", "target": "AWS CodePipeline"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Cognito\nThreat: Unauthenticated Guest Access in Cognito\nDescription: Allowing unauthenticated guest access to Cognito identity pools can lead to unauthorized access to AWS resources.\nMitigation: Ensure AWS Cognito identity pool does not allow unauthenticated guest access and requires authentication for resource access.", "metadata": {"threat_id": "Cognito_026", "threat_name": "Unauthenticated Guest Access in Cognito", "source": "An external client or an AWS service", "target": "AWS Cognito"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Comprehend\nThreat: Comprehend Entity Recognizer Model Lacks Encryption\nDescription: If the Comprehend Entity Recognizer model is not encrypted using KMS CMK, model data may be at risk of exposure.\nMitigation: Ensure Comprehend Entity Recognizer model is encrypted using a customer-managed KMS key (CMK).", "metadata": {"threat_id": "CP_007", "threat_name": "Comprehend Entity Recognizer Model Lacks Encryption", "source": "An external client or an AWS service", "target": "AWS Comprehend"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Comprehend\nThreat: Comprehend Entity Recognizer Volume Lacks Encryption\nDescription: If Comprehend Entity Recognizer volume storage is not encrypted using KMS CMK, sensitive information may be exposed.\nMitigation: Ensure Comprehend Entity Recognizer volume is encrypted using a customer-managed KMS key (CMK).", "metadata": {"threat_id": "CP_008", "threat_name": "Comprehend Entity Recognizer Volume Lacks Encryption", "source": "An external client or an AWS service", "target": "AWS Comprehend"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Config\nThreat: AWS Config Not Enabled in All Regions\nDescription: Without AWS Config enabled across all regions, organizations may miss critical configuration changes and security compliance violations.\nMitigation: Ensure AWS Config is enabled in all AWS regions to provide continuous monitoring and compliance visibility across cloud resources.", "metadata": {"threat_id": "CONFIG_001", "threat_name": "AWS Config Not Enabled in All Regions", "source": "An external client or an AWS service", "target": "AWS Config"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Config\nThreat: AWS Config Recorder Not Enabled\nDescription: Without AWS Config recording all supported resources, security misconfigurations and compliance violations may go undetected.\nMitigation: Enable AWS Config to record all supported resources and ensure the configuration recorder is active.", "metadata": {"threat_id": "CFG_002", "threat_name": "AWS Config Recorder Not Enabled", "source": "An external client or an AWS service", "target": "AWS Config"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Connect\nThreat: Connect Instance Kinesis Video Stream Storage Lacks Encryption\nDescription: If Connect Instance Kinesis Video Stream storage is not encrypted with CMK, sensitive video data may be exposed to unauthorized access.\nMitigation: Ensure Connect Instance Kinesis Video Stream Storage Config is encrypted using a customer-managed KMS key (CMK).", "metadata": {"threat_id": "CC_009", "threat_name": "Connect Instance Kinesis Video Stream Storage Lacks Encryption", "source": "An external client or an AWS service", "target": "AWS Connect"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Connect\nThreat: Connect Instance S3 Storage Lacks Encryption\nDescription: If Connect Instance S3 Storage Config does not use CMK encryption, sensitive data stored in S3 may be accessible by unauthorized entities.\nMitigation: Ensure Connect Instance S3 Storage Config is encrypted using a customer-managed KMS key (CMK).", "metadata": {"threat_id": "CC_010", "threat_name": "Connect Instance S3 Storage Lacks Encryption", "source": "An external client or an AWS service", "target": "AWS Connect"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS DAX\nThreat: Unencrypted DAX Cluster\nDescription: DAX clusters that do not use encryption at rest expose cached data to unauthorized access, increasing the risk of data leakage and compromise.\nMitigation: Enable encryption at rest for AWS DAX clusters using AWS KMS to protect sensitive data.", "metadata": {"threat_id": "DAX_001", "threat_name": "Unencrypted DAX Cluster", "source": "An external client or an AWS service", "target": "AWS DAX"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS DAX\nThreat: Unencrypted DAX Cluster\nDescription: DAX clusters that do not use encryption at rest expose cached data to unauthorized access, increasing the risk of data leakage and compromise.\nMitigation: Enable encryption at rest for AWS DAX clusters using AWS KMS to protect sensitive data.", "metadata": {"threat_id": "DAX_002", "threat_name": "Unencrypted DAX Cluster", "source": "An external client or an AWS service", "target": "AWS DAX"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS DAX\nThreat: DAX Cluster Not Using TLS\nDescription: If the DAX cluster endpoint is not using TLS, data transmission may be vulnerable to interception and tampering.\nMitigation: Ensure that DAX cluster endpoints are configured to use TLS for secure data transmission.", "metadata": {"threat_id": "DAX_001", "threat_name": "DAX Cluster Not Using TLS", "source": "An external client or an AWS service", "target": "AWS DAX"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS DLM\nThreat: Unencrypted Cross-Region DLM Events\nDescription: If DLM cross-region events are not encrypted, sensitive lifecycle management data may be exposed during transit.\nMitigation: Ensure DLM cross-region events are encrypted using a Customer Managed Key (CMK).", "metadata": {"threat_id": "DLM_001", "threat_name": "Unencrypted Cross-Region DLM Events", "source": "An external client or an AWS service", "target": "AWS DLM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS DLM\nThreat: Unencrypted Cross-Region DLM Schedules\nDescription: If DLM cross-region schedules are not encrypted, lifecycle policy details may be at risk of unauthorized access.\nMitigation: Ensure DLM cross-region schedules are encrypted using a Customer Managed Key (CMK).", "metadata": {"threat_id": "DLM_002", "threat_name": "Unencrypted Cross-Region DLM Schedules", "source": "An external client or an AWS service", "target": "AWS DLM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS DMS\nThreat: Publicly Accessible DMS Replication Instance\nDescription: DMS replication instances that are publicly accessible increase the risk of unauthorized access to data replication processes, potentially leading to data breaches.\nMitigation: Ensure that DMS replication instances are deployed in private subnets and access is restricted through security groups and IAM policies.", "metadata": {"threat_id": "DMS_001", "threat_name": "Publicly Accessible DMS Replication Instance", "source": "An external client or an AWS service", "target": "AWS DMS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS DMS\nThreat: Publicly Accessible DMS Replication Instance\nDescription: DMS replication instances that are publicly accessible increase the risk of unauthorized access to data replication processes, potentially leading to data breaches.\nMitigation: Ensure that DMS replication instances are deployed in private subnets and access is restricted through security groups and IAM policies.", "metadata": {"threat_id": "DMS_002", "threat_name": "Publicly Accessible DMS Replication Instance", "source": "An external client or an AWS service", "target": "AWS DMS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS DMS\nThreat: DMS Replication Instance Not Encrypted with KMS CMK\nDescription: A DMS replication instance that is not encrypted with AWS KMS CMK may expose sensitive data during migration or replication.\nMitigation: Ensure AWS DMS replication instances are encrypted using AWS KMS CMK for secure data replication.", "metadata": {"threat_id": "DMS_003", "threat_name": "DMS Replication Instance Not Encrypted with KMS CMK", "source": "An external client or an AWS service", "target": "AWS DMS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS DMS\nThreat: DMS Replication Instance Not Receiving Minor Upgrades Automatically\nDescription: If minor upgrades are not enabled, the AWS DMS replication instance may run outdated software, increasing security risks.\nMitigation: Ensure AWS DMS replication instances are set to receive automatic minor upgrades.", "metadata": {"threat_id": "DMS_004", "threat_name": "DMS Replication Instance Not Receiving Minor Upgrades Automatically", "source": "An external client or an AWS service", "target": "AWS DMS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS DMS\nThreat: DMS Endpoint Without CMK Encryption\nDescription: AWS DMS endpoints that do not use Customer Managed Keys (CMK) for encryption may expose sensitive migration data.\nMitigation: Ensure AWS DMS endpoints use CMKs to encrypt data in transit and at rest.", "metadata": {"threat_id": "DMS_004", "threat_name": "DMS Endpoint Without CMK Encryption", "source": "An external client or an AWS service", "target": "AWS DMS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS DMS\nThreat: Unencrypted DMS S3 Endpoint\nDescription: AWS DMS S3 endpoints that do not use CMK encryption may expose migration data to unauthorized access.\nMitigation: Ensure AWS DMS S3 endpoints are encrypted using Customer Managed Keys (CMKs).", "metadata": {"threat_id": "DMS_006", "threat_name": "Unencrypted DMS S3 Endpoint", "source": "An external client or an AWS service", "target": "AWS DMS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS DMS\nThreat: AWS DMS Endpoint Lacking SSL Configuration\nDescription: DMS endpoints without SSL enabled may expose sensitive data to eavesdropping during migration.\nMitigation: Ensure all AWS DMS endpoints use SSL/TLS to encrypt data in transit.", "metadata": {"threat_id": "DMS_005", "threat_name": "AWS DMS Endpoint Lacking SSL Configuration", "source": "An external client or an AWS service", "target": "AWS DMS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS DataSync\nThreat: Exposed Secrets in DataSync Location Object Storage\nDescription: Improperly configured DataSync Location Object Storage may expose sensitive credentials, leading to data leaks.\nMitigation: Ensure that DataSync Location Object Storage does not store or expose sensitive credentials in configurations.", "metadata": {"threat_id": "DataSync_003", "threat_name": "Exposed Secrets in DataSync Location Object Storage", "source": "An external client or an AWS service", "target": "AWS DataSync"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS DocumentDB\nThreat: Unencrypted DocumentDB Cluster\nDescription: DocumentDB clusters that do not use encryption at rest expose sensitive database contents to unauthorized access and potential data breaches.\nMitigation: Ensure AWS DocumentDB clusters are configured with encryption enabled using AWS KMS to protect data at rest.", "metadata": {"threat_id": "DOCDB_001", "threat_name": "Unencrypted DocumentDB Cluster", "source": "An external client or an AWS service", "target": "AWS DocumentDB"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS DocumentDB\nThreat: Unencrypted DocumentDB Cluster\nDescription: DocumentDB clusters that do not use encryption at rest expose sensitive database contents to unauthorized access and potential data breaches.\nMitigation: Ensure AWS DocumentDB clusters are configured with encryption enabled using AWS KMS to protect data at rest.", "metadata": {"threat_id": "DOCDB_002", "threat_name": "Unencrypted DocumentDB Cluster", "source": "An external client or an AWS service", "target": "AWS DocumentDB"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS DocumentDB\nThreat: DocumentDB Logging Disabled\nDescription: DocumentDB clusters without logging enabled lack visibility into database queries and access patterns, increasing the risk of undetected security incidents.\nMitigation: Ensure DocumentDB logging is enabled to capture audit logs for compliance and security monitoring.", "metadata": {"threat_id": "DOCDB_003", "threat_name": "DocumentDB Logging Disabled", "source": "An external client or an AWS service", "target": "AWS DocumentDB"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS DocumentDB\nThreat: DocumentDB Logging Disabled\nDescription: DocumentDB clusters without logging enabled lack visibility into database queries and access patterns, increasing the risk of undetected security incidents.\nMitigation: Ensure DocumentDB logging is enabled to capture audit logs for compliance and security monitoring.", "metadata": {"threat_id": "DOCDB_004", "threat_name": "DocumentDB Logging Disabled", "source": "An external client or an AWS service", "target": "AWS DocumentDB"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS DocumentDB\nThreat: DocumentDB TLS Disabled\nDescription: DocumentDB clusters with TLS disabled allow unencrypted communication, exposing sensitive database traffic to interception and unauthorized access.\nMitigation: Ensure that TLS is enabled in DocumentDB cluster parameter groups to enforce secure connections for data protection.", "metadata": {"threat_id": "DOCDB_005", "threat_name": "DocumentDB TLS Disabled", "source": "An external client or an AWS service", "target": "AWS DocumentDB"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS DocumentDB\nThreat: DocumentDB TLS Disabled\nDescription: DocumentDB clusters with TLS disabled allow unencrypted communication, exposing sensitive database traffic to interception and unauthorized access.\nMitigation: Ensure that TLS is enabled in DocumentDB cluster parameter groups to enforce secure connections for data protection.", "metadata": {"threat_id": "DOCDB_006", "threat_name": "DocumentDB TLS Disabled", "source": "An external client or an AWS service", "target": "AWS DocumentDB"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS DocumentDB\nThreat: DocumentDB Audit Logging Disabled\nDescription: DocumentDB clusters without audit logs enabled lack visibility into database activity, making it difficult to detect unauthorized access or suspicious behavior.\nMitigation: Ensure that DocumentDB audit logging is enabled to capture database activity logs for compliance and security monitoring.", "metadata": {"threat_id": "DOCDB_007", "threat_name": "DocumentDB Audit Logging Disabled", "source": "An external client or an AWS service", "target": "AWS DocumentDB"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS DocumentDB\nThreat: DocumentDB Audit Logging Disabled\nDescription: DocumentDB clusters without audit logs enabled lack visibility into database activity, making it difficult to detect unauthorized access or suspicious behavior.\nMitigation: Ensure that DocumentDB audit logging is enabled to capture database activity logs for compliance and security monitoring.", "metadata": {"threat_id": "DOCDB_008", "threat_name": "DocumentDB Audit Logging Disabled", "source": "An external client or an AWS service", "target": "AWS DocumentDB"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS DocumentDB\nThreat: DocumentDB Not Encrypted with KMS\nDescription: DocumentDB clusters that are not encrypted using AWS KMS CMK may store sensitive data in an unprotected format, increasing security risks.\nMitigation: Ensure that DocumentDB clusters are encrypted using AWS KMS CMK to enhance security and compliance.", "metadata": {"threat_id": "DOCDB_004", "threat_name": "DocumentDB Not Encrypted with KMS", "source": "An external client or an AWS service", "target": "AWS DocumentDB"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS DocumentDB\nThreat: Unencrypted DocumentDB Global Cluster\nDescription: DocumentDB global clusters that are not encrypted at rest may lead to data exposure and compliance violations.\nMitigation: Ensure encryption at rest is enabled for DocumentDB global clusters using AWS KMS.", "metadata": {"threat_id": "DocDB_001", "threat_name": "Unencrypted DocumentDB Global Cluster", "source": "An external client or an AWS service", "target": "AWS DocumentDB"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS DocumentDB\nThreat: Inadequate DocumentDB Backup Retention\nDescription: A short backup retention period may result in loss of critical data in case of failures or incidents.\nMitigation: Ensure DocumentDB has an adequate backup retention period to meet business continuity and compliance requirements.", "metadata": {"threat_id": "DocDB_020", "threat_name": "Inadequate DocumentDB Backup Retention", "source": "An external client or an AWS service", "target": "AWS DocumentDB"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS DynamoDB\nThreat: DynamoDB Point-in-Time Recovery Disabled\nDescription: DynamoDB tables without Point-in-Time Recovery (PITR) enabled risk data loss due to accidental deletion, corruption, or malicious activity.\nMitigation: Enable Point-in-Time Recovery (PITR) for DynamoDB tables to allow data restoration in case of an incident.", "metadata": {"threat_id": "DDB_001", "threat_name": "DynamoDB Point-in-Time Recovery Disabled", "source": "An external client or an AWS service", "target": "AWS DynamoDB"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS DynamoDB\nThreat: DynamoDB Point-in-Time Recovery Disabled\nDescription: DynamoDB tables without Point-in-Time Recovery (PITR) enabled risk data loss due to accidental deletion, corruption, or malicious activity.\nMitigation: Enable Point-in-Time Recovery (PITR) for DynamoDB tables to allow data restoration in case of an incident.", "metadata": {"threat_id": "DDB_002", "threat_name": "DynamoDB Point-in-Time Recovery Disabled", "source": "An external client or an AWS service", "target": "AWS DynamoDB"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS DynamoDB\nThreat: DynamoDB Table Not Encrypted with Customer Managed CMK\nDescription: DynamoDB tables not encrypted with a KMS Customer Managed Key (CMK) rely on default AWS-managed encryption, which limits control over key management and access policies.\nMitigation: Ensure DynamoDB tables are encrypted using a Customer Managed KMS Key (CMK) to enforce stronger access controls and meet compliance requirements.", "metadata": {"threat_id": "DYNAMODB_003", "threat_name": "DynamoDB Table Not Encrypted with Customer Managed CMK", "source": "An external client or an AWS service", "target": "AWS DynamoDB"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS DynamoDB\nThreat: DynamoDB Table Not Encrypted with Customer Managed KMS Key\nDescription: DynamoDB tables that are not encrypted using a Customer Managed KMS Key (CMK) may be vulnerable to unauthorized access and data breaches.\nMitigation: Ensure that DynamoDB tables are encrypted using an AWS KMS Customer Managed Key (CMK) to enhance data security and compliance.", "metadata": {"threat_id": "DDB_001", "threat_name": "DynamoDB Table Not Encrypted with Customer Managed KMS Key", "source": "An external client or an AWS service", "target": "AWS DynamoDB"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS DynamoDB\nThreat: DynamoDB Global Table Point-in-Time Recovery Not Enabled\nDescription: DynamoDB global tables without point-in-time recovery enabled may be unable to restore lost or corrupted data, leading to business disruptions.\nMitigation: Ensure that point-in-time recovery is enabled for all DynamoDB global tables to provide data recovery options in case of accidental deletions or corruption.", "metadata": {"threat_id": "DYNAMODB_003", "threat_name": "DynamoDB Global Table Point-in-Time Recovery Not Enabled", "source": "An external client or an AWS service", "target": "AWS DynamoDB"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS DynamoDB\nThreat: Unencrypted DynamoDB Table Replica\nDescription: If a DynamoDB table replica is not encrypted using a customer-managed CMK, replicated data may be vulnerable to unauthorized access.\nMitigation: Ensure DynamoDB table replicas are encrypted using a customer-managed KMS key (CMK).", "metadata": {"threat_id": "DDB_001", "threat_name": "Unencrypted DynamoDB Table Replica", "source": "An external client or an AWS service", "target": "AWS DynamoDB"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS DynamoDB\nThreat: DynamoDB Tables Without Auto Scaling\nDescription: DynamoDB tables without Auto Scaling enabled may suffer from performance issues or excessive cost due to improper capacity planning.\nMitigation: Ensure that Auto Scaling is enabled on DynamoDB tables to automatically adjust read and write capacity based on demand.", "metadata": {"threat_id": "DDB_069", "threat_name": "DynamoDB Tables Without Auto Scaling", "source": "An external client or an AWS service", "target": "AWS DynamoDB"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS DynamoDB\nThreat: No DynamoDB Autoscaling\nDescription: A table without autoscaling may fail to handle peak loads or rapidly changing traffic, leading to throttled requests and partial service outages.\nMitigation: Enable DynamoDB autoscaling to automatically adjust read/write capacity, preventing performance bottlenecks.", "metadata": {"threat_id": "SLS_006", "threat_name": "No DynamoDB Autoscaling", "source": "An external client or an AWS service", "target": "AWS DynamoDB"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS DynamoDB\nThreat: DynamoDB Not in Backup Plan\nDescription: Tables left out of a backup plan risk permanent data loss if they are corrupted or deleted without a recoverable snapshot.\nMitigation: Use AWS Backup or an equivalent solution to periodically back up DynamoDB tables, ensuring point-in-time recovery.", "metadata": {"threat_id": "SLS_007", "threat_name": "DynamoDB Not in Backup Plan", "source": "An external client or an AWS service", "target": "AWS DynamoDB"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS DynamoDB\nThreat: Point-in-Time Recovery Disabled\nDescription: Without PITR, you cannot revert to a consistent state before an erroneous write or delete, losing potentially critical data.\nMitigation: Enable PITR for DynamoDB tables to restore data to any second within the retention period, preventing irreversible loss.", "metadata": {"threat_id": "SLS_008", "threat_name": "Point-in-Time Recovery Disabled", "source": "An external client or an AWS service", "target": "AWS DynamoDB"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS DynamoDB\nThreat: Unencrypted DynamoDB Table\nDescription: Data stored without encryption can be read by anyone with physical or system-level access, risking confidentiality breaches.\nMitigation: Enable server-side encryption with AWS KMS to secure DynamoDB data at rest and control key usage via IAM policies.", "metadata": {"threat_id": "SLS_009", "threat_name": "Unencrypted DynamoDB Table", "source": "An external client or an AWS service", "target": "AWS DynamoDB"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS DynamoDB\nThreat: DynamoDB Throughput Quota Exceeded\nDescription: If the table throughput limit is reached, requests will be throttled, causing elevated latency or partial service failures.\nMitigation: Monitor usage and scale read/write capacity (manually or via autoscaling) to avoid surpassing account-level throughput limits.", "metadata": {"threat_id": "SLS_010", "threat_name": "DynamoDB Throughput Quota Exceeded", "source": "An external client or an AWS service", "target": "AWS DynamoDB"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS EBS\nThreat: Unencrypted EBS Volume\nDescription: If the EBS volume is not encrypted, unauthorized users who gain physical or system-level access to the storage can view or copy sensitive data.\nMitigation: Enable EBS encryption using AWS KMS (CMK) to protect data at rest and limit key usage via IAM policies.", "metadata": {"threat_id": "EBS_001", "threat_name": "Unencrypted EBS Volume", "source": "An external client or an AWS service", "target": "AWS EBS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS EBS\nThreat: EBS Default Encryption Disabled\nDescription: EBS volumes created without default encryption enabled may result in unprotected data at rest, increasing the risk of unauthorized access.\nMitigation: Enable default encryption for EBS to ensure all new volumes are automatically encrypted using AWS KMS.", "metadata": {"threat_id": "EBS_001", "threat_name": "EBS Default Encryption Disabled", "source": "An external client or an AWS service", "target": "AWS EBS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS EBS\nThreat: EBS Snapshot Copy Not Encrypted with KMS\nDescription: EBS snapshot copies that are not encrypted using AWS KMS CMK may store sensitive data without protection, increasing the risk of unauthorized access.\nMitigation: Ensure that all EBS snapshot copies are encrypted using AWS KMS CMK to prevent data exposure.", "metadata": {"threat_id": "EBS_003", "threat_name": "EBS Snapshot Copy Not Encrypted with KMS", "source": "An external client or an AWS service", "target": "AWS EBS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS EBS\nThreat: EBS Volume Not Encrypted with KMS\nDescription: EBS volumes that are not encrypted using AWS KMS CMK may store sensitive data in an unprotected state, increasing security risks.\nMitigation: Ensure that AWS EBS volumes are encrypted using AWS KMS CMK to prevent unauthorized access and enhance data protection.", "metadata": {"threat_id": "EBS_004", "threat_name": "EBS Volume Not Encrypted with KMS", "source": "An external client or an AWS service", "target": "AWS EBS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS EBS\nThreat: Unencrypted EBS Volume Attached to EC2 Instances\nDescription: Attaching unencrypted EBS volumes to EC2 instances can expose sensitive data if the instance is compromised.\nMitigation: Ensure that only encrypted EBS volumes are attached to EC2 instances using KMS CMKs.", "metadata": {"threat_id": "EBS_049", "threat_name": "Unencrypted EBS Volume Attached to EC2 Instances", "source": "An external client or an AWS service", "target": "AWS EBS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS EBS\nThreat: Unencrypted EBS Volume Attachment\nDescription: EBS volume attachments that are not encrypted may expose sensitive data to unauthorized access.\nMitigation: Ensure that only encrypted EBS volumes are attached to EC2 instances.", "metadata": {"threat_id": "EBS_050", "threat_name": "Unencrypted EBS Volume Attachment", "source": "An external client or an AWS service", "target": "AWS EBS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS EBS\nThreat: EBS Volumes Not Included in AWS Backup Plan\nDescription: EBS volumes not added to AWS Backup plans may lead to data loss in case of accidental deletion or failure.\nMitigation: Ensure that all critical EBS volumes are included in AWS Backup plans to facilitate data recovery.", "metadata": {"threat_id": "EBS_061", "threat_name": "EBS Volumes Not Included in AWS Backup Plan", "source": "An external client or an AWS service", "target": "AWS EBS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS EBS\nThreat: EBS Volumes Not Enrolled in Backup Plan\nDescription: Unprotected EBS volumes without a backup plan risk permanent data loss in the event of accidental deletion, corruption, or hardware failure.\nMitigation: Enroll all critical EBS volumes in AWS Backup plans to ensure regular, automated snapshots for data recovery.", "metadata": {"threat_id": "STORAGE_005", "threat_name": "EBS Volumes Not Enrolled in Backup Plan", "source": "An external client or an AWS service", "target": "AWS EBS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS EBS\nThreat: Publicly Restorable EBS Snapshots\nDescription: When EBS snapshots are publicly restorable, attackers can clone or read the underlying data without authorization, compromising sensitive information.\nMitigation: Restrict snapshot access to specific AWS accounts or roles, and avoid granting public restorable permissions on snapshots.", "metadata": {"threat_id": "STORAGE_006", "threat_name": "Publicly Restorable EBS Snapshots", "source": "An external client or an AWS service", "target": "AWS EBS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS EBS\nThreat: EBS Not Encrypted by Default\nDescription: If EBS encryption-by-default is disabled, newly created volumes may store unencrypted data, increasing exposure if the underlying storage is compromised.\nMitigation: Enable EBS encryption by default for new volumes and manage keys via AWS KMS to protect data at rest.", "metadata": {"threat_id": "STORAGE_007", "threat_name": "EBS Not Encrypted by Default", "source": "An external client or an AWS service", "target": "AWS EBS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS EC2\nThreat: Unencrypted EBS Volume\nDescription: EBS volumes that are not encrypted expose sensitive data to unauthorized access if compromised.\nMitigation: Enable encryption for EBS volumes using AWS KMS to protect data at rest.", "metadata": {"threat_id": "EBS_001", "threat_name": "Unencrypted EBS Volume", "source": "An external client or an AWS service", "target": "AWS EC2"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS EC2\nThreat: Unencrypted EBS in Launch Configuration\nDescription: If the EBS volumes used by an Auto Scaling launch configuration are not encrypted, sensitive data can be read by unauthorized users with access to underlying storage.\nMitigation: Enable encryption for EBS volumes in the launch configuration using a KMS key to ensure data at rest is protected.", "metadata": {"threat_id": "ASG_001", "threat_name": "Unencrypted EBS in Launch Configuration", "source": "An external client or an AWS service", "target": "AWS EC2"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS EC2\nThreat: Unencrypted Data in EC2 Instance Storage\nDescription: EC2 instances that store data in unencrypted Elastic Block Store (EBS) volumes expose sensitive data to unauthorized access if compromised.\nMitigation: Ensure all EBS volumes attached to EC2 instances are encrypted using AWS KMS to protect data at rest.", "metadata": {"threat_id": "EC2_001", "threat_name": "Unencrypted Data in EC2 Instance Storage", "source": "An external client or an AWS service", "target": "AWS EC2"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS EC2\nThreat: Unencrypted Data in Launch Configuration\nDescription: Launch configurations that use unencrypted Elastic Block Store (EBS) volumes expose sensitive data to unauthorized access.\nMitigation: Ensure all EBS volumes created via launch configurations are encrypted using AWS KMS.", "metadata": {"threat_id": "EC2_002", "threat_name": "Unencrypted Data in Launch Configuration", "source": "An external client or an AWS service", "target": "AWS EC2"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS EC2\nThreat: Security Group Rules Lack Descriptions\nDescription: Security groups without descriptions on rules make it difficult to track changes, audit access permissions, and maintain security best practices.\nMitigation: Ensure all security group rules include meaningful descriptions to improve auditability and access control management.", "metadata": {"threat_id": "EC2_003", "threat_name": "Security Group Rules Lack Descriptions", "source": "An external client or an AWS service", "target": "AWS EC2"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS EC2\nThreat: Security Group Egress Rules Lack Descriptions\nDescription: Outbound security group rules without descriptions can lead to unauthorized data exfiltration risks and hinder security audits.\nMitigation: Ensure all security group egress rules include descriptions to maintain visibility and track outbound traffic permissions.", "metadata": {"threat_id": "EC2_004", "threat_name": "Security Group Egress Rules Lack Descriptions", "source": "An external client or an AWS service", "target": "AWS EC2"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS EC2\nThreat: Security Group Ingress Rules Lack Descriptions\nDescription: Inbound security group rules without descriptions can lead to open attack vectors and hinder security audits.\nMitigation: Ensure all security group ingress rules include descriptions to maintain visibility and track inbound traffic permissions.", "metadata": {"threat_id": "EC2_005", "threat_name": "Security Group Ingress Rules Lack Descriptions", "source": "An external client or an AWS service", "target": "AWS EC2"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS EC2\nThreat: Security Group Rules Lack Descriptions\nDescription: Security groups without descriptions on rules make it difficult to track changes, audit access permissions, and maintain security best practices.\nMitigation: Ensure all security group rules include meaningful descriptions to improve auditability and access control management.", "metadata": {"threat_id": "SECURITYGROUP_001", "threat_name": "Security Group Rules Lack Descriptions", "source": "An external client or an AWS service", "target": "AWS EC2"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS EC2\nThreat: Security Group Rules Lack Descriptions\nDescription: Security group rules without descriptions can lead to misconfigurations, unauthorized access, and hinder security audits.\nMitigation: Ensure all security group rules include descriptions to maintain visibility and track security configurations.", "metadata": {"threat_id": "SECURITYGROUP_002", "threat_name": "Security Group Rules Lack Descriptions", "source": "An external client or an AWS service", "target": "AWS EC2"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS EC2\nThreat: Unrestricted SSH Access (0.0.0.0/0) to Port 22\nDescription: Allowing unrestricted SSH access (0.0.0.0/0) on port 22 exposes instances to brute-force attacks, unauthorized access, and potential compromise.\nMitigation: Restrict SSH access by allowing only trusted IPs or using VPN-based access controls.", "metadata": {"threat_id": "EC2_006", "threat_name": "Unrestricted SSH Access (0.0.0.0/0) to Port 22", "source": "An external client or an AWS service", "target": "AWS EC2"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS EC2\nThreat: Unrestricted SSH Access (0.0.0.0/0) to Port 22\nDescription: Security group rules that allow unrestricted SSH access (0.0.0.0/0) to port 22 increase the risk of unauthorized access and compromise.\nMitigation: Ensure security group ingress rules restrict SSH access by allowing only specific trusted IPs.", "metadata": {"threat_id": "EC2_007", "threat_name": "Unrestricted SSH Access (0.0.0.0/0) to Port 22", "source": "An external client or an AWS service", "target": "AWS EC2"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS EC2\nThreat: Unrestricted RDP Access (0.0.0.0/0) to Port 3389\nDescription: Allowing unrestricted RDP access (0.0.0.0/0) on port 3389 exposes instances to brute-force attacks, unauthorized access, and potential compromise.\nMitigation: Restrict RDP access by allowing only trusted IPs or using VPN-based access controls.", "metadata": {"threat_id": "EC2_008", "threat_name": "Unrestricted RDP Access (0.0.0.0/0) to Port 3389", "source": "An external client or an AWS service", "target": "AWS EC2"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS EC2\nThreat: Unrestricted RDP Access (0.0.0.0/0) to Port 3389\nDescription: Security group rules allowing unrestricted RDP access (0.0.0.0/0) to port 3389 increase the risk of unauthorized access and compromise.\nMitigation: Ensure security group ingress rules restrict RDP access by allowing only specific trusted IPs.", "metadata": {"threat_id": "EC2_009", "threat_name": "Unrestricted RDP Access (0.0.0.0/0) to Port 3389", "source": "An external client or an AWS service", "target": "AWS EC2"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS EC2\nThreat: Hardcoded Secrets in EC2 User Data\nDescription: EC2 user data scripts containing hardcoded secrets expose sensitive credentials to unauthorized access, increasing the risk of compromise.\nMitigation: Avoid storing sensitive information in EC2 user data. Use AWS Secrets Manager or AWS Systems Manager Parameter Store to securely manage secrets.", "metadata": {"threat_id": "EC2_010", "threat_name": "Hardcoded Secrets in EC2 User Data", "source": "An external client or an AWS service", "target": "AWS EC2"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS EC2\nThreat: Hardcoded Secrets in EC2 User Data\nDescription: EC2 user data scripts containing hardcoded secrets expose sensitive credentials to unauthorized access, increasing the risk of compromise.\nMitigation: Avoid storing sensitive information in EC2 user data. Use AWS Secrets Manager or AWS Systems Manager Parameter Store to securely manage secrets.", "metadata": {"threat_id": "EC2_011", "threat_name": "Hardcoded Secrets in EC2 User Data", "source": "An external client or an AWS service", "target": "AWS EC2"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS EC2\nThreat: Hardcoded Secrets in EC2 User Data\nDescription: EC2 launch configurations containing hardcoded secrets expose sensitive credentials to unauthorized access and potential compromise.\nMitigation: Ensure sensitive credentials are stored securely using AWS Secrets Manager or AWS Systems Manager Parameter Store instead of hardcoding them in launch configurations.", "metadata": {"threat_id": "EC2_012", "threat_name": "Hardcoded Secrets in EC2 User Data", "source": "An external client or an AWS service", "target": "AWS EC2"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS EC2\nThreat: Hardcoded Secrets in EC2 User Data\nDescription: EC2 launch templates containing hardcoded secrets expose sensitive credentials to unauthorized access and potential compromise.\nMitigation: Ensure sensitive credentials are stored securely using AWS Secrets Manager or AWS Systems Manager Parameter Store instead of hardcoding them in launch templates.", "metadata": {"threat_id": "EC2_013", "threat_name": "Hardcoded Secrets in EC2 User Data", "source": "An external client or an AWS service", "target": "AWS EC2"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS EC2\nThreat: Instance Metadata Service Version 1 Enabled\nDescription: Instances using Instance Metadata Service Version 1 (IMDSv1) are vulnerable to SSRF attacks, potentially exposing metadata and credentials to attackers.\nMitigation: Ensure that EC2 instances use IMDSv2 by disabling IMDSv1 and enforcing token-based authentication.", "metadata": {"threat_id": "EC2_014", "threat_name": "Instance Metadata Service Version 1 Enabled", "source": "An external client or an AWS service", "target": "AWS EC2"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS EC2\nThreat: Instance Metadata Service Version 1 Enabled\nDescription: Instances using Instance Metadata Service Version 1 (IMDSv1) are vulnerable to SSRF attacks, potentially exposing metadata and credentials to attackers.\nMitigation: Ensure that EC2 instances use IMDSv2 by disabling IMDSv1 and enforcing token-based authentication.", "metadata": {"threat_id": "EC2_015", "threat_name": "Instance Metadata Service Version 1 Enabled", "source": "An external client or an AWS service", "target": "AWS EC2"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS EC2\nThreat: Instance Metadata Service Version 1 Enabled\nDescription: Launch configurations that allow IMDSv1 expose instances to potential metadata and credential theft via SSRF attacks.\nMitigation: Ensure that launch configurations enforce IMDSv2 with session tokens enabled.", "metadata": {"threat_id": "EC2_016", "threat_name": "Instance Metadata Service Version 1 Enabled", "source": "An external client or an AWS service", "target": "AWS EC2"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS EC2\nThreat: Instance Metadata Service Version 1 Enabled\nDescription: Launch templates using IMDSv1 increase the risk of SSRF-based attacks and potential unauthorized access to instance metadata.\nMitigation: Ensure that launch templates enforce the use of IMDSv2 with session authentication.", "metadata": {"threat_id": "EC2_017", "threat_name": "Instance Metadata Service Version 1 Enabled", "source": "An external client or an AWS service", "target": "AWS EC2"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS EC2\nThreat: EC2 Instance With Public IP\nDescription: EC2 instances assigned public IPs are at risk of exposure to unauthorized internet access, increasing the attack surface for exploitation.\nMitigation: Ensure EC2 instances do not have public IP addresses unless explicitly required for public-facing services. Use private subnets and AWS NAT Gateways for internet-bound traffic.", "metadata": {"threat_id": "EC2_018", "threat_name": "EC2 Instance With Public IP", "source": "An external client or an AWS service", "target": "AWS EC2"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS EC2\nThreat: EC2 Instance With Public IP\nDescription: EC2 instances launched from a launch template with public IPs are at risk of unauthorized internet exposure, increasing the likelihood of compromise.\nMitigation: Ensure that EC2 launch templates do not configure public IP addresses unless explicitly required. Use private networking with appropriate security controls.", "metadata": {"threat_id": "EC2_019", "threat_name": "EC2 Instance With Public IP", "source": "An external client or an AWS service", "target": "AWS EC2"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS EC2\nThreat: EC2 Instance With Public IP\nDescription: EC2 instances assigned public IPs are at risk of exposure to unauthorized internet access, increasing the attack surface for exploitation.\nMitigation: Ensure EC2 instances do not have public IP addresses unless explicitly required for public-facing services. Use private subnets and AWS NAT Gateways for internet-bound traffic.", "metadata": {"threat_id": "EC2_020", "threat_name": "EC2 Instance With Public IP", "source": "An external client or an AWS service", "target": "AWS EC2"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS EC2\nThreat: EC2 Instance With Public IP\nDescription: Terraform configurations that provision EC2 instances with public IPs create a security risk by exposing instances to external networks.\nMitigation: Ensure Terraform configurations do not assign public IPs to EC2 instances unless necessary. Use private networking and security groups for secure access.", "metadata": {"threat_id": "EC2_021", "threat_name": "EC2 Instance With Public IP", "source": "An external client or an AWS service", "target": "AWS EC2"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS EC2\nThreat: EC2 Instance With Public IP\nDescription: JSON-based infrastructure configurations provisioning EC2 instances with public IPs pose a risk of unauthorized external exposure.\nMitigation: Ensure JSON configurations do not allow EC2 instances to be assigned public IPs unless explicitly required. Use private subnets and appropriate security controls.", "metadata": {"threat_id": "EC2_022", "threat_name": "EC2 Instance With Public IP", "source": "An external client or an AWS service", "target": "AWS EC2"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS EC2\nThreat: EC2 Instance With Public IP\nDescription: Nested configuration blocks that provision EC2 instances with public IPs increase the risk of exposure to unauthorized internet access.\nMitigation: Review and restrict nested configuration blocks from assigning public IPs to EC2 instances. Implement security best practices for networking.", "metadata": {"threat_id": "EC2_023", "threat_name": "EC2 Instance With Public IP", "source": "An external client or an AWS service", "target": "AWS EC2"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS EC2\nThreat: EC2 Instance With Public IP\nDescription: Multi-level nested configurations provisioning EC2 instances with public IPs expose them to external threats, increasing the attack surface.\nMitigation: Ensure EC2 instances defined in deeply nested configurations do not receive public IPs unless explicitly required. Implement VPC security best practices.", "metadata": {"threat_id": "EC2_024", "threat_name": "EC2 Instance With Public IP", "source": "An external client or an AWS service", "target": "AWS EC2"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS EC2\nThreat: EC2 Instance With Public IP\nDescription: Nested configuration blocks that provision EC2 instances with public IPs increase the risk of exposure to unauthorized internet access.\nMitigation: Review and restrict nested configuration blocks from assigning public IPs to EC2 instances. Implement security best practices for networking.", "metadata": {"threat_id": "EC2_025", "threat_name": "EC2 Instance With Public IP", "source": "An external client or an AWS service", "target": "AWS EC2"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS EC2\nThreat: EC2 Instance With Public IP\nDescription: Multi-level nested configuration blocks provisioning EC2 instances with public IPs expose them to external threats, increasing the attack surface.\nMitigation: Ensure EC2 instances defined in deeply nested configurations do not receive public IPs unless explicitly required. Implement VPC security best practices.", "metadata": {"threat_id": "EC2_026", "threat_name": "EC2 Instance With Public IP", "source": "An external client or an AWS service", "target": "AWS EC2"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS EC2\nThreat: EC2 Instance With Public IP\nDescription: Multi-level nested configurations provisioning EC2 instances with public IPs expose them to external threats, increasing the attack surface.\nMitigation: Ensure EC2 instances defined in deeply nested configurations do not receive public IPs unless explicitly required. Implement VPC security best practices.", "metadata": {"threat_id": "EC2_027", "threat_name": "EC2 Instance With Public IP", "source": "An external client or an AWS service", "target": "AWS EC2"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS EC2\nThreat: EC2 Instance With Public IP in Task Configuration\nDescription: Task definitions that configure EC2 instances with public IPs expose them to unauthorized access, increasing the risk of data breaches and system compromise.\nMitigation: Ensure EC2 instances used within task definitions do not have public IPs assigned. Use private networking and security groups for secure communication.", "metadata": {"threat_id": "EC2_028", "threat_name": "EC2 Instance With Public IP in Task Configuration", "source": "An external client or an AWS service", "target": "AWS EC2"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS EC2\nThreat: EC2 Instance With Public IP in Task Configuration\nDescription: Task definitions that configure EC2 instances with public IPs expose them to unauthorized access, increasing the risk of data breaches and system compromise.\nMitigation: Ensure EC2 instances used within task definitions do not have public IPs assigned. Use private networking and security groups for secure communication.", "metadata": {"threat_id": "EC2_029", "threat_name": "EC2 Instance With Public IP in Task Configuration", "source": "An external client or an AWS service", "target": "AWS EC2"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS EC2\nThreat: EC2 Instance With Public IP in Task Block\nDescription: Task block configurations provisioning EC2 instances with public IPs increase the risk of unauthorized internet exposure, leading to potential security breaches.\nMitigation: Ensure EC2 instances defined in task blocks do not have public IPs unless explicitly required. Use private networking and security groups for secure access.", "metadata": {"threat_id": "EC2_030", "threat_name": "EC2 Instance With Public IP in Task Block", "source": "An external client or an AWS service", "target": "AWS EC2"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS EC2\nThreat: EC2 Instance With Public IP in Task Block\nDescription: Task block configurations provisioning EC2 instances with public IPs expose them to external threats, increasing the attack surface.\nMitigation: Ensure EC2 instances defined in task blocks do not receive public IPs unless explicitly required. Implement VPC security best practices.", "metadata": {"threat_id": "EC2_031", "threat_name": "EC2 Instance With Public IP in Task Block", "source": "An external client or an AWS service", "target": "AWS EC2"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS EC2\nThreat: EC2 Instance With Public IP in Nested Task Block\nDescription: Nested task block configurations provisioning EC2 instances with public IPs increase the risk of exposure to unauthorized internet access.\nMitigation: Review and restrict nested task block configurations from assigning public IPs to EC2 instances. Implement security best practices for networking.", "metadata": {"threat_id": "EC2_032", "threat_name": "EC2 Instance With Public IP in Nested Task Block", "source": "An external client or an AWS service", "target": "AWS EC2"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS EC2\nThreat: EC2 Instance With Public IP in Deeply Nested Task Block\nDescription: Multi-level nested task configurations provisioning EC2 instances with public IPs expose them to external threats, increasing the attack surface.\nMitigation: Ensure EC2 instances defined in deeply nested task configurations do not receive public IPs unless explicitly required. Implement VPC security best practices.", "metadata": {"threat_id": "EC2_033", "threat_name": "EC2 Instance With Public IP in Deeply Nested Task Block", "source": "An external client or an AWS service", "target": "AWS EC2"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS EC2\nThreat: EC2 Instance With Public IP in Deeply Nested Task Configuration\nDescription: Multi-level nested configurations provisioning EC2 instances with public IPs expose them to external threats, increasing the attack surface.\nMitigation: Ensure EC2 instances in deeply nested task configurations do not receive public IPs unless explicitly required. Implement VPC security best practices.", "metadata": {"threat_id": "EC2_034", "threat_name": "EC2 Instance With Public IP in Deeply Nested Task Configuration", "source": "An external client or an AWS service", "target": "AWS EC2"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS EC2\nThreat: EC2 Instance With Public IP in Deeply Nested Task Configuration\nDescription: Multi-level nested configurations provisioning EC2 instances with public IPs expose them to external threats, increasing the attack surface.\nMitigation: Ensure EC2 instances in deeply nested task configurations do not receive public IPs unless explicitly required. Implement VPC security best practices.", "metadata": {"threat_id": "EC2_035", "threat_name": "EC2 Instance With Public IP in Deeply Nested Task Configuration", "source": "An external client or an AWS service", "target": "AWS EC2"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS EC2\nThreat: EC2 Instance With Public IP\nDescription: EC2 instances assigned public IPs are at risk of exposure to unauthorized internet access, increasing the attack surface for exploitation.\nMitigation: Ensure EC2 instances do not have public IP addresses unless explicitly required for public-facing services. Use private subnets and AWS NAT Gateways for internet-bound traffic.", "metadata": {"threat_id": "EC2_036", "threat_name": "EC2 Instance With Public IP", "source": "An external client or an AWS service", "target": "AWS EC2"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS EC2\nThreat: EC2 Instance With Public IP\nDescription: EC2 instances launched from a launch template with public IPs are at risk of unauthorized internet exposure, increasing the likelihood of compromise.\nMitigation: Ensure that EC2 launch templates do not configure public IP addresses unless explicitly required. Use private networking with appropriate security controls.", "metadata": {"threat_id": "EC2_037", "threat_name": "EC2 Instance With Public IP", "source": "An external client or an AWS service", "target": "AWS EC2"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS EC2\nThreat: EC2 Instance Without Detailed Monitoring Enabled\nDescription: EC2 instances without detailed monitoring enabled may lack critical performance and security insights, increasing the risk of undetected incidents.\nMitigation: Enable detailed monitoring for EC2 instances to collect real-time performance metrics and improve visibility into potential issues.", "metadata": {"threat_id": "EC2_008", "threat_name": "EC2 Instance Without Detailed Monitoring Enabled", "source": "An external client or an AWS service", "target": "AWS EC2"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS EC2\nThreat: EC2 Instance Not EBS Optimized\nDescription: EC2 instances that are not EBS-optimized may suffer from suboptimal performance, increased disk latency, and potential I/O throttling.\nMitigation: Ensure that EC2 instances are EBS-optimized for improved disk performance and lower I/O contention, especially for high-throughput workloads.", "metadata": {"threat_id": "EC2_009", "threat_name": "EC2 Instance Not EBS Optimized", "source": "An external client or an AWS service", "target": "AWS EC2"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS EC2\nThreat: EC2 Instance Not EBS Optimized\nDescription: EC2 instances that are not EBS-optimized may suffer from suboptimal performance, increased disk latency, and potential I/O throttling, impacting application responsiveness and efficiency.\nMitigation: Ensure that EC2 instances are EBS-optimized for improved disk performance and lower I/O contention, especially for high-throughput and latency-sensitive workloads.", "metadata": {"threat_id": "EC2_010", "threat_name": "EC2 Instance Not EBS Optimized", "source": "An external client or an AWS service", "target": "AWS EC2"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS EC2\nThreat: EC2 Instance Not EBS Optimized\nDescription: EC2 instances provisioned through Terraform that are not configured to be EBS-optimized may suffer from disk performance degradation, leading to application slowness and higher infrastructure costs.\nMitigation: Ensure Terraform configurations explicitly enable EBS optimization for EC2 instances to maintain optimal disk throughput and avoid unnecessary performance bottlenecks.", "metadata": {"threat_id": "EC2_011", "threat_name": "EC2 Instance Not EBS Optimized", "source": "An external client or an AWS service", "target": "AWS EC2"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS EC2\nThreat: EC2 Instance Not EBS Optimized\nDescription: EC2 instances deployed using AWS CloudFormation that are not set to be EBS-optimized may result in inefficient resource utilization and slower disk operations.\nMitigation: Ensure CloudFormation templates enable EBS optimization for EC2 instances to prevent performance degradation and ensure consistent storage performance.", "metadata": {"threat_id": "EC2_012", "threat_name": "EC2 Instance Not EBS Optimized", "source": "An external client or an AWS service", "target": "AWS EC2"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS EC2\nThreat: EC2 Instance Not EBS Optimized\nDescription: EC2 instances within deeply nested configuration blocks that are not EBS-optimized may inadvertently lead to degraded performance and I/O bottlenecks.\nMitigation: Review all nested configuration blocks and ensure that EBS optimization is explicitly enabled for EC2 instances.", "metadata": {"threat_id": "EC2_013", "threat_name": "EC2 Instance Not EBS Optimized", "source": "An external client or an AWS service", "target": "AWS EC2"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS EC2\nThreat: EC2 Instance Not EBS Optimized\nDescription: EC2 instances configured via Infrastructure as Code (IaC) frameworks that do not enforce EBS optimization may lead to inefficient resource allocation and unpredictable performance issues.\nMitigation: Ensure that Infrastructure as Code (Terraform, CloudFormation, etc.) explicitly enables EBS optimization for all EC2 instances deployed.", "metadata": {"threat_id": "EC2_014", "threat_name": "EC2 Instance Not EBS Optimized", "source": "An external client or an AWS service", "target": "AWS EC2"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS EC2\nThreat: EC2 Instance Not EBS Optimized\nDescription: EC2 instances that are not EBS-optimized may experience degraded disk performance, increased latency, and I/O throttling, affecting workload efficiency.\nMitigation: Ensure that all EC2 instances are EBS-optimized to maximize disk throughput and prevent performance degradation.", "metadata": {"threat_id": "EC2_015", "threat_name": "EC2 Instance Not EBS Optimized", "source": "An external client or an AWS service", "target": "AWS EC2"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS EC2\nThreat: Open Ingress to Port 80\nDescription: If security groups allow ingress from 0.0.0.0/0 to port 80, web services become publicly accessible, increasing the risk of unauthorized access.\nMitigation: Ensure no security groups allow ingress from 0.0.0.0/0 to port 80 unless explicitly required and properly secured.", "metadata": {"threat_id": "SG_004", "threat_name": "Open Ingress to Port 80", "source": "An external client or an AWS service", "target": "AWS EC2"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS EC2\nThreat: Transit Gateway Automatically Accepting VPC Attachments\nDescription: Transit gateways that automatically accept VPC attachment requests may introduce unauthorized connections.\nMitigation: Ensure Transit Gateways do not automatically accept VPC attachment requests to prevent unauthorized network access.", "metadata": {"threat_id": "TGW_032", "threat_name": "Transit Gateway Automatically Accepting VPC Attachments", "source": "An external client or an AWS service", "target": "AWS EC2"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS EC2\nThreat: Transit Gateway Automatically Accepting VPC Attachments\nDescription: Transit gateways that automatically accept VPC attachment requests may introduce unauthorized connections.\nMitigation: Ensure Transit Gateways do not automatically accept VPC attachment requests to prevent unauthorized network access.", "metadata": {"threat_id": "TGW_032", "threat_name": "Transit Gateway Automatically Accepting VPC Attachments", "source": "An external client or an AWS service", "target": "AWS EC2"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS EC2\nThreat: Excessive Metadata Response Hop Limit in Launch Template\nDescription: A metadata response hop limit greater than 1 increases the risk of metadata exposure and potential compromise.\nMitigation: Ensure the launch template has a metadata response hop limit of 1 to prevent unauthorized access to instance metadata.", "metadata": {"threat_id": "LT_004", "threat_name": "Excessive Metadata Response Hop Limit in Launch Template", "source": "An external client or an AWS service", "target": "AWS EC2"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS EC2\nThreat: Unattached Security Group\nDescription: Security groups that are not attached to any resource may lead to misconfigurations and an increased attack surface.\nMitigation: Ensure that all security groups are attached to active AWS resources to maintain proper network security.", "metadata": {"threat_id": "SecurityGroup_055", "threat_name": "Unattached Security Group", "source": "An external client or an AWS service", "target": "AWS EC2"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS EC2\nThreat: Auto Scaling Groups Without Load Balancer Health Checks\nDescription: Auto Scaling groups associated with a load balancer but not using ELB health checks may result in inefficient scaling and downtime.\nMitigation: Ensure that Auto Scaling groups that are associated with a load balancer use Elastic Load Balancing health checks for accurate scaling decisions.", "metadata": {"threat_id": "ASG_067", "threat_name": "Auto Scaling Groups Without Load Balancer Health Checks", "source": "An external client or an AWS service", "target": "AWS EC2"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS EC2\nThreat: Unattached Elastic IPs\nDescription: Elastic IP addresses allocated to a VPC but not attached to EC2 instances may lead to security risks or unintended costs.\nMitigation: Ensure that all EIP addresses allocated to a VPC are attached to EC2 instances to avoid unnecessary resource allocation.", "metadata": {"threat_id": "EIP_071", "threat_name": "Unattached Elastic IPs", "source": "An external client or an AWS service", "target": "AWS EC2"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS EC2\nThreat: Missing IAM Role on EC2 Instances\nDescription: EC2 instances without an attached IAM role cannot securely access AWS resources, potentially leading to hardcoded credentials or security workarounds.\nMitigation: Attach an IAM role with least privilege permissions to all EC2 instances requiring access to AWS services.", "metadata": {"threat_id": "EC2_201", "threat_name": "Missing IAM Role on EC2 Instances", "source": "An external client or an AWS service", "target": "AWS EC2"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS EC2\nThreat: SSH Port 22 (or Other Common Ports) Open to the World\nDescription: Allowing unrestricted inbound traffic on well-known ports can lead to brute force attacks or unauthorized remote access.\nMitigation: Restrict SSH/RDP and other vulnerable ports to specific IP ranges or use VPN/bastion for secure access.", "metadata": {"threat_id": "SEC_029", "threat_name": "SSH Port 22 (or Other Common Ports) Open to the World", "source": "An external client or an AWS service", "target": "AWS EC2"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS ECR\nThreat: ECR Repository Policy Set to Public\nDescription: ECR repositories with public policies expose container images to unauthorized access, increasing the risk of exploitation or malicious use.\nMitigation: Ensure that ECR repositories are private and restrict access using AWS IAM policies.", "metadata": {"threat_id": "ECR_001", "threat_name": "ECR Repository Policy Set to Public", "source": "An external client or an AWS service", "target": "AWS ECR"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS ECR\nThreat: ECR Repository Policy Set to Public\nDescription: ECR repository policies that allow public access expose container images to potential abuse or unauthorized distribution.\nMitigation: Restrict ECR repository access using IAM policies to limit image pull and push operations to trusted entities.", "metadata": {"threat_id": "ECR_002", "threat_name": "ECR Repository Policy Set to Public", "source": "An external client or an AWS service", "target": "AWS ECR"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS ECR\nThreat: ECR Image Tags Are Not Immutable\nDescription: ECR repositories without immutable image tags allow images to be overwritten, leading to potential supply chain attacks and loss of integrity.\nMitigation: Enable image tag immutability in AWS ECR to prevent unintended or malicious overwrites of container images.", "metadata": {"threat_id": "ECR_003", "threat_name": "ECR Image Tags Are Not Immutable", "source": "An external client or an AWS service", "target": "AWS ECR"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS ECR\nThreat: ECR Image Tags Are Not Immutable\nDescription: ECR repositories without immutable image tags allow images to be overwritten, leading to potential supply chain attacks and loss of integrity.\nMitigation: Enable image tag immutability in AWS ECR to prevent unintended or malicious overwrites of container images.", "metadata": {"threat_id": "ECR_004", "threat_name": "ECR Image Tags Are Not Immutable", "source": "An external client or an AWS service", "target": "AWS ECR"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS ECR\nThreat: ECR Repositories Not Encrypted Using KMS\nDescription: ECR repositories that are not encrypted using AWS KMS may store sensitive container images without proper protection, increasing the risk of unauthorized access.\nMitigation: Enable AWS KMS encryption for ECR repositories to protect stored container images from unauthorized access and comply with security best practices.", "metadata": {"threat_id": "ECR_004", "threat_name": "ECR Repositories Not Encrypted Using KMS", "source": "An external client or an AWS service", "target": "AWS ECR"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS ECR\nThreat: ECR Image Scanning on Push Not Enabled\nDescription: ECR repositories without image scanning on push enabled may allow vulnerable container images to be stored and deployed without security assessments.\nMitigation: Ensure that ECR repositories have image scanning on push enabled to detect and remediate vulnerabilities before container images are used.", "metadata": {"threat_id": "ECR_005", "threat_name": "ECR Image Scanning on Push Not Enabled", "source": "An external client or an AWS service", "target": "AWS ECR"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS ECR\nThreat: Image Scanning Disabled\nDescription: If image scanning is not enabled, malicious or vulnerable container images could be stored and deployed without detection.\nMitigation: Enable image scanning in Amazon ECR to automatically check for known vulnerabilities in container images.", "metadata": {"threat_id": "ECR_001", "threat_name": "Image Scanning Disabled", "source": "An external client or an AWS service", "target": "AWS ECR"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS ECR\nThreat: No Lifecycle Policy Configured\nDescription: Repositories lacking a lifecycle policy can accumulate outdated images, increasing the chance that old, unpatched images are used in production.\nMitigation: Implement a lifecycle policy to automatically retire or delete old images, reducing the risk of deploying vulnerable versions.", "metadata": {"threat_id": "ECR_002", "threat_name": "No Lifecycle Policy Configured", "source": "An external client or an AWS service", "target": "AWS ECR"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS ECR\nThreat: Tag Mutability\nDescription: When tag immutability is disabled, an attacker or careless process could overwrite existing tags with malicious or unintended images, compromising integrity.\nMitigation: Enable tag immutability on ECR repositories to prevent image tags from being overwritten, ensuring the integrity of deployed images.", "metadata": {"threat_id": "ECR_003", "threat_name": "Tag Mutability", "source": "An external client or an AWS service", "target": "AWS ECR"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS ECS\nThreat: ECS Cluster Lacks Container Insights\nDescription: ECS clusters without container insights enabled lack visibility into resource usage, performance metrics, and security anomalies.\nMitigation: Enable Amazon CloudWatch Container Insights for ECS clusters to improve monitoring and detect anomalies in containerized workloads.", "metadata": {"threat_id": "ECS_001", "threat_name": "ECS Cluster Lacks Container Insights", "source": "An external client or an AWS service", "target": "AWS ECS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS ECS\nThreat: ECS Cluster Lacks Container Insights\nDescription: ECS clusters without container insights enabled lack visibility into resource usage, performance metrics, and security anomalies.\nMitigation: Enable Amazon CloudWatch Container Insights for ECS clusters to improve monitoring and detect anomalies in containerized workloads.", "metadata": {"threat_id": "ECS_002", "threat_name": "ECS Cluster Lacks Container Insights", "source": "An external client or an AWS service", "target": "AWS ECS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS ECS\nThreat: ECS Task Definition Without EFS Encryption in Transit\nDescription: ECS task definitions using EFS volumes without encryption in transit enabled expose data to potential interception during transmission.\nMitigation: Ensure encryption in transit is enabled for EFS volumes in ECS task definitions to protect data from unauthorized access.", "metadata": {"threat_id": "ECS_001", "threat_name": "ECS Task Definition Without EFS Encryption in Transit", "source": "An external client or an AWS service", "target": "AWS ECS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS ECS\nThreat: ECS Task Definition Without EFS Encryption in Transit\nDescription: ECS task definitions using EFS volumes without encryption in transit enabled expose data to potential interception during transmission.\nMitigation: Ensure encryption in transit is enabled for EFS volumes in ECS task definitions to protect data from unauthorized access.", "metadata": {"threat_id": "ECS_002", "threat_name": "ECS Task Definition Without EFS Encryption in Transit", "source": "An external client or an AWS service", "target": "AWS ECS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS ECS\nThreat: ECS Cluster Does Not Enable Logging for ECS Exec\nDescription: Without ECS Exec logging, administrators may lack visibility into commands executed on ECS containers, leading to auditing and security gaps.\nMitigation: Ensure ECS Cluster logging is enabled for ECS Exec to capture execution details.", "metadata": {"threat_id": "ECS_001", "threat_name": "ECS Cluster Does Not Enable Logging for ECS Exec", "source": "An external client or an AWS service", "target": "AWS ECS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS ECS\nThreat: ECS Cluster Logging and Client-Container Communication Not Using CMK\nDescription: If ECS logs and client-to-container communication are not encrypted with KMS CMK, they may be vulnerable to unauthorized access.\nMitigation: Ensure ECS Cluster logging is enabled and client-to-container communication is encrypted using KMS CMK.", "metadata": {"threat_id": "ECS_002", "threat_name": "ECS Cluster Logging and Client-Container Communication Not Using CMK", "source": "An external client or an AWS service", "target": "AWS ECS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS ECS\nThreat: Execution Role ARN and Task Role ARN Overlap\nDescription: If the Execution Role ARN and the Task Role ARN are the same in ECS Task definitions, it increases the risk of privilege escalation and unintended permissions.\nMitigation: Ensure that the Execution Role ARN and the Task Role ARN are different in ECS Task definitions to enforce the principle of least privilege.", "metadata": {"threat_id": "ECS_001", "threat_name": "Execution Role ARN and Task Role ARN Overlap", "source": "An external client or an AWS service", "target": "AWS ECS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS ECS\nThreat: Use of Outdated Fargate Platform Version\nDescription: ECS Fargate services running on outdated platform versions may have security vulnerabilities.\nMitigation: Ensure ECS Fargate services run on the latest Fargate platform version to mitigate known vulnerabilities.", "metadata": {"threat_id": "ECS_033", "threat_name": "Use of Outdated Fargate Platform Version", "source": "An external client or an AWS service", "target": "AWS ECS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS ECS\nThreat: ECS Services With Public IP Addresses\nDescription: ECS services with public IP addresses may expose workloads to the internet, increasing attack risk.\nMitigation: Ensure ECS services do not have public IP addresses assigned to them automatically to restrict exposure.", "metadata": {"threat_id": "ECS_034", "threat_name": "ECS Services With Public IP Addresses", "source": "An external client or an AWS service", "target": "AWS ECS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS ECS\nThreat: ECS Containers Running as Privileged\nDescription: Privileged containers in ECS may grant attackers full control over the host system.\nMitigation: Ensure ECS containers run as non-privileged users to minimize attack impact.", "metadata": {"threat_id": "ECS_035", "threat_name": "ECS Containers Running as Privileged", "source": "An external client or an AWS service", "target": "AWS ECS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS ECS\nThreat: Host Process Namespace Sharing in ECS Tasks\nDescription: ECS task definitions that share the host's process namespace may expose sensitive processes to other containers.\nMitigation: Ensure ECS task definitions do not share the host's process namespace to maintain isolation.", "metadata": {"threat_id": "ECS_036", "threat_name": "Host Process Namespace Sharing in ECS Tasks", "source": "An external client or an AWS service", "target": "AWS ECS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS ECS\nThreat: Unrestricted Write Access to Root Filesystem in ECS Containers\nDescription: Containers with unrestricted write access to the root filesystem may allow attackers to modify system files.\nMitigation: Ensure ECS containers are limited to read-only access to root filesystems to prevent unauthorized modifications.", "metadata": {"threat_id": "ECS_037", "threat_name": "Unrestricted Write Access to Root Filesystem in ECS Containers", "source": "An external client or an AWS service", "target": "AWS ECS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS ECS\nThreat: Use of Outdated Fargate Platform Version\nDescription: ECS Fargate services running on outdated platform versions may have security vulnerabilities.\nMitigation: Ensure ECS Fargate services run on the latest Fargate platform version to mitigate known vulnerabilities.", "metadata": {"threat_id": "ECS_033", "threat_name": "Use of Outdated Fargate Platform Version", "source": "An external client or an AWS service", "target": "AWS ECS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS ECS\nThreat: ECS Services With Public IP Addresses\nDescription: ECS services with public IP addresses may expose workloads to the internet, increasing attack risk.\nMitigation: Ensure ECS services do not have public IP addresses assigned to them automatically to restrict exposure.", "metadata": {"threat_id": "ECS_034", "threat_name": "ECS Services With Public IP Addresses", "source": "An external client or an AWS service", "target": "AWS ECS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS ECS\nThreat: ECS Containers Running as Privileged\nDescription: Privileged containers in ECS may grant attackers full control over the host system.\nMitigation: Ensure ECS containers run as non-privileged users to minimize attack impact.", "metadata": {"threat_id": "ECS_035", "threat_name": "ECS Containers Running as Privileged", "source": "An external client or an AWS service", "target": "AWS ECS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS ECS\nThreat: Host Process Namespace Sharing in ECS Tasks\nDescription: ECS task definitions that share the host's process namespace may expose sensitive processes to other containers.\nMitigation: Ensure ECS task definitions do not share the host's process namespace to maintain isolation.", "metadata": {"threat_id": "ECS_036", "threat_name": "Host Process Namespace Sharing in ECS Tasks", "source": "An external client or an AWS service", "target": "AWS ECS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS ECS\nThreat: Unrestricted Write Access to Root Filesystem in ECS Containers\nDescription: Containers with unrestricted write access to the root filesystem may allow attackers to modify system files.\nMitigation: Ensure ECS containers are limited to read-only access to root filesystems to prevent unauthorized modifications.", "metadata": {"threat_id": "ECS_037", "threat_name": "Unrestricted Write Access to Root Filesystem in ECS Containers", "source": "An external client or an AWS service", "target": "AWS ECS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS ECS\nThreat: No Container Insights Monitoring\nDescription: If Container Insights is disabled, security issues and performance anomalies can go undetected due to limited visibility into container metrics and logs.\nMitigation: Enable Container Insights on ECS clusters for real-time monitoring and alerting of resource usage, performance issues, and potential attacks.", "metadata": {"threat_id": "ECS_001", "threat_name": "No Container Insights Monitoring", "source": "An external client or an AWS service", "target": "AWS ECS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS ECS\nThreat: Privileged Container Execution\nDescription: Containers allowed to run in privileged mode can escalate privileges, potentially impacting the underlying host or other containers.\nMitigation: Configure task definitions so that containers run without privilege, restricting access to host resources and kernel capabilities.", "metadata": {"threat_id": "ECS_002", "threat_name": "Privileged Container Execution", "source": "An external client or an AWS service", "target": "AWS ECS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS ECS\nThreat: Unrestricted Write Access in Container Filesystem\nDescription: Containers with read-write filesystem access can modify data or system files, leading to unauthorized changes or potential persistent compromise.\nMitigation: Define container filesystems as read-only whenever possible, limiting the container\u2019s ability to alter critical files or host resources.", "metadata": {"threat_id": "ECS_003", "threat_name": "Unrestricted Write Access in Container Filesystem", "source": "An external client or an AWS service", "target": "AWS ECS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS ECS\nThreat: Outdated Fargate Platform Version\nDescription: Running containers on an older platform version may leave them susceptible to known exploits and missing critical patches or features.\nMitigation: Deploy services on the latest Fargate platform version to ensure updated security patches and enhanced features.", "metadata": {"threat_id": "ECS_004", "threat_name": "Outdated Fargate Platform Version", "source": "An external client or an AWS service", "target": "AWS ECS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS ECS\nThreat: Secrets in Environment Variables\nDescription: Storing secret data in environment variables can result in accidental disclosure via logs or unauthorized reads of environment properties.\nMitigation: Use AWS Secrets Manager or AWS Systems Manager Parameter Store with task definition secrets support to avoid placing secrets directly in environment variables.", "metadata": {"threat_id": "ECS_005", "threat_name": "Secrets in Environment Variables", "source": "An external client or an AWS service", "target": "AWS ECS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS ECS\nThreat: No Memory Hard Limit\nDescription: Without a configured memory hard limit, a container can consume all available memory on the host, potentially causing service outages or denial of service.\nMitigation: Set appropriate memory limits in the task definition to prevent a single container from exhausting host resources.", "metadata": {"threat_id": "ECS_006", "threat_name": "No Memory Hard Limit", "source": "An external client or an AWS service", "target": "AWS ECS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS ECS\nThreat: Container Running as root\nDescription: Containers running as the root user have broader access to the container environment and, if escaped, can compromise the underlying host.\nMitigation: Specify a non-root user in the task definition to reduce potential impact from compromised containers.", "metadata": {"threat_id": "ECS_007", "threat_name": "Container Running as root", "source": "An external client or an AWS service", "target": "AWS ECS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS ECS\nThreat: Host PID Mode Exposure\nDescription: Enabling host PID mode gives containers visibility into and potential interaction with host processes, increasing the risk of privilege escalation.\nMitigation: Disable host PID mode to isolate container processes from the underlying host\u2019s process namespace.", "metadata": {"threat_id": "ECS_008", "threat_name": "Host PID Mode Exposure", "source": "An external client or an AWS service", "target": "AWS ECS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS ECS\nThreat: User Not Specified with Host Networking Mode\nDescription: When running in host network mode, omitting a specific user in the task definition allows containers to run with root privileges, increasing lateral movement risk on the host.\nMitigation: Include a non-root user in the task definition to restrict privileges when using host networking mode.", "metadata": {"threat_id": "ECS_009", "threat_name": "User Not Specified with Host Networking Mode", "source": "An external client or an AWS service", "target": "AWS ECS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS EFS\nThreat: Unencrypted EFS File System\nDescription: EFS file systems that do not use encryption expose stored data to unauthorized access and potential data breaches.\nMitigation: Ensure AWS EFS encryption at rest is enabled using AWS KMS to protect sensitive data.", "metadata": {"threat_id": "EFS_001", "threat_name": "Unencrypted EFS File System", "source": "An external client or an AWS service", "target": "AWS EFS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS EFS\nThreat: Unencrypted EFS File System\nDescription: EFS file systems that do not use encryption expose stored data to unauthorized access and potential data breaches.\nMitigation: Ensure AWS EFS encryption at rest is enabled using AWS KMS to protect sensitive data.", "metadata": {"threat_id": "EFS_002", "threat_name": "Unencrypted EFS File System", "source": "An external client or an AWS service", "target": "AWS EFS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS EFS\nThreat: EFS File System Not Encrypted with KMS\nDescription: EFS file systems that are not encrypted using AWS KMS CMK may store sensitive data in an unprotected state, increasing security risks.\nMitigation: Ensure that AWS EFS file systems are encrypted using AWS KMS CMK to enhance security and compliance.", "metadata": {"threat_id": "EFS_002", "threat_name": "EFS File System Not Encrypted with KMS", "source": "An external client or an AWS service", "target": "AWS EFS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS EFS\nThreat: Lack of Root Directory Enforcement in EFS Access Points\nDescription: EFS access points without enforced root directories may allow unintended access to sensitive directories.\nMitigation: Ensure EFS access points enforce a root directory to prevent unauthorized directory traversal.", "metadata": {"threat_id": "EFS_030", "threat_name": "Lack of Root Directory Enforcement in EFS Access Points", "source": "An external client or an AWS service", "target": "AWS EFS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS EFS\nThreat: Lack of User Identity Enforcement in EFS Access Points\nDescription: EFS access points without enforced user identity may allow unauthorized users to access sensitive file systems.\nMitigation: Ensure EFS access points enforce a user identity to restrict access.", "metadata": {"threat_id": "EFS_031", "threat_name": "Lack of User Identity Enforcement in EFS Access Points", "source": "An external client or an AWS service", "target": "AWS EFS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS EFS\nThreat: Lack of Root Directory Enforcement in EFS Access Points\nDescription: EFS access points without enforced root directories may allow unintended access to sensitive directories.\nMitigation: Ensure EFS access points enforce a root directory to prevent unauthorized directory traversal.", "metadata": {"threat_id": "EFS_030", "threat_name": "Lack of Root Directory Enforcement in EFS Access Points", "source": "An external client or an AWS service", "target": "AWS EFS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS EFS\nThreat: Lack of User Identity Enforcement in EFS Access Points\nDescription: EFS access points without enforced user identity may allow unauthorized users to access sensitive file systems.\nMitigation: Ensure EFS access points enforce a user identity to restrict access.", "metadata": {"threat_id": "EFS_031", "threat_name": "Lack of User Identity Enforcement in EFS Access Points", "source": "An external client or an AWS service", "target": "AWS EFS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS EFS\nThreat: EFS File Systems Not Added to AWS Backup Plans\nDescription: Amazon Elastic File System (EFS) file systems not included in AWS Backup plans may result in data loss in case of accidental deletion or failure.\nMitigation: Ensure that Elastic File System (EFS) file systems are added to AWS Backup plans to ensure data resilience.", "metadata": {"threat_id": "EFS_070", "threat_name": "EFS File Systems Not Added to AWS Backup Plans", "source": "An external client or an AWS service", "target": "AWS EFS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS EFS\nThreat: Unrestricted Root Directory Access\nDescription: If an EFS access point does not enforce a specific root directory, users may inadvertently or maliciously gain access to more of the file system than intended.\nMitigation: Configure EFS access points to strictly define and enforce the root directory path, restricting access to only necessary file system paths.", "metadata": {"threat_id": "EFS_001", "threat_name": "Unrestricted Root Directory Access", "source": "An external client or an AWS service", "target": "AWS EFS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS EFS\nThreat: User Identity Not Enforced\nDescription: Without enforcing user identity, the EFS access point allows clients to override UID/GID, potentially leading to privilege escalation or unauthorized data access.\nMitigation: Enable user identity enforcement on EFS access points, ensuring the correct UID/GID are applied to requests and preventing unauthorized privilege changes.", "metadata": {"threat_id": "EFS_002", "threat_name": "User Identity Not Enforced", "source": "An external client or an AWS service", "target": "AWS EFS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS EFS\nThreat: Unencrypted File System\nDescription: An unencrypted EFS file system risks unauthorized access to data at rest if the storage layer is compromised.\nMitigation: Enable encryption at rest using AWS KMS to ensure data remains protected from unauthorized access to underlying storage.", "metadata": {"threat_id": "EFS_003", "threat_name": "Unencrypted File System", "source": "An external client or an AWS service", "target": "AWS EFS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS EFS\nThreat: Lack of Backup Coverage\nDescription: If an EFS file system is not included in a backup plan, data could be irrecoverably lost in the event of deletion or corruption.\nMitigation: Use AWS Backup or other solutions to include EFS in a formal backup plan, ensuring point-in-time restore capabilities.", "metadata": {"threat_id": "EFS_004", "threat_name": "Lack of Backup Coverage", "source": "An external client or an AWS service", "target": "AWS EFS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS EFS\nThreat: EFS Not Encrypted at Rest\nDescription: Unencrypted EFS data can be read by anyone who gains access to the underlying storage, leading to potential data leakage or compromise.\nMitigation: Enable encryption at rest for EFS using AWS KMS customer-managed keys, ensuring data is protected from unauthorized access.", "metadata": {"threat_id": "STORAGE_008", "threat_name": "EFS Not Encrypted at Rest", "source": "An external client or an AWS service", "target": "AWS EFS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS EFS\nThreat: EFS File Systems Not in Backup Plan\nDescription: EFS file systems not protected by a backup plan cannot be restored if data is accidentally deleted or corrupted.\nMitigation: Add EFS resources to AWS Backup plans to create periodic, recoverable backups of file system data.", "metadata": {"threat_id": "STORAGE_009", "threat_name": "EFS File Systems Not in Backup Plan", "source": "An external client or an AWS service", "target": "AWS EFS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS EKS\nThreat: EKS Control Plane Logging Disabled\nDescription: Amazon EKS clusters without control plane logging enabled lack visibility into API requests, authentication events, and security-related activities.\nMitigation: Enable Amazon EKS control plane logging for all log types to enhance observability and security monitoring.", "metadata": {"threat_id": "EKS_001", "threat_name": "EKS Control Plane Logging Disabled", "source": "An external client or an AWS service", "target": "AWS EKS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS EKS\nThreat: EKS Public Endpoint Accessible from Anywhere\nDescription: An Amazon EKS cluster with a public endpoint accessible to 0.0.0.0/0 increases the risk of unauthorized access and potential attacks.\nMitigation: Restrict public access to the EKS control plane endpoint by allowing access only from trusted IP addresses or private networking configurations.", "metadata": {"threat_id": "EKS_002", "threat_name": "EKS Public Endpoint Accessible from Anywhere", "source": "An external client or an AWS service", "target": "AWS EKS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS EKS\nThreat: EKS Public Endpoint Enabled\nDescription: An Amazon EKS cluster with a public endpoint enabled increases the risk of unauthorized access and potential attacks.\nMitigation: Disable the public endpoint for EKS clusters and use private networking options such as VPC endpoints or bastion hosts for secure access.", "metadata": {"threat_id": "EKS_003", "threat_name": "EKS Public Endpoint Enabled", "source": "An external client or an AWS service", "target": "AWS EKS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS EKS\nThreat: EKS Cluster Without Secrets Encryption\nDescription: EKS clusters without secrets encryption enabled store Kubernetes secrets in plaintext in etcd, increasing the risk of credential leaks and unauthorized access.\nMitigation: Enable secrets encryption in EKS clusters using AWS KMS to protect sensitive information stored in etcd.", "metadata": {"threat_id": "EKS_003", "threat_name": "EKS Cluster Without Secrets Encryption", "source": "An external client or an AWS service", "target": "AWS EKS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS EKS\nThreat: EKS Cluster Without Secrets Encryption\nDescription: EKS clusters without secrets encryption enabled store Kubernetes secrets in plaintext in etcd, increasing the risk of credential leaks and unauthorized access.\nMitigation: Enable secrets encryption in EKS clusters using AWS KMS to protect sensitive information stored in etcd.", "metadata": {"threat_id": "EKS_004", "threat_name": "EKS Cluster Without Secrets Encryption", "source": "An external client or an AWS service", "target": "AWS EKS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS EKS\nThreat: EKS Node Group Allows SSH Access from 0.0.0.0/0\nDescription: EKS node groups that allow SSH access from 0.0.0.0/0 expose instances to potential unauthorized access and brute-force attacks.\nMitigation: Ensure that security groups attached to EKS node groups restrict SSH access to known IP addresses or disable SSH access entirely.", "metadata": {"threat_id": "EKS_003", "threat_name": "EKS Node Group Allows SSH Access from 0.0.0.0/0", "source": "An external client or an AWS service", "target": "AWS EKS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS EKS\nThreat: EKS Node Group Allows SSH Access from 0.0.0.0/0\nDescription: EKS node groups that allow SSH access from 0.0.0.0/0 expose instances to potential unauthorized access and brute-force attacks.\nMitigation: Ensure that security groups attached to EKS node groups restrict SSH access to known IP addresses or disable SSH access entirely.", "metadata": {"threat_id": "EKS_004", "threat_name": "EKS Node Group Allows SSH Access from 0.0.0.0/0", "source": "An external client or an AWS service", "target": "AWS EKS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS EKS\nThreat: Unsupported Kubernetes Version in EKS Cluster\nDescription: EKS clusters running unsupported Kubernetes versions may contain vulnerabilities and lack security updates.\nMitigation: Ensure EKS clusters run on a supported Kubernetes version to receive security patches and feature updates.", "metadata": {"threat_id": "EKS_002", "threat_name": "Unsupported Kubernetes Version in EKS Cluster", "source": "An external client or an AWS service", "target": "AWS EKS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS EKS\nThreat: Outdated EKS Cluster Version\nDescription: Running an EKS cluster on a version older than the minimum supported release exposes it to unpatched vulnerabilities and compatibility issues.\nMitigation: Upgrade the EKS cluster to a supported version that receives security updates and aligns with AWS maintenance policies.", "metadata": {"threat_id": "EKS_001", "threat_name": "Outdated EKS Cluster Version", "source": "An external client or an AWS service", "target": "AWS EKS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS EKS\nThreat: Unsupported EKS Cluster Version\nDescription: Clusters running unsupported versions no longer receive updates, security patches, or official support, increasing the risk of exploits.\nMitigation: Regularly check AWS documentation for current supported versions and upgrade clusters accordingly before deprecation deadlines.", "metadata": {"threat_id": "EKS_002", "threat_name": "Unsupported EKS Cluster Version", "source": "An external client or an AWS service", "target": "AWS EKS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS EKS\nThreat: Publicly Accessible EKS Endpoint\nDescription: If the cluster endpoint is publicly exposed, unauthorized users on the internet can attempt to connect or launch attacks against the cluster.\nMitigation: Disable public endpoint access or restrict it to specific trusted IP addresses, and enforce network security configurations.", "metadata": {"threat_id": "EKS_003", "threat_name": "Publicly Accessible EKS Endpoint", "source": "An external client or an AWS service", "target": "AWS EKS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS EKS\nThreat: Unencrypted EKS Secrets\nDescription: Storing Kubernetes secrets in plain text without encryption allows attackers with underlying storage access to read or exfiltrate sensitive data.\nMitigation: Enable envelope encryption for EKS secrets using AWS KMS customer-managed keys to protect data at rest and limit key usage.", "metadata": {"threat_id": "EKS_004", "threat_name": "Unencrypted EKS Secrets", "source": "An external client or an AWS service", "target": "AWS EKS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS ELB\nThreat: Weak Desync Mitigation Mode in ELB\nDescription: ELBs not configured with defensive or strictest desync mitigation mode may be vulnerable to HTTP desync attacks.\nMitigation: Ensure that ELB is configured with defensive or strictest desync mitigation mode to prevent HTTP request smuggling attacks.", "metadata": {"threat_id": "ELB_028", "threat_name": "Weak Desync Mitigation Mode in ELB", "source": "An external client or an AWS service", "target": "AWS ELB"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS EMR\nThreat: EMR Cluster Without Kerberos Realm Set\nDescription: EMR clusters configured with Kerberos but without a specified Kerberos Realm may lack proper authentication enforcement, leading to potential unauthorized access.\nMitigation: Ensure that EMR clusters using Kerberos have a Kerberos Realm set to enforce authentication security.", "metadata": {"threat_id": "EMR_002", "threat_name": "EMR Cluster Without Kerberos Realm Set", "source": "An external client or an AWS service", "target": "AWS EMR"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS EMR\nThreat: EMR Cluster Security Configuration Not Using SSE-KMS\nDescription: EMR clusters without Server-Side Encryption (SSE-KMS) may store sensitive data in an unencrypted format, increasing security risks.\nMitigation: Ensure that EMR clusters use SSE-KMS for encrypting data at rest to enhance security and compliance.", "metadata": {"threat_id": "EMR_003", "threat_name": "EMR Cluster Security Configuration Not Using SSE-KMS", "source": "An external client or an AWS service", "target": "AWS EMR"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS EMR\nThreat: Unencrypted EMR Local Disks\nDescription: EMR clusters without local disk encryption may expose sensitive data to unauthorized access.\nMitigation: Ensure EMR Cluster security configuration encrypts local disks using a secure encryption method.", "metadata": {"threat_id": "EMR_009", "threat_name": "Unencrypted EMR Local Disks", "source": "An external client or an AWS service", "target": "AWS EMR"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS EMR\nThreat: Unencrypted EMR EBS Disks\nDescription: EMR clusters without EBS disk encryption may expose sensitive data stored on attached volumes.\nMitigation: Ensure EMR Cluster security configuration encrypts EBS disks using a customer-managed key (CMK).", "metadata": {"threat_id": "EMR_010", "threat_name": "Unencrypted EMR EBS Disks", "source": "An external client or an AWS service", "target": "AWS EMR"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS EMR\nThreat: Unencrypted In-Transit EMR Communication\nDescription: EMR clusters that do not have in-transit encryption enabled may expose sensitive data during communication between nodes.\nMitigation: Ensure EMR Cluster security configuration encrypts in-transit data using TLS and KMS CMKs.", "metadata": {"threat_id": "EMR_011", "threat_name": "Unencrypted In-Transit EMR Communication", "source": "An external client or an AWS service", "target": "AWS EMR"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS EMR\nThreat: Amazon EMR Clusters With Open Security Groups\nDescription: Amazon EMR clusters with security groups open to the world may be vulnerable to external attacks.\nMitigation: Ensure that Amazon EMR clusters' security groups are not open to the world and apply least privilege access.", "metadata": {"threat_id": "EMR_058", "threat_name": "Amazon EMR Clusters With Open Security Groups", "source": "An external client or an AWS service", "target": "AWS EMR"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS EMR\nThreat: Amazon EMR Clusters with Open Security Groups\nDescription: Amazon EMR clusters with security groups open to the world may be exposed to unauthorized access and potential attacks.\nMitigation: Ensure that Amazon EMR clusters' security groups are not open to the world and enforce least privilege access.", "metadata": {"threat_id": "EMR_059", "threat_name": "Amazon EMR Clusters with Open Security Groups", "source": "An external client or an AWS service", "target": "AWS EMR"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS EMR\nThreat: EMR Cluster Without Security Configuration\nDescription: AWS EMR clusters without security configuration may expose data and processing resources to unauthorized access.\nMitigation: Ensure EMR clusters are configured with a security configuration that enforces encryption and access controls.", "metadata": {"threat_id": "EMR_012", "threat_name": "EMR Cluster Without Security Configuration", "source": "An external client or an AWS service", "target": "AWS EMR"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS ElastiCache\nThreat: Elasticache Security Group Rules Lack Descriptions\nDescription: ElastiCache security groups and their rules without descriptions can lead to misconfigured access policies and hinder security audits.\nMitigation: Ensure all ElastiCache security group rules include descriptions to maintain visibility and track access permissions.", "metadata": {"threat_id": "ELASTICACHE_001", "threat_name": "Elasticache Security Group Rules Lack Descriptions", "source": "An external client or an AWS service", "target": "AWS ElastiCache"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS ElastiCache\nThreat: Unencrypted ElastiCache Replication Group Data at Rest\nDescription: ElastiCache replication groups that do not use encryption at rest expose sensitive cache data to unauthorized access and data breaches.\nMitigation: Enable encryption at rest for ElastiCache replication groups using AWS KMS to protect sensitive data.", "metadata": {"threat_id": "ELASTICACHE_002", "threat_name": "Unencrypted ElastiCache Replication Group Data at Rest", "source": "An external client or an AWS service", "target": "AWS ElastiCache"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS ElastiCache\nThreat: Unencrypted ElastiCache Replication Group Data at Rest\nDescription: ElastiCache replication groups that do not use encryption at rest expose sensitive cache data to unauthorized access and data breaches.\nMitigation: Enable encryption at rest for ElastiCache replication groups using AWS KMS to protect sensitive data.", "metadata": {"threat_id": "ELASTICACHE_003", "threat_name": "Unencrypted ElastiCache Replication Group Data at Rest", "source": "An external client or an AWS service", "target": "AWS ElastiCache"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS ElastiCache\nThreat: Unencrypted ElastiCache Replication Group Data in Transit\nDescription: ElastiCache replication groups that do not use encryption in transit expose data to interception, unauthorized access, and man-in-the-middle attacks.\nMitigation: Enable encryption in transit for ElastiCache replication groups to protect data during transmission.", "metadata": {"threat_id": "ELASTICACHE_004", "threat_name": "Unencrypted ElastiCache Replication Group Data in Transit", "source": "An external client or an AWS service", "target": "AWS ElastiCache"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS ElastiCache\nThreat: Unencrypted ElastiCache Replication Group Data in Transit\nDescription: ElastiCache replication groups that do not use encryption in transit expose data to interception, unauthorized access, and man-in-the-middle attacks.\nMitigation: Enable encryption in transit for ElastiCache replication groups to protect data during transmission.", "metadata": {"threat_id": "ELASTICACHE_005", "threat_name": "Unencrypted ElastiCache Replication Group Data in Transit", "source": "An external client or an AWS service", "target": "AWS ElastiCache"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS ElastiCache\nThreat: ElastiCache Replication Group Without Authentication Token\nDescription: ElastiCache replication groups without authentication tokens allow unauthenticated clients to connect, increasing the risk of unauthorized data access.\nMitigation: Ensure authentication tokens are enabled for ElastiCache replication groups to restrict access to authorized clients.", "metadata": {"threat_id": "ELASTICACHE_006", "threat_name": "ElastiCache Replication Group Without Authentication Token", "source": "An external client or an AWS service", "target": "AWS ElastiCache"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS ElastiCache\nThreat: Amazon ElastiCache Redis Cluster Without Automatic Backups\nDescription: ElastiCache Redis clusters without automatic backups enabled are vulnerable to data loss in case of node failures or configuration errors.\nMitigation: Enable automatic backups for ElastiCache Redis clusters to ensure data recoverability and reduce downtime in case of failures.", "metadata": {"threat_id": "ELASTICACHE_003", "threat_name": "Amazon ElastiCache Redis Cluster Without Automatic Backups", "source": "An external client or an AWS service", "target": "AWS ElastiCache"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS ElastiCache\nThreat: ElastiCache Replication Group Not Encrypted with KMS\nDescription: ElastiCache replication groups that are not encrypted using AWS KMS CMK may store sensitive data in an unprotected state, increasing security risks.\nMitigation: Ensure that AWS ElastiCache replication groups are encrypted using AWS KMS CMK to protect in-memory data.", "metadata": {"threat_id": "ELASTICACHE_005", "threat_name": "ElastiCache Replication Group Not Encrypted with KMS", "source": "An external client or an AWS service", "target": "AWS ElastiCache"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS ElastiCache\nThreat: ElastiCache Security Group Resources Exist\nDescription: ElastiCache security groups may be improperly configured, allowing unauthorized access to in-memory data stores.\nMitigation: Ensure that no AWS ElastiCache security group resources exist, and instead use VPC security groups for access control.", "metadata": {"threat_id": "ELASTICACHE_006", "threat_name": "ElastiCache Security Group Resources Exist", "source": "An external client or an AWS service", "target": "AWS ElastiCache"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS ElastiCache\nThreat: Auto Minor Version Upgrades Disabled in ElastiCache\nDescription: ElastiCache clusters without automatic minor version upgrades may be vulnerable to known security issues.\nMitigation: Ensure ElastiCache for Redis cache clusters have auto minor version upgrades enabled.", "metadata": {"threat_id": "ELASTICACHE_021", "threat_name": "Auto Minor Version Upgrades Disabled in ElastiCache", "source": "An external client or an AWS service", "target": "AWS ElastiCache"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS ElastiCache\nThreat: Use of Default Subnet Group in ElastiCache\nDescription: ElastiCache clusters using the default subnet group may lack network segmentation, increasing exposure to threats.\nMitigation: Ensure ElastiCache clusters do not use the default subnet group and instead use a custom subnet group.", "metadata": {"threat_id": "ELASTICACHE_022", "threat_name": "Use of Default Subnet Group in ElastiCache", "source": "An external client or an AWS service", "target": "AWS ElastiCache"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS ElastiCache\nThreat: ElastiCache Redis Cluster Without Multi-AZ Failover\nDescription: ElastiCache Redis clusters without Multi-AZ Automatic Failover enabled may experience availability issues in the event of a failure.\nMitigation: Enable Multi-AZ Automatic Failover for ElastiCache Redis clusters to ensure high availability and failover support.", "metadata": {"threat_id": "ELC_006", "threat_name": "ElastiCache Redis Cluster Without Multi-AZ Failover", "source": "An external client or an AWS service", "target": "AWS ElastiCache"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS ElastiCache\nThreat: ElastiCache Redis Cluster Lacking Multi-AZ Automatic Failover\nDescription: ElastiCache Redis clusters without Multi-AZ Automatic Failover enabled may suffer from availability issues in case of failure.\nMitigation: Enable Multi-AZ Automatic Failover for AWS ElastiCache Redis clusters to ensure high availability.", "metadata": {"threat_id": "ELC_007", "threat_name": "ElastiCache Redis Cluster Lacking Multi-AZ Automatic Failover", "source": "An external client or an AWS service", "target": "AWS ElastiCache"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Elastic Beanstalk\nThreat: Elastic Beanstalk Environment Without Enhanced Health Reporting\nDescription: Elastic Beanstalk environments without enhanced health reporting may not provide sufficient insights into application health.\nMitigation: Ensure Elastic Beanstalk environments have enhanced health reporting enabled.", "metadata": {"threat_id": "ELASTIC_BEANSTALK_009", "threat_name": "Elastic Beanstalk Environment Without Enhanced Health Reporting", "source": "An external client or an AWS service", "target": "AWS Elastic Beanstalk"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Elastic Beanstalk\nThreat: Elastic Beanstalk Without Managed Platform Updates\nDescription: Elastic Beanstalk environments without managed platform updates may contain security vulnerabilities.\nMitigation: Enable managed platform updates in Elastic Beanstalk environments to ensure automatic security patching.", "metadata": {"threat_id": "EB_003", "threat_name": "Elastic Beanstalk Without Managed Platform Updates", "source": "An external client or an AWS service", "target": "AWS Elastic Beanstalk"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Elastic Load Balancer\nThreat: Unencrypted ALB Listener Traffic\nDescription: ALB listeners configured with non-HTTPS protocols (e.g., HTTP) expose data in transit to interception and man-in-the-middle (MITM) attacks.\nMitigation: Ensure ALB listeners enforce HTTPS to encrypt data in transit and use TLS 1.2 or higher.", "metadata": {"threat_id": "ALB_003", "threat_name": "Unencrypted ALB Listener Traffic", "source": "An external client or an AWS service", "target": "AWS Elastic Load Balancer"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Elastic Load Balancer\nThreat: ELBv2 Without Access Logging\nDescription: Elastic Load Balancers (ALB/NLB) without access logging enabled lack visibility into traffic patterns and security events, making it difficult to detect anomalies.\nMitigation: Enable access logging for ELBv2 instances to capture traffic logs for security monitoring and troubleshooting.", "metadata": {"threat_id": "ELB_003", "threat_name": "ELBv2 Without Access Logging", "source": "An external client or an AWS service", "target": "AWS Elastic Load Balancer"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Elastic Load Balancer\nThreat: ELBv2 Without Access Logging\nDescription: ALBs without access logging enabled lack visibility into request patterns and potential security incidents, increasing the risk of undetected threats.\nMitigation: Ensure that ALB access logging is enabled and logs are stored securely in an Amazon S3 bucket.", "metadata": {"threat_id": "ELB_004", "threat_name": "ELBv2 Without Access Logging", "source": "An external client or an AWS service", "target": "AWS Elastic Load Balancer"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Elastic Load Balancer\nThreat: ELBv2 Without Access Logging\nDescription: Load Balancers without access logging enabled lack visibility into request patterns and potential security incidents, increasing the risk of undetected threats.\nMitigation: Ensure that access logging is enabled and logs are stored securely in an Amazon S3 bucket.", "metadata": {"threat_id": "ELB_005", "threat_name": "ELBv2 Without Access Logging", "source": "An external client or an AWS service", "target": "AWS Elastic Load Balancer"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Elastic Load Balancer\nThreat: ELB Without Access Logging\nDescription: Elastic Load Balancers without access logging enabled lack visibility into traffic patterns and security events, making it difficult to detect anomalies.\nMitigation: Enable access logging for ELB instances to capture traffic logs for security monitoring and troubleshooting.", "metadata": {"threat_id": "ELB_006", "threat_name": "ELB Without Access Logging", "source": "An external client or an AWS service", "target": "AWS Elastic Load Balancer"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Elastic Load Balancer\nThreat: ELB Without Access Logging\nDescription: Classic Load Balancers without access logging enabled lack visibility into request patterns and potential security incidents, increasing the risk of undetected threats.\nMitigation: Ensure that Classic Load Balancer access logging is enabled and logs are stored securely in an Amazon S3 bucket.", "metadata": {"threat_id": "ELB_007", "threat_name": "ELB Without Access Logging", "source": "An external client or an AWS service", "target": "AWS Elastic Load Balancer"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Elastic Load Balancer\nThreat: Load Balancer Listener Using Insecure TLS Version\nDescription: Load balancer listeners using outdated TLS versions (earlier than TLS 1.2) expose communication to security vulnerabilities, including man-in-the-middle attacks.\nMitigation: Ensure that all load balancer listeners enforce TLS 1.2 or higher to maintain secure encrypted communications.", "metadata": {"threat_id": "ELB_008", "threat_name": "Load Balancer Listener Using Insecure TLS Version", "source": "An external client or an AWS service", "target": "AWS Elastic Load Balancer"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Elastic Load Balancer\nThreat: Load Balancer Listener Using Insecure TLS Version\nDescription: Application Load Balancers (ALB) using outdated TLS versions pose a security risk by allowing weak encryption that may be susceptible to attacks.\nMitigation: Ensure that ALB listeners enforce TLS 1.2 or higher to comply with best security practices.", "metadata": {"threat_id": "ELB_009", "threat_name": "Load Balancer Listener Using Insecure TLS Version", "source": "An external client or an AWS service", "target": "AWS Elastic Load Balancer"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Elastic Load Balancer\nThreat: Load Balancer Using Insecure TLS Version\nDescription: Load balancers that do not enforce at least TLS 1.2 expose applications to security vulnerabilities associated with weak cryptographic standards.\nMitigation: Ensure that all load balancers enforce TLS 1.2 or higher for secure encrypted communication.", "metadata": {"threat_id": "ELB_010", "threat_name": "Load Balancer Using Insecure TLS Version", "source": "An external client or an AWS service", "target": "AWS Elastic Load Balancer"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Elastic Load Balancer\nThreat: Load Balancer Listener Using Insecure TLS Version\nDescription: Load balancer listeners using outdated TLS versions pose a security risk by allowing insecure encryption, making traffic susceptible to compromise.\nMitigation: Ensure that all load balancer listeners enforce TLS 1.2 or higher for enhanced security.", "metadata": {"threat_id": "ELB_011", "threat_name": "Load Balancer Listener Using Insecure TLS Version", "source": "An external client or an AWS service", "target": "AWS Elastic Load Balancer"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Elastic Load Balancer\nThreat: Elastic Load Balancer Not Using ACM SSL Certificates\nDescription: Elastic Load Balancers (ELB) that do not use SSL certificates provided by AWS Certificate Manager (ACM) may rely on expired or insecure certificates, increasing the risk of man-in-the-middle (MITM) attacks.\nMitigation: Ensure that Elastic Load Balancers (ELBs) use SSL certificates issued and managed by AWS Certificate Manager (ACM) for secure and automated certificate renewal.", "metadata": {"threat_id": "ELB_005", "threat_name": "Elastic Load Balancer Not Using ACM SSL Certificates", "source": "An external client or an AWS service", "target": "AWS Elastic Load Balancer"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Elastic Load Balancer\nThreat: Application Load Balancer Not Dropping HTTP Headers\nDescription: Application Load Balancers (ALBs) that do not drop HTTP headers may inadvertently expose internal server information, increasing the risk of reconnaissance attacks.\nMitigation: Ensure that ALBs are configured to drop unnecessary HTTP headers to prevent information disclosure.", "metadata": {"threat_id": "ALB_003", "threat_name": "Application Load Balancer Not Dropping HTTP Headers", "source": "An external client or an AWS service", "target": "AWS Elastic Load Balancer"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Elastic Load Balancer\nThreat: Application Load Balancer Not Dropping HTTP Headers\nDescription: Application Load Balancers (ALBs) that do not drop HTTP headers may expose sensitive metadata, increasing the risk of information leaks.\nMitigation: Enable ALB settings to drop unnecessary HTTP headers and reduce exposure to fingerprinting attacks.", "metadata": {"threat_id": "ALB_004", "threat_name": "Application Load Balancer Not Dropping HTTP Headers", "source": "An external client or an AWS service", "target": "AWS Elastic Load Balancer"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Elastic Load Balancer\nThreat: Application Load Balancer Not Dropping HTTP Headers\nDescription: ALBs that do not drop unnecessary HTTP headers may expose internal server information, making them vulnerable to reconnaissance attacks and potential exploits.\nMitigation: Ensure that ALBs are configured to drop unnecessary HTTP headers to prevent information disclosure and mitigate security risks.", "metadata": {"threat_id": "ALB_005", "threat_name": "Application Load Balancer Not Dropping HTTP Headers", "source": "An external client or an AWS service", "target": "AWS Elastic Load Balancer"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Elastic Load Balancer\nThreat: ELB Without Cross-Zone Load Balancing\nDescription: ELBs that do not have cross-zone load balancing enabled may experience uneven traffic distribution, leading to inefficient resource utilization and potential service disruptions.\nMitigation: Enable cross-zone load balancing on ELBs to ensure even traffic distribution and improve application availability.", "metadata": {"threat_id": "ELB_006", "threat_name": "ELB Without Cross-Zone Load Balancing", "source": "An external client or an AWS service", "target": "AWS Elastic Load Balancer"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Elastic Load Balancer\nThreat: Load Balancer Without Deletion Protection\nDescription: Load balancers without deletion protection enabled may be accidentally deleted, leading to downtime and service disruption.\nMitigation: Enable deletion protection for all critical load balancers to prevent accidental deletions and maintain service availability.", "metadata": {"threat_id": "ALB_006", "threat_name": "Load Balancer Without Deletion Protection", "source": "An external client or an AWS service", "target": "AWS Elastic Load Balancer"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Elastic Load Balancer\nThreat: Network/Gateway Load Balancer Without Cross-Zone Load Balancing\nDescription: Network or Gateway Load Balancers that do not have cross-zone load balancing enabled may experience inefficient traffic distribution, causing performance issues and uneven load handling.\nMitigation: Ensure that cross-zone load balancing is enabled for Network and Gateway Load Balancers to optimize traffic distribution across multiple availability zones.", "metadata": {"threat_id": "LB_007", "threat_name": "Network/Gateway Load Balancer Without Cross-Zone Load Balancing", "source": "An external client or an AWS service", "target": "AWS Elastic Load Balancer"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Elastic Load Balancer\nThreat: ELB Policy Uses Insecure Protocols\nDescription: An ELB policy that allows insecure protocols may expose applications to data interception, man-in-the-middle attacks, and protocol vulnerabilities.\nMitigation: Ensure that AWS ELB policies use only secure protocols such as TLS 1.2 or higher.", "metadata": {"threat_id": "ELB_005", "threat_name": "ELB Policy Uses Insecure Protocols", "source": "An external client or an AWS service", "target": "AWS Elastic Load Balancer"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Elastic Load Balancer\nThreat: Missing Health Checks in Load Balancer Target Group\nDescription: If HTTP/HTTPS target groups do not define health checks, traffic may be routed to unhealthy instances, causing application downtime or degraded performance.\nMitigation: Ensure HTTP/HTTPS target groups define health checks to monitor instance health and route traffic only to healthy instances.", "metadata": {"threat_id": "LB_001", "threat_name": "Missing Health Checks in Load Balancer Target Group", "source": "An external client or an AWS service", "target": "AWS Elastic Load Balancer"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Elastic Load Balancer\nThreat: Unsecured ELB Listener\nDescription: Elastic Load Balancers using unencrypted protocols such as HTTP increase the risk of data interception.\nMitigation: Ensure AWS Elastic Load Balancer listener uses TLS/SSL.", "metadata": {"threat_id": "ELB_037", "threat_name": "Unsecured ELB Listener", "source": "An external client or an AWS service", "target": "AWS Elastic Load Balancer"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Elastic Load Balancer\nThreat: Auto Scaling Groups Without ELB Health Checks\nDescription: Auto Scaling groups associated with a load balancer but not using ELB health checks may result in inefficient scaling and increased downtime.\nMitigation: Ensure that Auto Scaling groups that are associated with a load balancer use Elastic Load Balancing health checks for accurate scaling decisions.", "metadata": {"threat_id": "ELB_068", "threat_name": "Auto Scaling Groups Without ELB Health Checks", "source": "An external client or an AWS service", "target": "AWS Elastic Load Balancer"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Elastic Load Balancer\nThreat: Application Load Balancer Not Enforcing HTTPS\nDescription: Application Load Balancers that do not redirect HTTP requests to HTTPS may expose sensitive data to interception.\nMitigation: Ensure that ALB redirects HTTP requests to HTTPS using appropriate listener rules to enforce secure communication.", "metadata": {"threat_id": "ALB_072", "threat_name": "Application Load Balancer Not Enforcing HTTPS", "source": "An external client or an AWS service", "target": "AWS Elastic Load Balancer"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Elastic Load Balancer\nThreat: ALB Not Redirecting HTTP to HTTPS\nDescription: ALBs that do not redirect HTTP traffic to HTTPS may expose sensitive data to interception and compromise secure communication.\nMitigation: Ensure that ALB redirects HTTP requests to HTTPS by enforcing SSL policies at the listener level.", "metadata": {"threat_id": "ALB_073", "threat_name": "ALB Not Redirecting HTTP to HTTPS", "source": "An external client or an AWS service", "target": "AWS Elastic Load Balancer"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Elastic Load Balancer\nThreat: ELB Logging Disabled\nDescription: Without load balancer access logs, suspicious requests cannot be audited or traced, impeding threat detection and forensics.\nMitigation: Enable access logging for all active load balancers and store logs securely in S3 for analysis.", "metadata": {"threat_id": "SEC_014", "threat_name": "ELB Logging Disabled", "source": "An external client or an AWS service", "target": "AWS Elastic Load Balancer"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Elasticsearch\nThreat: Unencrypted Elasticsearch Data (AWS::Elasticsearch::Domain)\nDescription: If Elasticsearch data at rest is not encrypted, attackers who access the underlying storage could exfiltrate sensitive information.\nMitigation: Enable encryption at rest via AWS KMS to protect data, ensuring only authorized principals can decrypt it.", "metadata": {"threat_id": "ES_001", "threat_name": "Unencrypted Elasticsearch Data (AWS::Elasticsearch::Domain)", "source": "An external client or an AWS service", "target": "AWS Elasticsearch"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Elasticsearch\nThreat: Unencrypted Elasticsearch Data (aws_elasticsearch_domain)\nDescription: Storing data in a non-encrypted Elasticsearch domain allows anyone with storage-level access to read or extract the data without authorization.\nMitigation: Configure encryption at rest with KMS keys on the Elasticsearch domain to secure data from unauthorized disclosure.", "metadata": {"threat_id": "ES_002", "threat_name": "Unencrypted Elasticsearch Data (aws_elasticsearch_domain)", "source": "An external client or an AWS service", "target": "AWS Elasticsearch"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Elasticsearch\nThreat: Unencrypted Elasticsearch Data (aws_opensearch_domain)\nDescription: If the OpenSearch domain is not configured for encryption at rest, stored data may be exposed if the underlying storage is compromised.\nMitigation: Enable encryption at rest using KMS on the OpenSearch domain, limiting key usage to authorized IAM roles.", "metadata": {"threat_id": "ES_003", "threat_name": "Unencrypted Elasticsearch Data (aws_opensearch_domain)", "source": "An external client or an AWS service", "target": "AWS Elasticsearch"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Elasticsearch\nThreat: No Node-to-Node Encryption (AWS::Elasticsearch::Domain)\nDescription: Without node-to-node encryption, data traversing between Elasticsearch nodes can be intercepted or tampered with by an attacker on the network.\nMitigation: Enable node-to-node encryption to ensure data is encrypted in transit between all nodes in the Elasticsearch cluster.", "metadata": {"threat_id": "ES_004", "threat_name": "No Node-to-Node Encryption (AWS::Elasticsearch::Domain)", "source": "An external client or an AWS service", "target": "AWS Elasticsearch"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Elasticsearch\nThreat: No Node-to-Node Encryption (aws_elasticsearch_domain)\nDescription: When node-to-node encryption is disabled, data exchanged across Elasticsearch nodes can be intercepted or modified if an attacker has network visibility.\nMitigation: Activate node-to-node encryption for all Elasticsearch domain nodes to protect in-transit data from unauthorized viewing or tampering.", "metadata": {"threat_id": "ES_005", "threat_name": "No Node-to-Node Encryption (aws_elasticsearch_domain)", "source": "An external client or an AWS service", "target": "AWS Elasticsearch"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Elasticsearch\nThreat: No Node-to-Node Encryption (aws_opensearch_domain)\nDescription: Unencrypted traffic between OpenSearch domain nodes can be sniffed or altered by malicious actors with network access, compromising data integrity and confidentiality.\nMitigation: Enable node-to-node encryption to ensure internal cluster communications remain protected and tamper-proof.", "metadata": {"threat_id": "ES_006", "threat_name": "No Node-to-Node Encryption (aws_opensearch_domain)", "source": "An external client or an AWS service", "target": "AWS Elasticsearch"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Elasticsearch\nThreat: Elasticsearch Domain Without HTTPS Enforcement\nDescription: Elasticsearch domains that do not enforce HTTPS allow data to be transmitted in plaintext, increasing the risk of interception and unauthorized access.\nMitigation: Ensure that Elasticsearch domains enforce HTTPS to secure data in transit and prevent unauthorized access.", "metadata": {"threat_id": "ELASTICSEARCH_001", "threat_name": "Elasticsearch Domain Without HTTPS Enforcement", "source": "An external client or an AWS service", "target": "AWS Elasticsearch"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Elasticsearch\nThreat: Elasticsearch Domain Without HTTPS Enforcement\nDescription: Elasticsearch domains that do not enforce HTTPS allow data to be transmitted in plaintext, increasing the risk of interception and unauthorized access.\nMitigation: Ensure that Elasticsearch domains enforce HTTPS to secure data in transit and prevent unauthorized access.", "metadata": {"threat_id": "ELASTICSEARCH_002", "threat_name": "Elasticsearch Domain Without HTTPS Enforcement", "source": "An external client or an AWS service", "target": "AWS Elasticsearch"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Elasticsearch\nThreat: Elasticsearch Domain Logging Disabled\nDescription: Elasticsearch domains without logging enabled lack visibility into access patterns, search queries, and potential security incidents.\nMitigation: Ensure Elasticsearch logging is enabled to capture audit logs for security monitoring and compliance.", "metadata": {"threat_id": "ELASTICSEARCH_003", "threat_name": "Elasticsearch Domain Logging Disabled", "source": "An external client or an AWS service", "target": "AWS Elasticsearch"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Elasticsearch\nThreat: Elasticsearch Domain Logging Disabled\nDescription: Elasticsearch domains without logging enabled lack visibility into access patterns, search queries, and potential security incidents.\nMitigation: Ensure Elasticsearch logging is enabled to capture audit logs for security monitoring and compliance.", "metadata": {"threat_id": "ELASTICSEARCH_004", "threat_name": "Elasticsearch Domain Logging Disabled", "source": "An external client or an AWS service", "target": "AWS Elasticsearch"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Elasticsearch\nThreat: Elasticsearch Cluster Not Configured Inside a VPC\nDescription: Elasticsearch clusters that are not deployed within a VPC may be exposed to the public internet, increasing the risk of data breaches and unauthorized access.\nMitigation: Ensure that all Elasticsearch clusters are deployed inside a VPC to restrict network access and enhance security.", "metadata": {"threat_id": "ES_007", "threat_name": "Elasticsearch Cluster Not Configured Inside a VPC", "source": "An external client or an AWS service", "target": "AWS Elasticsearch"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Elasticsearch\nThreat: Elasticsearch Domain Using Outdated TLS Policy\nDescription: Using an outdated TLS policy on an Elasticsearch domain increases the risk of insecure data transmission and cryptographic vulnerabilities.\nMitigation: Verify that Elasticsearch domains use up-to-date TLS policies to ensure secure communication.", "metadata": {"threat_id": "ES_001", "threat_name": "Elasticsearch Domain Using Outdated TLS Policy", "source": "An external client or an AWS service", "target": "AWS Elasticsearch"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Elasticsearch\nThreat: Unencrypted Elasticsearch Data\nDescription: Failing to encrypt data stored in Elasticsearch exposes sensitive information to unauthorized access.\nMitigation: Ensure all data stored in Elasticsearch is encrypted with a CMK to protect against data breaches.", "metadata": {"threat_id": "ES_001", "threat_name": "Unencrypted Elasticsearch Data", "source": "An external client or an AWS service", "target": "AWS Elasticsearch"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Elasticsearch\nThreat: Elasticsearch Using Default Security Group\nDescription: Using the default security group for Elasticsearch may allow unintended access, increasing exposure to unauthorized data retrieval.\nMitigation: Ensure that Elasticsearch is not using the default Security Group and instead uses a properly restricted security group.", "metadata": {"threat_id": "ES_002", "threat_name": "Elasticsearch Using Default Security Group", "source": "An external client or an AWS service", "target": "AWS Elasticsearch"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Elasticsearch\nThreat: Missing Audit Logging in Elasticsearch Domain\nDescription: Elasticsearch domains without audit logging enabled may lack visibility into access patterns and security events.\nMitigation: Ensure Elasticsearch Domain Audit Logging is enabled to track changes and detect unauthorized access.", "metadata": {"threat_id": "ELASTICSEARCH_014", "threat_name": "Missing Audit Logging in Elasticsearch Domain", "source": "An external client or an AWS service", "target": "AWS Elasticsearch"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Elasticsearch\nThreat: Insufficient Master Nodes in Elasticsearch\nDescription: Elasticsearch domains with fewer than three dedicated master nodes may experience instability and loss of cluster quorum.\nMitigation: Ensure Elasticsearch domains are configured with at least three dedicated master nodes for high availability.", "metadata": {"threat_id": "ELASTICSEARCH_016", "threat_name": "Insufficient Master Nodes in Elasticsearch", "source": "An external client or an AWS service", "target": "AWS Elasticsearch"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS EventBridge\nThreat: Unencrypted EventBridge Scheduler Schedule\nDescription: AWS EventBridge Scheduler Schedules without CMK encryption may be vulnerable to unauthorized access and data exposure.\nMitigation: Ensure AWS EventBridge Scheduler Schedules use CMK encryption to protect scheduled event data.", "metadata": {"threat_id": "EventBridge_005", "threat_name": "Unencrypted EventBridge Scheduler Schedule", "source": "An external client or an AWS service", "target": "AWS EventBridge"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS FSx\nThreat: FSx ONTAP File System Not Encrypted with KMS\nDescription: FSx ONTAP file systems that are not encrypted using AWS KMS CMK may store sensitive data without adequate protection, increasing the risk of unauthorized access.\nMitigation: Ensure that FSx ONTAP file systems are encrypted using AWS KMS CMK to enhance data security and compliance.", "metadata": {"threat_id": "FSX_001", "threat_name": "FSx ONTAP File System Not Encrypted with KMS", "source": "An external client or an AWS service", "target": "AWS FSx"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS FSx\nThreat: FSx Windows File System Not Encrypted with KMS\nDescription: FSx Windows file systems that are not encrypted using AWS KMS CMK may store sensitive data without protection, increasing the risk of unauthorized access.\nMitigation: Ensure that FSx Windows file systems are encrypted using AWS KMS CMK to enhance security and compliance.", "metadata": {"threat_id": "FSX_002", "threat_name": "FSx Windows File System Not Encrypted with KMS", "source": "An external client or an AWS service", "target": "AWS FSx"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS FSx\nThreat: FSx OpenZFS File System Not Encrypted with KMS\nDescription: FSx OpenZFS file systems that are not encrypted using AWS KMS CMK may expose sensitive data to unauthorized access.\nMitigation: Ensure that AWS FSx OpenZFS file systems are encrypted using AWS KMS CMK to maintain data confidentiality and security.", "metadata": {"threat_id": "FSX_004", "threat_name": "FSx OpenZFS File System Not Encrypted with KMS", "source": "An external client or an AWS service", "target": "AWS FSx"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS FSx\nThreat: FSx Resources Not Backed Up\nDescription: Unprotected FSx file systems risk permanent data loss in the event of hardware failure or accidental deletion.\nMitigation: Include FSx resources in AWS Backup plans to ensure file systems are periodically backed up and recoverable.", "metadata": {"threat_id": "STORAGE_010", "threat_name": "FSx Resources Not Backed Up", "source": "An external client or an AWS service", "target": "AWS FSx"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS FSx Lustre\nThreat: FSx Lustre File System Not Encrypted with KMS\nDescription: FSx Lustre file systems that are not encrypted using AWS KMS CMK may expose high-performance file storage to unauthorized access.\nMitigation: Ensure that AWS FSx Lustre file systems are encrypted using AWS KMS CMK to maintain data confidentiality and security.", "metadata": {"threat_id": "FSX_003", "threat_name": "FSx Lustre File System Not Encrypted with KMS", "source": "An external client or an AWS service", "target": "AWS FSx Lustre"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS General\nThreat: Hardcoded AWS Access Keys\nDescription: Hardcoded AWS access keys and secret keys in provider configurations expose sensitive credentials to unauthorized access, increasing the risk of account compromise.\nMitigation: Ensure AWS credentials are securely stored in environment variables or AWS Secrets Manager instead of hardcoding them in configuration files.", "metadata": {"threat_id": "AWS_001", "threat_name": "Hardcoded AWS Access Keys", "source": "An external client or an AWS service", "target": "AWS General"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Glacier\nThreat: Glacier Vault Access Policy is Public\nDescription: Glacier vaults with public access policies may expose archived data to unauthorized entities, leading to potential data breaches.\nMitigation: Ensure that Glacier Vault access policies restrict access to specific AWS services or principals and do not allow public access.", "metadata": {"threat_id": "GLACIER_001", "threat_name": "Glacier Vault Access Policy is Public", "source": "An external client or an AWS service", "target": "AWS Glacier"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Global Accelerator\nThreat: Global Accelerator Without Flow Logs\nDescription: Global Accelerator instances without flow logs enabled lack visibility into traffic patterns, increasing the difficulty of detecting potential security threats.\nMitigation: Ensure AWS Global Accelerator flow logs are enabled to monitor traffic and detect potential anomalies.", "metadata": {"threat_id": "GLOBALACCELERATOR_001", "threat_name": "Global Accelerator Without Flow Logs", "source": "An external client or an AWS service", "target": "AWS Global Accelerator"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Glue\nThreat: Glue Data Catalog Encryption Disabled\nDescription: Glue Data Catalogs without encryption enabled store metadata in an unprotected state, increasing the risk of data leaks and compliance violations.\nMitigation: Ensure AWS Glue Data Catalog encryption is enabled using AWS KMS to protect metadata and ensure compliance with security policies.", "metadata": {"threat_id": "GLUE_001", "threat_name": "Glue Data Catalog Encryption Disabled", "source": "An external client or an AWS service", "target": "AWS Glue"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Glue\nThreat: Glue Data Catalog Encryption Disabled\nDescription: Glue Data Catalogs without encryption enabled store metadata in an unprotected state, increasing the risk of data leaks and compliance violations.\nMitigation: Ensure AWS Glue Data Catalog encryption is enabled using AWS KMS to protect metadata and ensure compliance with security policies.", "metadata": {"threat_id": "GLUE_002", "threat_name": "Glue Data Catalog Encryption Disabled", "source": "An external client or an AWS service", "target": "AWS Glue"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Glue\nThreat: Glue Security Configuration Encryption Disabled\nDescription: Glue jobs and metadata stored without encryption increase the risk of unauthorized access to sensitive ETL processing information.\nMitigation: Ensure Glue Security Configuration encryption is enabled using AWS KMS to secure job execution data and metadata.", "metadata": {"threat_id": "GLUE_003", "threat_name": "Glue Security Configuration Encryption Disabled", "source": "An external client or an AWS service", "target": "AWS Glue"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Glue\nThreat: Glue Security Configuration Encryption Disabled\nDescription: Glue jobs and metadata stored without encryption increase the risk of unauthorized access to sensitive ETL processing information.\nMitigation: Ensure Glue Security Configuration encryption is enabled using AWS KMS to secure job execution data and metadata.", "metadata": {"threat_id": "GLUE_004", "threat_name": "Glue Security Configuration Encryption Disabled", "source": "An external client or an AWS service", "target": "AWS Glue"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Glue\nThreat: Glue Components Without Security Configuration\nDescription: Glue components without an associated security configuration may process sensitive data in an unprotected manner, increasing the risk of data exposure.\nMitigation: Ensure that all AWS Glue components, including Crawlers, DevEndpoints, and Jobs, have security configurations associated with them.", "metadata": {"threat_id": "GLUE_006", "threat_name": "Glue Components Without Security Configuration", "source": "An external client or an AWS service", "target": "AWS Glue"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS GuardDuty\nThreat: GuardDuty Detector Not Enabled\nDescription: If GuardDuty is not enabled, AWS accounts may lack real-time threat detection and monitoring capabilities.\nMitigation: Ensure that GuardDuty detectors are enabled to provide continuous monitoring and anomaly detection.", "metadata": {"threat_id": "GDT_001", "threat_name": "GuardDuty Detector Not Enabled", "source": "An external client or an AWS service", "target": "AWS GuardDuty"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS GuardDuty\nThreat: GuardDuty Not Enabled for Specific Organization or Region\nDescription: Without GuardDuty enabled in all regions or for the entire organization, potential threats may go undetected.\nMitigation: Ensure GuardDuty is enabled for all accounts in a specific organization and across all AWS regions.", "metadata": {"threat_id": "GuardDuty_051", "threat_name": "GuardDuty Not Enabled for Specific Organization or Region", "source": "An external client or an AWS service", "target": "AWS GuardDuty"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS GuardDuty\nThreat: GuardDuty Organization-Wide Protection Not Configured\nDescription: If GuardDuty is not configured at an organizational level, some accounts may remain unprotected.\nMitigation: Ensure GuardDuty is enabled and properly configured at the organization level.", "metadata": {"threat_id": "GuardDuty_052", "threat_name": "GuardDuty Organization-Wide Protection Not Configured", "source": "An external client or an AWS service", "target": "AWS GuardDuty"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS GuardDuty\nThreat: GuardDuty Not Enabled or Not Centralized\nDescription: If GuardDuty is disabled or not set up in a centralized manner, suspicious activities across multiple accounts can go undetected or siloed.\nMitigation: Enable GuardDuty in all accounts and regions, and aggregate findings in a centralized security account for complete coverage.", "metadata": {"threat_id": "SEC_015", "threat_name": "GuardDuty Not Enabled or Not Centralized", "source": "An external client or an AWS service", "target": "AWS GuardDuty"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS GuardDuty\nThreat: GuardDuty Findings Not Archived\nDescription: If findings remain unarchived for extended periods, it may indicate critical alerts are unresolved or ignored.\nMitigation: Review and address GuardDuty findings. Mark them archived or resolved once mitigated to maintain a clean, actionable alert set.", "metadata": {"threat_id": "SEC_016", "threat_name": "GuardDuty Findings Not Archived", "source": "An external client or an AWS service", "target": "AWS GuardDuty"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: Overly Permissive IAM Policies\nDescription: IAM policies granting full administrative privileges using wildcard ('*-*') permissions can lead to excessive privileges, increasing the risk of unauthorized access and privilege escalation.\nMitigation: Ensure that IAM policies follow the principle of least privilege by restricting permissions to only necessary actions and resources. Avoid using wildcard '*' permissions.", "metadata": {"threat_id": "IAM_001", "threat_name": "Overly Permissive IAM Policies", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: Overly Permissive IAM Policies in Serverless AWS\nDescription: IAM policies in serverless applications granting full administrative privileges using wildcard ('*-*') permissions can lead to excessive privileges, increasing the risk of unauthorized access and privilege escalation.\nMitigation: Apply least privilege access to serverless AWS policies, limiting permissions to only necessary functions and resources.", "metadata": {"threat_id": "IAM_002", "threat_name": "Overly Permissive IAM Policies in Serverless AWS", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: Weak IAM Password Policy - Expiration\nDescription: IAM password policies that do not enforce expiration within 90 days increase the risk of compromised credentials remaining active for prolonged periods.\nMitigation: Configure IAM password policies to require password expiration within 90 days or less.", "metadata": {"threat_id": "IAM_003", "threat_name": "Weak IAM Password Policy - Expiration", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: Weak IAM Password Policy - Minimum Length\nDescription: IAM password policies that allow passwords shorter than 14 characters increase the risk of brute force and dictionary attacks.\nMitigation: Set IAM password policies to enforce a minimum password length of at least 14 characters.", "metadata": {"threat_id": "IAM_004", "threat_name": "Weak IAM Password Policy - Minimum Length", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: Weak IAM Password Policy - Missing Lowercase Letter Requirement\nDescription: IAM password policies that do not require at least one lowercase letter may allow easily guessable passwords.\nMitigation: Ensure IAM password policies require at least one lowercase letter.", "metadata": {"threat_id": "IAM_005", "threat_name": "Weak IAM Password Policy - Missing Lowercase Letter Requirement", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: Weak IAM Password Policy - Missing Number Requirement\nDescription: IAM password policies that do not require at least one numeric character may allow easily guessable passwords.\nMitigation: Ensure IAM password policies require at least one numeric character.", "metadata": {"threat_id": "IAM_006", "threat_name": "Weak IAM Password Policy - Missing Number Requirement", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: Weak IAM Password Policy - Missing Symbol Requirement\nDescription: IAM password policies that do not require at least one special symbol may allow easily guessable passwords.\nMitigation: Ensure IAM password policies require at least one special symbol.", "metadata": {"threat_id": "IAM_007", "threat_name": "Weak IAM Password Policy - Missing Symbol Requirement", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: Weak IAM Password Policy - Missing Uppercase Letter Requirement\nDescription: IAM password policies that do not require at least one uppercase letter may allow easily guessable passwords.\nMitigation: Ensure IAM password policies require at least one uppercase letter.", "metadata": {"threat_id": "IAM_008", "threat_name": "Weak IAM Password Policy - Missing Uppercase Letter Requirement", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: IAM Password Policy Allows Password Reuse\nDescription: Allowing users to reuse previous passwords increases the risk of credential compromise if old passwords are leaked.\nMitigation: Configure IAM password policies to prevent password reuse.", "metadata": {"threat_id": "IAM_009", "threat_name": "IAM Password Policy Allows Password Reuse", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: IAM Policies Attached Directly to Users\nDescription: Attaching IAM policies directly to users instead of groups or roles increases the complexity of access management, making it difficult to enforce the principle of least privilege.\nMitigation: Ensure IAM policies are attached to groups or roles instead of individual users to simplify access management and reduce the risk of excessive privileges.", "metadata": {"threat_id": "IAM_010", "threat_name": "IAM Policies Attached Directly to Users", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: IAM Policies Attached Directly to Users\nDescription: Attaching IAM policies directly to users instead of groups or roles increases the complexity of access management, making it difficult to enforce the principle of least privilege.\nMitigation: Ensure IAM policies are attached to groups or roles instead of individual users to simplify access management and reduce the risk of excessive privileges.", "metadata": {"threat_id": "IAM_011", "threat_name": "IAM Policies Attached Directly to Users", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: IAM Policies Attached Directly to Users\nDescription: Attaching IAM policies directly to users instead of groups or roles increases the complexity of access management, making it difficult to enforce the principle of least privilege.\nMitigation: Ensure IAM policies are attached to groups or roles instead of individual users to simplify access management and reduce the risk of excessive privileges.", "metadata": {"threat_id": "IAM_012", "threat_name": "IAM Policies Attached Directly to Users", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: IAM Policies Attached Directly to Users\nDescription: Attaching IAM policies directly to users instead of groups or roles increases the complexity of access management, making it difficult to enforce the principle of least privilege.\nMitigation: Ensure IAM policies are attached to groups or roles instead of individual users to simplify access management and reduce the risk of excessive privileges.", "metadata": {"threat_id": "IAM_013", "threat_name": "IAM Policies Attached Directly to Users", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: Overly Permissive IAM Policy Actions\nDescription: IAM policies that use wildcard ('*') in the action statement grant excessive permissions, increasing the risk of privilege escalation and unauthorized access.\nMitigation: Ensure IAM policies specify only necessary permissions instead of using wildcard actions ('*') to enforce the principle of least privilege.", "metadata": {"threat_id": "IAM_014", "threat_name": "Overly Permissive IAM Policy Actions", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: Overly Permissive IAM Role Assumption\nDescription: IAM roles that allow assumption by any AWS service or principal increase the risk of unauthorized privilege escalation and misuse.\nMitigation: Ensure IAM roles specify only required trusted entities in the assume role policy to follow the principle of least privilege.", "metadata": {"threat_id": "IAM_016", "threat_name": "Overly Permissive IAM Role Assumption", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: Overly Permissive IAM Role Assumption\nDescription: IAM roles that allow assumption by any AWS service or principal increase the risk of unauthorized privilege escalation and misuse.\nMitigation: Ensure IAM roles specify only required trusted entities in the assume role policy to follow the principle of least privilege.", "metadata": {"threat_id": "IAM_017", "threat_name": "Overly Permissive IAM Role Assumption", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: Overly Permissive IAM Role Assumption\nDescription: IAM roles that allow assume role permissions across all services create a security risk by allowing unauthorized entities to assume elevated privileges.\nMitigation: Ensure IAM role assumption policies restrict access to specific trusted AWS services or principals following the principle of least privilege.", "metadata": {"threat_id": "IAM_018", "threat_name": "Overly Permissive IAM Role Assumption", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: Overly Permissive IAM Role Assumption\nDescription: IAM roles that allow assume role permissions across all services create a security risk by allowing unauthorized entities to assume elevated privileges.\nMitigation: Ensure IAM role assumption policies restrict access to specific trusted AWS services or principals following the principle of least privilege.", "metadata": {"threat_id": "IAM_019", "threat_name": "Overly Permissive IAM Role Assumption", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: Overly Permissive IAM Policies in Groups\nDescription: IAM policies assigned to groups that allow full administrative privileges ('*-*') create security risks by granting excessive permissions.\nMitigation: Ensure IAM policies follow the principle of least privilege and avoid assigning full administrative access to IAM groups.", "metadata": {"threat_id": "IAM_020", "threat_name": "Overly Permissive IAM Policies in Groups", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: Overly Permissive IAM Policies\nDescription: IAM policies that allow full administrative privileges ('*-*') create security risks by granting excessive permissions to users or roles.\nMitigation: Ensure IAM policies follow the principle of least privilege and avoid assigning full administrative access.", "metadata": {"threat_id": "IAM_021", "threat_name": "Overly Permissive IAM Policies", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: Overly Permissive IAM Policies in Roles\nDescription: IAM roles with policies that allow full administrative privileges ('*-*') expose the environment to privilege escalation and unauthorized actions.\nMitigation: Ensure IAM role policies restrict permissions based on necessity and avoid using wildcard actions ('*-*').", "metadata": {"threat_id": "IAM_022", "threat_name": "Overly Permissive IAM Policies in Roles", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: Overly Permissive IAM Policies Assigned to Users\nDescription: IAM users with policies that allow full administrative privileges ('*-*') pose a significant security risk by granting excessive permissions.\nMitigation: Ensure IAM policies assigned to users follow the principle of least privilege and avoid granting full administrative access.", "metadata": {"threat_id": "IAM_023", "threat_name": "Overly Permissive IAM Policies Assigned to Users", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: Overly Permissive IAM Policies in Groups\nDescription: IAM group policies that allow full administrative privileges ('*-*') create security risks by granting excessive permissions to all group members.\nMitigation: Ensure IAM policies applied to groups follow the principle of least privilege and restrict access based on necessity.", "metadata": {"threat_id": "IAM_024", "threat_name": "Overly Permissive IAM Policies in Groups", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: Overly Permissive IAM Policies\nDescription: IAM policies allowing full administrative privileges ('*-*') expose the AWS environment to privilege escalation and unauthorized actions.\nMitigation: Ensure IAM policies are configured to grant only necessary permissions and avoid using wildcard actions ('*-*').", "metadata": {"threat_id": "IAM_025", "threat_name": "Overly Permissive IAM Policies", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: Overly Permissive IAM Role Policies\nDescription: IAM role policies that allow full administrative privileges ('*-*') expose the environment to privilege escalation and security threats.\nMitigation: Ensure IAM role policies follow the principle of least privilege by restricting permissions to only necessary actions.", "metadata": {"threat_id": "IAM_026", "threat_name": "Overly Permissive IAM Role Policies", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: Overly Permissive IAM User Policies\nDescription: IAM user policies granting full administrative privileges ('*-*') increase the risk of unauthorized access and privilege escalation.\nMitigation: Ensure IAM user policies enforce least privilege principles and restrict permissions based on user roles and responsibilities.", "metadata": {"threat_id": "IAM_027", "threat_name": "Overly Permissive IAM User Policies", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: Overly Permissive IAM SSO Permission Set Policy\nDescription: IAM permission set policies that allow full administrative privileges ('*-*') create security risks by granting excessive permissions to users accessing AWS accounts via SSO.\nMitigation: Ensure IAM SSO permission set policies enforce least privilege principles and do not use wildcard actions ('*-*').", "metadata": {"threat_id": "IAM_028", "threat_name": "Overly Permissive IAM SSO Permission Set Policy", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: Overly Permissive IAM Group Policies\nDescription: IAM group policies that allow wildcard ('*') actions grant excessive privileges, increasing the risk of unauthorized access and privilege escalation.\nMitigation: Ensure IAM group policies specify only necessary permissions instead of using wildcard actions ('*') to enforce least privilege.", "metadata": {"threat_id": "IAM_029", "threat_name": "Overly Permissive IAM Group Policies", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: Overly Permissive IAM Policies\nDescription: IAM policies that allow wildcard ('*') actions grant excessive privileges, increasing the risk of privilege escalation and unauthorized access.\nMitigation: Ensure IAM policies specify only required actions and resources to enforce the principle of least privilege.", "metadata": {"threat_id": "IAM_030", "threat_name": "Overly Permissive IAM Policies", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: Overly Permissive IAM Role Policies\nDescription: IAM roles with policies that allow wildcard ('*') actions expose the environment to excessive privilege risks, leading to potential security breaches.\nMitigation: Ensure IAM role policies specify only necessary actions and restrict access to trusted entities.", "metadata": {"threat_id": "IAM_031", "threat_name": "Overly Permissive IAM Role Policies", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: Overly Permissive IAM User Policies\nDescription: IAM users with policies that allow wildcard ('*') actions pose a security risk by granting unnecessary permissions that can lead to privilege escalation.\nMitigation: Ensure IAM user policies enforce least privilege principles and restrict permissions based on user roles and responsibilities.", "metadata": {"threat_id": "IAM_032", "threat_name": "Overly Permissive IAM User Policies", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: Overly Permissive IAM Group Policy\nDescription: IAM group policies that allow wildcard ('*') actions grant excessive privileges, increasing the risk of unauthorized access and privilege escalation.\nMitigation: Ensure IAM group policies specify only necessary permissions instead of using wildcard actions ('*') to enforce least privilege.", "metadata": {"threat_id": "IAM_033", "threat_name": "Overly Permissive IAM Group Policy", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: Overly Permissive IAM Policy\nDescription: IAM policies that allow wildcard ('*') actions grant excessive privileges, increasing the risk of privilege escalation and unauthorized access.\nMitigation: Ensure IAM policies specify only required actions and resources to enforce the principle of least privilege.", "metadata": {"threat_id": "IAM_034", "threat_name": "Overly Permissive IAM Policy", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: Overly Permissive IAM Role Policy\nDescription: IAM role policies that allow wildcard ('*') actions expose the environment to excessive privilege risks, leading to potential security breaches.\nMitigation: Ensure IAM role policies specify only necessary actions and restrict access to trusted entities.", "metadata": {"threat_id": "IAM_035", "threat_name": "Overly Permissive IAM Role Policy", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: Overly Permissive IAM User Policy\nDescription: IAM users with policies that allow wildcard ('*') actions pose a security risk by granting unnecessary permissions that can lead to privilege escalation.\nMitigation: Ensure IAM user policies enforce least privilege principles and restrict permissions based on user roles and responsibilities.", "metadata": {"threat_id": "IAM_036", "threat_name": "Overly Permissive IAM User Policy", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: Overly Permissive IAM SSO Permission Set Policy\nDescription: IAM permission set policies that allow full administrative privileges ('*-*') create security risks by granting excessive permissions to users accessing AWS accounts via SSO.\nMitigation: Ensure IAM SSO permission set policies enforce least privilege principles and do not use wildcard actions ('*-*').", "metadata": {"threat_id": "IAM_037", "threat_name": "Overly Permissive IAM SSO Permission Set Policy", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: IAM Policies Allow Credentials Exposure\nDescription: IAM policies that allow credential exposure (such as listing or retrieving secret keys) increase the risk of accidental credential leaks and unauthorized access.\nMitigation: Review and restrict IAM policies to ensure they do not expose sensitive credentials. Use AWS Secrets Manager for managing credentials securely.", "metadata": {"threat_id": "IAM_001", "threat_name": "IAM Policies Allow Credentials Exposure", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: IAM Managed Policy Allows Credential Exposure\nDescription: IAM managed policies that allow listing or retrieving credentials (such as access keys or passwords) increase the risk of unauthorized access and accidental credential leaks.\nMitigation: Review and restrict IAM managed policies to ensure they do not allow credential exposure. Use AWS Secrets Manager to securely store and manage credentials.", "metadata": {"threat_id": "IAM_002", "threat_name": "IAM Managed Policy Allows Credential Exposure", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: IAM Policy Allows Credential Exposure\nDescription: IAM policies that permit actions exposing sensitive credentials (such as retrieving secret keys) increase the risk of credential leaks and unauthorized access.\nMitigation: Ensure IAM policies do not allow actions that expose credentials. Use AWS IAM best practices to enforce least privilege principles.", "metadata": {"threat_id": "IAM_003", "threat_name": "IAM Policy Allows Credential Exposure", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: IAM Role Policy Allows Credential Exposure\nDescription: IAM roles with overly permissive policies that allow listing or retrieving credentials create security risks by exposing access keys or authentication secrets.\nMitigation: Restrict IAM role policies to prevent credential exposure and enforce secure role assumption mechanisms.", "metadata": {"threat_id": "IAM_004", "threat_name": "IAM Role Policy Allows Credential Exposure", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: IAM User Policy Allows Credential Exposure\nDescription: IAM users with policies that allow credential exposure increase the risk of security breaches by potentially leaking access keys or passwords.\nMitigation: Review and limit IAM user permissions to prevent direct access to credentials. Implement multi-factor authentication (MFA) and enforce IAM best practices.", "metadata": {"threat_id": "IAM_005", "threat_name": "IAM User Policy Allows Credential Exposure", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: IAM Policy Document Allows Credential Exposure\nDescription: IAM policy documents that allow retrieving sensitive credentials create a security risk by enabling unauthorized access to secrets and authentication keys.\nMitigation: Ensure IAM policy documents do not include permissions that allow credential exposure. Use AWS IAM best practices to enforce least privilege.", "metadata": {"threat_id": "IAM_006", "threat_name": "IAM Policy Document Allows Credential Exposure", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: IAM Group Policy Allows Data Exfiltration\nDescription: IAM group policies that allow unrestricted data transfer actions (such as S3:GetObject, S3:ListBucket, DynamoDB:Scan, or SecretsManager:GetSecretValue) create a risk of data exfiltration.\nMitigation: Review and restrict IAM group policies to limit data access to only authorized users and services. Implement least privilege principles and monitor access logs.", "metadata": {"threat_id": "IAM_007", "threat_name": "IAM Group Policy Allows Data Exfiltration", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: IAM Managed Policy Allows Data Exfiltration\nDescription: IAM managed policies with broad permissions that allow external data transfer (such as unrestricted access to S3, RDS, or DynamoDB) increase the risk of data leaks.\nMitigation: Ensure IAM managed policies restrict data access based on business needs. Implement data classification and access monitoring mechanisms.", "metadata": {"threat_id": "IAM_008", "threat_name": "IAM Managed Policy Allows Data Exfiltration", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: IAM Policy Allows Data Exfiltration\nDescription: IAM policies granting excessive data access permissions without proper restrictions can lead to unauthorized data exfiltration, potentially violating compliance requirements.\nMitigation: Restrict IAM policies to allow only necessary data access permissions. Use AWS CloudTrail and AWS Config to monitor data access activities.", "metadata": {"threat_id": "IAM_009", "threat_name": "IAM Policy Allows Data Exfiltration", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: IAM Role Policy Allows Data Exfiltration\nDescription: IAM roles assigned broad data access permissions may enable unauthorized data exfiltration by applications or services with excessive privileges.\nMitigation: Limit IAM role policies to restrict access to sensitive data. Use AWS Identity Center to enforce role-based access control and monitor API calls.", "metadata": {"threat_id": "IAM_010", "threat_name": "IAM Role Policy Allows Data Exfiltration", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: IAM User Policy Allows Data Exfiltration\nDescription: IAM users with excessive permissions to read, download, or copy large amounts of sensitive data increase the risk of unauthorized data exfiltration.\nMitigation: Ensure IAM user policies enforce least privilege and restrict access to critical data. Implement AWS IAM Access Analyzer and data loss prevention (DLP) measures.", "metadata": {"threat_id": "IAM_011", "threat_name": "IAM User Policy Allows Data Exfiltration", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: IAM Policy Document Allows Data Exfiltration\nDescription: IAM policy documents that allow unrestricted data access (such as full S3, RDS, or DynamoDB permissions) increase the risk of unauthorized data exfiltration.\nMitigation: Ensure IAM policy documents enforce least privilege by restricting data access to only necessary actions and resources.", "metadata": {"threat_id": "IAM_012", "threat_name": "IAM Policy Document Allows Data Exfiltration", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: IAM Group Allows Unconstrained Permissions Management\nDescription: IAM groups that allow unrestricted permissions management may lead to privilege escalation by unauthorized users.\nMitigation: Ensure IAM group policies restrict permission changes to administrators and enforce approval workflows for policy modifications.", "metadata": {"threat_id": "IAM_013", "threat_name": "IAM Group Allows Unconstrained Permissions Management", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: IAM Managed Policy Allows Unconstrained Permissions Management\nDescription: IAM managed policies granting broad permissions management capabilities increase the risk of unauthorized access elevation.\nMitigation: Restrict IAM managed policies to limit permission changes only to authorized administrators and enforce least privilege.", "metadata": {"threat_id": "IAM_014", "threat_name": "IAM Managed Policy Allows Unconstrained Permissions Management", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: IAM Policy Allows Unconstrained Permissions Management\nDescription: IAM policies allowing unrestricted permission modifications can enable unauthorized privilege escalation, leading to security risks.\nMitigation: Ensure IAM policies enforce scoped permissions for privilege management and prevent unauthorized changes.", "metadata": {"threat_id": "IAM_015", "threat_name": "IAM Policy Allows Unconstrained Permissions Management", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: IAM Role Allows Unconstrained Permissions Management\nDescription: IAM roles with broad permissions management rights may allow unauthorized privilege escalation, increasing security risks.\nMitigation: Limit IAM role policies to restrict permission modifications and enforce approval-based access controls.", "metadata": {"threat_id": "IAM_016", "threat_name": "IAM Role Allows Unconstrained Permissions Management", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: IAM User Allows Unconstrained Permissions Management\nDescription: IAM users with policies allowing unrestricted permissions management may escalate privileges, granting themselves or others excessive access.\nMitigation: Ensure IAM user policies enforce least privilege principles, restricting permissions management to administrators and using approval workflows.", "metadata": {"threat_id": "IAM_017", "threat_name": "IAM User Allows Unconstrained Permissions Management", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: IAM Policy Document Allows Unconstrained Permissions or Resource Exposure\nDescription: IAM policy documents with unconstrained permissions or resource exposure (e.g., allowing * actions on all resources) increase the risk of unauthorized privilege escalation and data breaches.\nMitigation: Ensure IAM policy documents enforce granular permissions with scoped resource access, avoiding wildcard (*) permissions where unnecessary.", "metadata": {"threat_id": "IAM_018", "threat_name": "IAM Policy Document Allows Unconstrained Permissions or Resource Exposure", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: IAM Group Allows Privilege Escalation\nDescription: IAM groups allowing privilege escalation enable members to assign themselves higher permissions, leading to unauthorized access risks.\nMitigation: Restrict IAM group policies to prevent privilege escalation actions such as iam:AttachUserPolicy, iam:CreatePolicy, and iam:UpdateAssumeRolePolicy.", "metadata": {"threat_id": "IAM_019", "threat_name": "IAM Group Allows Privilege Escalation", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: IAM Managed Policy Allows Privilege Escalation\nDescription: IAM managed policies that allow unrestricted privilege escalation actions pose security risks by enabling unauthorized access and role assumption.\nMitigation: Ensure IAM managed policies follow the principle of least privilege, restricting actions such as iam:PassRole and iam:UpdateAssumeRolePolicy.", "metadata": {"threat_id": "IAM_020", "threat_name": "IAM Managed Policy Allows Privilege Escalation", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: IAM Policy Allows Privilege Escalation\nDescription: IAM policies permitting privilege escalation actions (such as modifying role policies or creating new privileged roles) increase security risks.\nMitigation: Ensure IAM policies enforce strict role and policy management controls, restricting privilege escalation actions to designated administrators.", "metadata": {"threat_id": "IAM_021", "threat_name": "IAM Policy Allows Privilege Escalation", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: IAM User Access Instead of SSO\nDescription: Using AWS IAM users instead of SSO for access control increases the risk of unmanaged user credentials and privilege escalation.\nMitigation: Ensure access is controlled through SSO and not AWS IAM-defined users to enforce centralized access management.", "metadata": {"threat_id": "IAM_003", "threat_name": "IAM User Access Instead of SSO", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: Overuse of AWS AdministratorAccess Policy\nDescription: If AWS roles, users, and groups use the AdministratorAccess policy, they may have unrestricted permissions, increasing the attack surface for privilege escalation.\nMitigation: Disallow IAM roles, users, and groups from using the AWS AdministratorAccess policy by implementing least privilege principles.", "metadata": {"threat_id": "IAM_004", "threat_name": "Overuse of AWS AdministratorAccess Policy", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: IAM Policy Grants Unrestricted AdministratorAccess\nDescription: If an IAM policy grants the AWS AdministratorAccess permission, it could lead to unintended privilege escalation and potential security breaches.\nMitigation: Ensure IAM policies do not use the AWS AdministratorAccess policy and instead follow the principle of least privilege.", "metadata": {"threat_id": "IAM_005", "threat_name": "IAM Policy Grants Unrestricted AdministratorAccess", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: IAM Role Policy Attachment Grants AdministratorAccess\nDescription: If IAM role policy attachments allow AdministratorAccess, users assuming these roles may obtain excessive privileges.\nMitigation: Disallow IAM role policy attachments that include the AWS AdministratorAccess policy.", "metadata": {"threat_id": "IAM_006", "threat_name": "IAM Role Policy Attachment Grants AdministratorAccess", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: IAM User Policy Attachment Grants AdministratorAccess\nDescription: If IAM users are directly attached to the AdministratorAccess policy, it may lead to unintentional privilege escalation and security risks.\nMitigation: Ensure IAM users do not have the AWS AdministratorAccess policy attached and follow least privilege principles.", "metadata": {"threat_id": "IAM_007", "threat_name": "IAM User Policy Attachment Grants AdministratorAccess", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: IAM Group Policy Attachment Grants AdministratorAccess\nDescription: If an IAM group is attached to the AWS AdministratorAccess policy, all users in the group may gain unrestricted access to AWS services.\nMitigation: Disallow IAM group policy attachments using the AWS AdministratorAccess policy and enforce role-based access control.", "metadata": {"threat_id": "IAM_008", "threat_name": "IAM Group Policy Attachment Grants AdministratorAccess", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: AWS SSO Managed Policy Grants AdministratorAccess\nDescription: If AWS SSO managed policies allow AdministratorAccess, it may grant excessive permissions to users beyond their required access levels.\nMitigation: Ensure AWS SSO managed policies do not use AdministratorAccess and enforce role-based least privilege access.", "metadata": {"threat_id": "IAM_009", "threat_name": "AWS SSO Managed Policy Grants AdministratorAccess", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: IAM Policy Allows ALL or Any AWS Principal Access\nDescription: IAM policies that allow 'ALL' or 'any' AWS principal to access a resource can lead to privilege escalation or unintended access.\nMitigation: Ensure IAM policies restrict access only to specific AWS principals that require access to the resource.", "metadata": {"threat_id": "IAM_008", "threat_name": "IAM Policy Allows ALL or Any AWS Principal Access", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: IAM Policies Allow Privilege Escalation\nDescription: IAM policies that allow privilege escalation can enable unauthorized users to gain higher access privileges, leading to security risks.\nMitigation: Ensure IAM policies do not grant excessive permissions that could allow privilege escalation. Use least privilege principles.", "metadata": {"threat_id": "IAM_003", "threat_name": "IAM Policies Allow Privilege Escalation", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: IAM Policies Allow Credentials Exposure\nDescription: IAM policies that allow credentials exposure can lead to unauthorized access to AWS resources.\nMitigation: Ensure IAM policies restrict access to sensitive credentials and follow best practices for secure credential management.", "metadata": {"threat_id": "IAM_004", "threat_name": "IAM Policies Allow Credentials Exposure", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: IAM Policy Allows Credentials Exposure\nDescription: IAM policies that expose credentials may allow unauthorized access to AWS resources, leading to security breaches.\nMitigation: Ensure IAM policies restrict access to credentials and enforce secure authentication mechanisms.", "metadata": {"threat_id": "IAM_001", "threat_name": "IAM Policy Allows Credentials Exposure", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: IAM Policy Allows Credentials Exposure\nDescription: SSO inline permission sets exposing credentials can result in unauthorized access and privilege escalation risks.\nMitigation: Ensure IAM SSO permission set policies enforce proper access controls and do not expose sensitive credentials.", "metadata": {"threat_id": "IAM_002", "threat_name": "IAM Policy Allows Credentials Exposure", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: IAM Policy Allows Data Exfiltration\nDescription: IAM group policies that allow excessive permissions can enable unauthorized data exfiltration, leading to compliance violations and data breaches.\nMitigation: Review and restrict IAM group policies to limit access to sensitive data and enforce least privilege principles.", "metadata": {"threat_id": "IAM_003", "threat_name": "IAM Policy Allows Data Exfiltration", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: IAM Policy Allows Data Exfiltration\nDescription: IAM role policies granting excessive permissions may allow unauthorized data exfiltration.\nMitigation: Ensure IAM roles follow least privilege principles and restrict data access appropriately.", "metadata": {"threat_id": "IAM_004", "threat_name": "IAM Policy Allows Data Exfiltration", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: IAM Policy Allows Data Exfiltration\nDescription: IAM user policies permitting broad data access can facilitate unauthorized data exfiltration.\nMitigation: Enforce strong access controls and regularly audit IAM user policies to minimize data exfiltration risks.", "metadata": {"threat_id": "IAM_005", "threat_name": "IAM Policy Allows Data Exfiltration", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: IAM Policy Allows Data Exfiltration\nDescription: IAM SSO permission sets granting excessive permissions could enable data exfiltration or unauthorized data access.\nMitigation: Review IAM SSO permission sets to enforce least privilege and prevent unauthorized data access.", "metadata": {"threat_id": "IAM_006", "threat_name": "IAM Policy Allows Data Exfiltration", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: IAM Policy Allows Unrestricted Permissions Management\nDescription: IAM group policies allowing unrestricted permissions management can lead to privilege escalation and security misconfigurations.\nMitigation: Restrict IAM group policies to limit permissions management actions and apply least privilege principles.", "metadata": {"threat_id": "IAM_007", "threat_name": "IAM Policy Allows Unrestricted Permissions Management", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: IAM Policy Allows Unrestricted Permissions Management\nDescription: IAM role policies permitting unrestricted permissions management can allow users to escalate privileges or modify security settings.\nMitigation: Ensure IAM role policies apply permission boundaries and restrict permissions management actions.", "metadata": {"threat_id": "IAM_008", "threat_name": "IAM Policy Allows Unrestricted Permissions Management", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: IAM Policy Allows Unrestricted Permissions Management\nDescription: IAM policies that allow unrestricted permissions management can lead to privilege escalation and security misconfigurations.\nMitigation: Restrict IAM policies to enforce granular permissions and apply least privilege principles.", "metadata": {"threat_id": "IAM_009", "threat_name": "IAM Policy Allows Unrestricted Permissions Management", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: IAM Policy Allows Unrestricted Permissions Management\nDescription: SSO permission sets with unrestricted permissions management can allow unauthorized changes to security policies.\nMitigation: Ensure IAM SSO permission set policies enforce proper access controls and permission boundaries.", "metadata": {"threat_id": "IAM_010", "threat_name": "IAM Policy Allows Unrestricted Permissions Management", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: IAM Policy Allows Unrestricted Write Access\nDescription: IAM group policies that permit unrestricted write access can lead to unauthorized modifications and security risks.\nMitigation: Limit IAM group policy permissions and enforce least privilege principles.", "metadata": {"threat_id": "IAM_011", "threat_name": "IAM Policy Allows Unrestricted Write Access", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: IAM Policy Allows Unrestricted Write Access\nDescription: IAM role policies with broad write access can allow unauthorized users to modify critical configurations.\nMitigation: Enforce strict access controls and define fine-grained IAM permissions.", "metadata": {"threat_id": "IAM_012", "threat_name": "IAM Policy Allows Unrestricted Write Access", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: IAM Policy Allows Unrestricted Write Access\nDescription: IAM user policies that allow unrestricted write access may lead to unauthorized changes to AWS resources.\nMitigation: Apply fine-grained IAM permissions and enforce policy constraints.", "metadata": {"threat_id": "IAM_013", "threat_name": "IAM Policy Allows Unrestricted Write Access", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: IAM Policy Allows Unrestricted Write Access\nDescription: IAM SSO permission sets allowing unrestricted write access could lead to unauthorized system modifications.\nMitigation: Review and restrict IAM SSO permission sets to enforce least privilege.", "metadata": {"threat_id": "IAM_014", "threat_name": "IAM Policy Allows Unrestricted Write Access", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: Root User with Access Keys\nDescription: IAM root users with active access keys pose a significant security risk and may lead to unauthorized access.\nMitigation: Ensure IAM root user does not have access keys and enforce best practices for root user management.", "metadata": {"threat_id": "IAM_008", "threat_name": "Root User with Access Keys", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: IAM Policies Allowing Wildcard Resource Access\nDescription: IAM policies that allow '*' as a statement's resource for restrictable actions can lead to privilege escalation and unauthorized access.\nMitigation: Ensure no IAM policies allow '*' as a statement's resource for restrictable actions. Define specific resource ARNs where necessary.", "metadata": {"threat_id": "IAM_015", "threat_name": "IAM Policies Allowing Wildcard Resource Access", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: IAM Policies Allowing Wildcard Resource Access\nDescription: IAM policies that allow '*' as a statement's resource for restrictable actions can lead to privilege escalation and unauthorized access.\nMitigation: Ensure no IAM policies allow '*' as a statement's resource for restrictable actions. Define specific resource ARNs where necessary.", "metadata": {"threat_id": "IAM_016", "threat_name": "IAM Policies Allowing Wildcard Resource Access", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: Unsafe Claims in GitHub Actions OIDC Authorization Policies\nDescription: GitHub Actions OIDC policies that do not restrict claims and claim order properly may allow unauthorized access.\nMitigation: Ensure AWS GitHub Actions OIDC authorization policies only allow safe claims and enforce claim order validation.", "metadata": {"threat_id": "OIDC_018", "threat_name": "Unsafe Claims in GitHub Actions OIDC Authorization Policies", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: IAM Groups Without Members\nDescription: IAM groups without any members may lead to security misconfigurations and excessive permissions granted unnecessarily.\nMitigation: Ensure that all IAM groups contain at least one IAM user or role to maintain proper access control.", "metadata": {"threat_id": "IAM_065", "threat_name": "IAM Groups Without Members", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: IAM Groups Without Assigned Users\nDescription: IAM groups without assigned users may result in permissions being granted to no one, leading to operational confusion.\nMitigation: Ensure that every IAM group includes at least one IAM user to avoid security misconfigurations.", "metadata": {"threat_id": "IAM_066", "threat_name": "IAM Groups Without Assigned Users", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: IAM Users Without Group Membership\nDescription: IAM users who are not part of at least one IAM group may lead to inconsistent permission management and security risks.\nMitigation: Ensure that all IAM users are members of at least one IAM group to enforce role-based access controls.", "metadata": {"threat_id": "IAM_074", "threat_name": "IAM Users Without Group Membership", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: IAM User With Console Access\nDescription: IAM users with console access increase the attack surface and may be a potential security risk if not properly managed.\nMitigation: Ensure IAM users do not have unnecessary access to the AWS console, and enforce least privilege principles.", "metadata": {"threat_id": "IAM_075", "threat_name": "IAM User With Console Access", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: Lack of Access Analyzer Configuration\nDescription: Without AWS Access Analyzer, IAM policies and roles may unintentionally grant excessive permissions or expose resources publicly.\nMitigation: Ensure AWS Access Analyzer is enabled to continuously monitor access configurations and prevent privilege escalation.", "metadata": {"threat_id": "IAM_089", "threat_name": "Lack of Access Analyzer Configuration", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: IAM Policy Grants Full Privileges\nDescription: IAM policies granting full administrative privileges (`*` actions on `*` resources) can lead to privilege escalation and unauthorized access.\nMitigation: Review and restrict IAM policies to follow the principle of least privilege, ensuring only necessary permissions are granted.", "metadata": {"threat_id": "IAM_101", "threat_name": "IAM Policy Grants Full Privileges", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: AWS Managed IAMFullAccess Policy Used\nDescription: Using the AWS Managed IAMFullAccess policy grants excessive permissions, increasing the risk of privilege escalation and data breaches.\nMitigation: Ensure AWS IAM roles and groups do not use the IAMFullAccess managed policy. Apply the principle of least privilege.", "metadata": {"threat_id": "IAM_013", "threat_name": "AWS Managed IAMFullAccess Policy Used", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: Overuse of AWS Managed IAMFullAccess Policy\nDescription: Using the AWS Managed IAMFullAccess policy grants excessive privileges, increasing the risk of privilege escalation and security breaches.\nMitigation: Ensure AWS IAM roles, users, and groups do not use IAMFullAccess managed policy. Apply the principle of least privilege.", "metadata": {"threat_id": "IAM_014", "threat_name": "Overuse of AWS Managed IAMFullAccess Policy", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: Stale IAM Access Keys\nDescription: Access keys that are not rotated regularly can be stolen or brute-forced, allowing unauthorized access for extended periods.\nMitigation: Rotate IAM access keys within the recommended timeframe (e.g., 90 days) to reduce the risk of credential compromise.", "metadata": {"threat_id": "SEC_001", "threat_name": "Stale IAM Access Keys", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: Customer IAM Policy Allowing Blocked KMS Actions\nDescription: A policy that allows kms:Decrypt or kms:ReEncryptFrom can enable unauthorized decryption of sensitive data if misused.\nMitigation: Restrict or remove blocked KMS actions from IAM policies to prevent unauthorized data decryption or re-encryption.", "metadata": {"threat_id": "SEC_017", "threat_name": "Customer IAM Policy Allowing Blocked KMS Actions", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: IAM Group Has No Users\nDescription: Groups without any users may be a configuration error, leading to confusion or leftover privileges if a user is re-added incorrectly.\nMitigation: Either remove empty IAM groups or assign appropriate users. Regularly audit group membership for consistency.", "metadata": {"threat_id": "SEC_018", "threat_name": "IAM Group Has No Users", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: Inline IAM Policy Allowing Blocked KMS Actions\nDescription: Inline policies that enable kms:Decrypt or kms:ReEncryptFrom can expose sensitive data to unauthorized use.\nMitigation: Remove or restrict KMS actions in inline policies, ensuring only authorized roles can decrypt or re-encrypt data.", "metadata": {"threat_id": "SEC_019", "threat_name": "Inline IAM Policy Allowing Blocked KMS Actions", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: Inline Policies in IAM Entities\nDescription: Inline policies complicate policy management and auditing, increasing the risk of accidental over-privileging or policy drift.\nMitigation: Detach inline policies and use centrally managed policies (customer-managed or AWS-managed) for consistent governance.", "metadata": {"threat_id": "SEC_020", "threat_name": "Inline Policies in IAM Entities", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: Weak or Incomplete IAM Password Policy\nDescription: A password policy lacking complexity, rotation, or length requirements makes user accounts easier to compromise.\nMitigation: Enforce strong password policies (minimum length \u2265 14, require upper/lowercase, symbols, numbers, and rotation) for IAM users.", "metadata": {"threat_id": "SEC_021", "threat_name": "Weak or Incomplete IAM Password Policy", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: IAM Policy with Admin Access Statement\nDescription: Policies that grant admin (e.g., '*') privileges can be exploited if attached to compromised or improperly assigned principals.\nMitigation: Remove or limit admin privileges in IAM policies, adhering to least privilege by specifying only necessary actions and resources.", "metadata": {"threat_id": "SEC_022", "threat_name": "IAM Policy with Admin Access Statement", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: IAM Policy with Full Access\nDescription: Full access policies provide near-unrestricted actions on AWS resources, elevating the risk of unintended or malicious changes.\nMitigation: Replace full access statements with more specific, least-privilege statements that grant only the actions genuinely required.", "metadata": {"threat_id": "SEC_023", "threat_name": "IAM Policy with Full Access", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: Root Access Key in Use\nDescription: The root account\u2019s access key, if compromised, grants unlimited control over the AWS account with no opportunity for privilege separation.\nMitigation: Remove or deactivate root access keys and rely on individual IAM users/roles with least-privilege access.", "metadata": {"threat_id": "SEC_024", "threat_name": "Root Access Key in Use", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: User Not in Any IAM Group\nDescription: An IAM user without group membership may have privileges that are difficult to track or manage, risking policy drift.\nMitigation: Assign IAM users to groups with appropriate policies, ensuring consistent identity management and simpler reviews.", "metadata": {"threat_id": "SEC_025", "threat_name": "User Not in Any IAM Group", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: IAM User Lacking MFA\nDescription: Without MFA, a compromised password grants immediate account access, elevating the risk of unauthorized activities.\nMitigation: Enforce MFA for all IAM users with console access, using virtual or hardware MFA devices for enhanced security.", "metadata": {"threat_id": "SEC_026", "threat_name": "IAM User Lacking MFA", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: IAM User Directly Attached to Policies\nDescription: Users with policies attached directly (instead of group or role) can lead to confusion and oversights in managing privileges.\nMitigation: Detach direct user policies in favor of group- or role-based policy management for simpler, centralized governance.", "metadata": {"threat_id": "SEC_027", "threat_name": "IAM User Directly Attached to Policies", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: Unused IAM Credentials\nDescription: Stale credentials may remain active and unmonitored, posing a security risk if discovered by attackers.\nMitigation: Disable or remove credentials that have not been used in a defined period (e.g., 90 days) to minimize exposure.", "metadata": {"threat_id": "SEC_028", "threat_name": "Unused IAM Credentials", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: No Hardware MFA for Root Account\nDescription: Root user is the highest-privilege account; lacking a hardware MFA increases the likelihood of successful credential-based attacks.\nMitigation: Enable a hardware MFA device for the root account to provide the strongest possible protection against unauthorized access.", "metadata": {"threat_id": "SEC_031", "threat_name": "No Hardware MFA for Root Account", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS IAM\nThreat: Root Account Without MFA\nDescription: If root login has no MFA, a stolen password alone can grant full account control, an extremely high-impact breach scenario.\nMitigation: Require MFA on the root account; avoid using root for daily tasks and rely on IAM roles for administrative needs.", "metadata": {"threat_id": "SEC_032", "threat_name": "Root Account Without MFA", "source": "An external client or an AWS service", "target": "AWS IAM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Image Builder\nThreat: Image Builder Component Not Encrypted with KMS\nDescription: Image Builder components that are not encrypted using AWS KMS CMK may be vulnerable to unauthorized access and modification.\nMitigation: Ensure that all Image Builder components are encrypted using AWS KMS CMK to maintain security and prevent unauthorized modifications.", "metadata": {"threat_id": "IMAGEBUILDER_001", "threat_name": "Image Builder Component Not Encrypted with KMS", "source": "An external client or an AWS service", "target": "AWS Image Builder"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Image Builder\nThreat: Image Builder Distribution Configuration Does Not Encrypt AMIs\nDescription: Image Builder Distribution Configurations that do not encrypt AMIs using AWS KMS CMK may store sensitive data in an unprotected state, increasing security risks.\nMitigation: Ensure that Image Builder Distribution Configuration encrypts AMIs using AWS KMS CMK.", "metadata": {"threat_id": "IMAGEBUILDER_002", "threat_name": "Image Builder Distribution Configuration Does Not Encrypt AMIs", "source": "An external client or an AWS service", "target": "AWS Image Builder"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Image Builder\nThreat: Image Recipe EBS Disks Not Encrypted with CMK\nDescription: Image Recipe EBS disks that are not encrypted using AWS KMS CMK may be vulnerable to unauthorized access and data exposure.\nMitigation: Ensure that Image Recipe EBS disks are encrypted with AWS KMS CMK to enhance data security.", "metadata": {"threat_id": "IMAGEBUILDER_003", "threat_name": "Image Recipe EBS Disks Not Encrypted with CMK", "source": "An external client or an AWS service", "target": "AWS Image Builder"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS KMS\nThreat: Disabled Rotation for CMK (AWS::KMS::Key)\nDescription: A CMK that never rotates accumulates risk over time, increasing the chance that a compromised or leaked key remains active indefinitely.\nMitigation: Enable key rotation for customer-managed CMKs in KMS to reduce exposure and limit the impact of a potential key compromise.", "metadata": {"threat_id": "KMS_001", "threat_name": "Disabled Rotation for CMK (AWS::KMS::Key)", "source": "An external client or an AWS service", "target": "AWS KMS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS KMS\nThreat: Disabled Rotation for CMK (aws_kms_key)\nDescription: If a CMK\u2019s rotation is turned off, credentials can remain unchanged and be abused for extended periods, undermining encryption security.\nMitigation: Turn on automatic rotation for the KMS key to periodically generate new cryptographic material, reducing the threat window for compromised keys.", "metadata": {"threat_id": "KMS_002", "threat_name": "Disabled Rotation for CMK (aws_kms_key)", "source": "An external client or an AWS service", "target": "AWS KMS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS KMS\nThreat: Overly Permissive KMS Key Policy\nDescription: KMS key policies containing wildcard (*) principals grant excessive permissions, increasing the risk of unauthorized access to encryption keys.\nMitigation: Ensure KMS key policies specify explicit IAM principals and follow the principle of least privilege to restrict key usage.", "metadata": {"threat_id": "KMS_001", "threat_name": "Overly Permissive KMS Key Policy", "source": "An external client or an AWS service", "target": "AWS KMS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS KMS\nThreat: Overly Permissive KMS Key Policy\nDescription: KMS key policies containing wildcard (*) principals grant excessive permissions, increasing the risk of unauthorized access to encryption keys.\nMitigation: Ensure KMS key policies specify explicit IAM principals and follow the principle of least privilege to restrict key usage.", "metadata": {"threat_id": "KMS_002", "threat_name": "Overly Permissive KMS Key Policy", "source": "An external client or an AWS service", "target": "AWS KMS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS KMS\nThreat: KMS Key Not Enabled\nDescription: If the KMS key is not enabled, encrypted data may become inaccessible, leading to security compliance issues.\nMitigation: Ensure that AWS KMS keys are enabled to facilitate secure encryption and decryption operations.", "metadata": {"threat_id": "KMS_001", "threat_name": "KMS Key Not Enabled", "source": "An external client or an AWS service", "target": "AWS KMS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS KMS\nThreat: Undefined KMS Key Policy\nDescription: KMS keys without properly defined policies may allow unintended access, leading to data compromise or unauthorized decryption.\nMitigation: Ensure a well-defined and restrictive policy is applied to KMS keys to enforce least privilege access.", "metadata": {"threat_id": "KMS_022", "threat_name": "Undefined KMS Key Policy", "source": "An external client or an AWS service", "target": "AWS KMS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS KMS\nThreat: KMS Key Backing Rotation Disabled\nDescription: A key that is never rotated can accumulate risk from extended usage, making it easier for adversaries to exploit if compromised.\nMitigation: Enable automatic key rotation for KMS CMKs to reduce potential exposure from a compromised key.", "metadata": {"threat_id": "SEC_013", "threat_name": "KMS Key Backing Rotation Disabled", "source": "An external client or an AWS service", "target": "AWS KMS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS KMS\nThreat: KMS CMK Scheduled for Deletion\nDescription: Scheduling a CMK for deletion may break dependent services or hamper data decryption if not properly planned.\nMitigation: Review CMK usage before scheduling deletion, and cancel the deletion if the key is still required for data access.", "metadata": {"threat_id": "SEC_030", "threat_name": "KMS CMK Scheduled for Deletion", "source": "An external client or an AWS service", "target": "AWS KMS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Kendra\nThreat: Kendra Index Lacks CMK Encryption\nDescription: If the Kendra index does not use CMK for server-side encryption, sensitive information may be exposed in case of a security breach.\nMitigation: Ensure Kendra index server-side encryption is enabled using a customer-managed KMS key (CMK).", "metadata": {"threat_id": "KI_002", "threat_name": "Kendra Index Lacks CMK Encryption", "source": "An external client or an AWS service", "target": "AWS Kendra"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Keyspaces\nThreat: Unencrypted Keyspaces Table\nDescription: If Keyspaces table does not use a CMK for encryption, stored data may be accessible by unauthorized entities.\nMitigation: Ensure Keyspaces table is encrypted using a customer-managed KMS key (CMK).", "metadata": {"threat_id": "KS_005", "threat_name": "Unencrypted Keyspaces Table", "source": "An external client or an AWS service", "target": "AWS Keyspaces"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Kinesis\nThreat: Unencrypted Kinesis Stream\nDescription: Kinesis data streams that do not use encryption expose sensitive real-time data to unauthorized access and interception.\nMitigation: Enable server-side encryption using AWS KMS for Kinesis data streams to protect data at rest.", "metadata": {"threat_id": "KINESIS_001", "threat_name": "Unencrypted Kinesis Stream", "source": "An external client or an AWS service", "target": "AWS Kinesis"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Kinesis\nThreat: Unencrypted Kinesis Stream\nDescription: Kinesis data streams that do not use encryption expose sensitive real-time data to unauthorized access and interception.\nMitigation: Enable server-side encryption using AWS KMS for Kinesis data streams to protect data at rest.", "metadata": {"threat_id": "KINESIS_002", "threat_name": "Unencrypted Kinesis Stream", "source": "An external client or an AWS service", "target": "AWS Kinesis"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Kinesis\nThreat: Kinesis Video Stream Not Encrypted Using KMS CMK\nDescription: Kinesis Video Streams that are not encrypted using AWS KMS CMK may store sensitive video data without adequate protection, increasing the risk of unauthorized access.\nMitigation: Ensure that Kinesis Video Streams are encrypted using AWS KMS CMK to enhance security and compliance.", "metadata": {"threat_id": "KINESIS_002", "threat_name": "Kinesis Video Stream Not Encrypted Using KMS CMK", "source": "An external client or an AWS service", "target": "AWS Kinesis"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Kinesis\nThreat: Kinesis Stream Not Encrypted with KMS\nDescription: Kinesis streams that are not encrypted using AWS KMS CMK may store sensitive streaming data without protection, increasing the risk of data exposure.\nMitigation: Ensure that AWS Kinesis streams are encrypted using AWS KMS CMK to maintain data security.", "metadata": {"threat_id": "KINESIS_003", "threat_name": "Kinesis Stream Not Encrypted with KMS", "source": "An external client or an AWS service", "target": "AWS Kinesis"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Kinesis Firehose\nThreat: Unencrypted Kinesis Firehose Delivery Stream\nDescription: If Kinesis Firehose delivery streams are not encrypted, sensitive data may be exposed to unauthorized access during transit or storage.\nMitigation: Ensure that Kinesis Firehose Delivery Streams are encrypted with CMK to provide strong data protection.", "metadata": {"threat_id": "KFH_001", "threat_name": "Unencrypted Kinesis Firehose Delivery Stream", "source": "An external client or an AWS service", "target": "AWS Kinesis Firehose"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Lambda\nThreat: Hardcoded Secrets in Lambda Environment\nDescription: Hardcoded secrets in Lambda environment variables expose sensitive credentials to unauthorized access, increasing the risk of data leakage and compromise.\nMitigation: Ensure sensitive credentials are stored securely using AWS Secrets Manager or AWS Systems Manager Parameter Store instead of hardcoding them in environment variables.", "metadata": {"threat_id": "LAMBDA_001", "threat_name": "Hardcoded Secrets in Lambda Environment", "source": "An external client or an AWS service", "target": "AWS Lambda"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Lambda\nThreat: Hardcoded Secrets in Serverless Lambda Environment\nDescription: Hardcoded secrets in Lambda environment variables expose sensitive credentials to unauthorized access, increasing the risk of data leakage and compromise.\nMitigation: Ensure sensitive credentials are stored securely using AWS Secrets Manager or AWS Systems Manager Parameter Store instead of hardcoding them in environment variables.", "metadata": {"threat_id": "LAMBDA_002", "threat_name": "Hardcoded Secrets in Serverless Lambda Environment", "source": "An external client or an AWS service", "target": "AWS Lambda"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Lambda\nThreat: Hardcoded Secrets in Lambda Environment\nDescription: Hardcoded secrets in Lambda environment variables expose sensitive credentials to unauthorized access, increasing the risk of data leakage and compromise.\nMitigation: Ensure sensitive credentials are stored securely using AWS Secrets Manager or AWS Systems Manager Parameter Store instead of hardcoding them in environment variables.", "metadata": {"threat_id": "LAMBDA_003", "threat_name": "Hardcoded Secrets in Lambda Environment", "source": "An external client or an AWS service", "target": "AWS Lambda"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Lambda\nThreat: X-Ray Tracing Disabled for Lambda\nDescription: Lambda functions without X-Ray tracing enabled lack visibility into performance, execution flows, and potential security issues.\nMitigation: Enable AWS X-Ray tracing for Lambda functions to enhance monitoring, debugging, and security analysis.", "metadata": {"threat_id": "LAMBDA_004", "threat_name": "X-Ray Tracing Disabled for Lambda", "source": "An external client or an AWS service", "target": "AWS Lambda"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Lambda\nThreat: AWS Lambda Function Without Concurrency Limits\nDescription: Lambda functions without function-level concurrency limits can experience excessive concurrent executions, leading to resource exhaustion and service disruptions.\nMitigation: Set a function-level concurrency limit for Lambda functions to prevent excessive execution and ensure controlled resource utilization.", "metadata": {"threat_id": "LAMBDA_005", "threat_name": "AWS Lambda Function Without Concurrency Limits", "source": "An external client or an AWS service", "target": "AWS Lambda"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Lambda\nThreat: AWS Serverless Function Without Concurrency Limits\nDescription: Serverless functions without function-level concurrency limits can experience excessive concurrent executions, leading to increased costs and potential service disruptions.\nMitigation: Define a function-level concurrency limit for AWS Serverless functions to control execution rates and prevent resource exhaustion.", "metadata": {"threat_id": "LAMBDA_006", "threat_name": "AWS Serverless Function Without Concurrency Limits", "source": "An external client or an AWS service", "target": "AWS Lambda"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Lambda\nThreat: AWS Lambda Function Without Concurrency Limits\nDescription: Lambda functions without function-level concurrency limits can experience excessive concurrent executions, leading to performance degradation and availability issues.\nMitigation: Configure function-level concurrency limits to ensure optimal execution performance and cost efficiency.", "metadata": {"threat_id": "LAMBDA_007", "threat_name": "AWS Lambda Function Without Concurrency Limits", "source": "An external client or an AWS service", "target": "AWS Lambda"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Lambda\nThreat: AWS Lambda Function Without Dead Letter Queue (DLQ)\nDescription: Lambda functions without a configured Dead Letter Queue (DLQ) may fail without logging errors, making troubleshooting difficult and leading to data loss or service disruptions.\nMitigation: Ensure that AWS Lambda functions are configured with a DLQ to capture failed execution events for debugging and reliability.", "metadata": {"threat_id": "LAMBDA_008", "threat_name": "AWS Lambda Function Without Dead Letter Queue (DLQ)", "source": "An external client or an AWS service", "target": "AWS Lambda"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Lambda\nThreat: AWS Serverless Function Without Dead Letter Queue (DLQ)\nDescription: Serverless functions without a DLQ may fail silently, leading to lost events and reduced service reliability.\nMitigation: Configure a Dead Letter Queue (DLQ) for AWS Serverless functions to store failed execution events and facilitate troubleshooting.", "metadata": {"threat_id": "LAMBDA_009", "threat_name": "AWS Serverless Function Without Dead Letter Queue (DLQ)", "source": "An external client or an AWS service", "target": "AWS Lambda"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Lambda\nThreat: AWS Lambda Function Without Dead Letter Queue (DLQ)\nDescription: Lambda functions without a Dead Letter Queue (DLQ) may fail without notification, causing potential data loss and debugging difficulties.\nMitigation: Ensure a DLQ is set up for all AWS Lambda functions to capture and log failed executions for later analysis.", "metadata": {"threat_id": "LAMBDA_010", "threat_name": "AWS Lambda Function Without Dead Letter Queue (DLQ)", "source": "An external client or an AWS service", "target": "AWS Lambda"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Lambda\nThreat: AWS Lambda Function Not Configured Inside a VPC\nDescription: Lambda functions operating outside a VPC may not have secure private network access, increasing the risk of data exposure and unauthorized access.\nMitigation: Ensure Lambda functions are configured inside a VPC when accessing internal resources to enhance network security.", "metadata": {"threat_id": "LAMBDA_011", "threat_name": "AWS Lambda Function Not Configured Inside a VPC", "source": "An external client or an AWS service", "target": "AWS Lambda"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Lambda\nThreat: AWS Serverless Function Not Configured Inside a VPC\nDescription: Serverless functions running outside a VPC may lack secure communication with internal services, increasing security and compliance risks.\nMitigation: Configure serverless functions inside a VPC to ensure secure communication with internal resources and prevent unauthorized access.", "metadata": {"threat_id": "LAMBDA_012", "threat_name": "AWS Serverless Function Not Configured Inside a VPC", "source": "An external client or an AWS service", "target": "AWS Lambda"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Lambda\nThreat: AWS Lambda Function Not Configured Inside a VPC\nDescription: Lambda functions operating outside a VPC may lack secure private network access, increasing the risk of data exposure and unauthorized access to internal resources.\nMitigation: Ensure Lambda functions are configured inside a VPC when accessing internal AWS resources to enhance network security and limit exposure.", "metadata": {"threat_id": "LAMBDA_013", "threat_name": "AWS Lambda Function Not Configured Inside a VPC", "source": "An external client or an AWS service", "target": "AWS Lambda"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Lambda\nThreat: Lambda Function Environment Variables Not Encrypted\nDescription: Lambda functions that do not encrypt environment variables may expose sensitive configuration data, such as API keys or database credentials, leading to security vulnerabilities.\nMitigation: Ensure that Lambda environment variables are encrypted using AWS KMS to prevent unauthorized access.", "metadata": {"threat_id": "LAMBDA_006", "threat_name": "Lambda Function Environment Variables Not Encrypted", "source": "An external client or an AWS service", "target": "AWS Lambda"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Lambda\nThreat: Lambda Function Environment Variables Not Encrypted\nDescription: Lambda functions that do not encrypt environment variables may expose sensitive configuration data, such as API keys or database credentials, leading to security vulnerabilities.\nMitigation: Ensure that Lambda environment variables are encrypted using AWS KMS to prevent unauthorized access.", "metadata": {"threat_id": "LAMBDA_007", "threat_name": "Lambda Function Environment Variables Not Encrypted", "source": "An external client or an AWS service", "target": "AWS Lambda"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Lambda\nThreat: Unprotected Lambda Function URLs\nDescription: If Lambda function URLs have an AuthType set to None, unauthorized users can invoke the function, leading to potential security breaches.\nMitigation: Ensure that Lambda function URLs AuthType is set to AWS_IAM or another authentication method to prevent unauthorized access.", "metadata": {"threat_id": "LM_002", "threat_name": "Unprotected Lambda Function URLs", "source": "An external client or an AWS service", "target": "AWS Lambda"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Lambda\nThreat: Unvalidated AWS Lambda Code Signing\nDescription: If AWS Lambda function does not validate code-signing, unauthorized or tampered code may be executed, leading to potential security breaches.\nMitigation: Ensure AWS Lambda functions are configured to validate code-signing using AWS Signer.", "metadata": {"threat_id": "LMB_002", "threat_name": "Unvalidated AWS Lambda Code Signing", "source": "An external client or an AWS service", "target": "AWS Lambda"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Lambda\nThreat: Publicly Accessible AWS Lambda Function\nDescription: AWS Lambda functions that are publicly accessible may be invoked by unauthorized users, leading to potential abuse.\nMitigation: Restrict AWS Lambda permissions and use IAM policies to control function access.", "metadata": {"threat_id": "Lambda_008", "threat_name": "Publicly Accessible AWS Lambda Function", "source": "An external client or an AWS service", "target": "AWS Lambda"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Lambda\nThreat: Use of Deprecated Lambda Runtime\nDescription: Using deprecated Lambda runtimes may expose functions to unpatched security vulnerabilities and compatibility issues.\nMitigation: Ensure Lambda functions are using supported and up-to-date runtimes.", "metadata": {"threat_id": "Lambda_023", "threat_name": "Use of Deprecated Lambda Runtime", "source": "An external client or an AWS service", "target": "AWS Lambda"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Lambda\nThreat: Overly Permissive Lambda Permissions\nDescription: Allowing AWS Lambda permissions without restricting access using SourceArn or SourceAccount may lead to unintended privilege escalation.\nMitigation: Ensure that AWS Lambda function permissions delegated to AWS services are limited by SourceArn or SourceAccount.", "metadata": {"threat_id": "Lambda_024", "threat_name": "Overly Permissive Lambda Permissions", "source": "An external client or an AWS service", "target": "AWS Lambda"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Lambda\nThreat: Unbounded Lambda Concurrency\nDescription: Without concurrency limits, a burst of function invocations may exhaust account resources or cause downstream service overload.\nMitigation: Configure concurrency limits to cap the maximum number of simultaneous function executions and protect other resources.", "metadata": {"threat_id": "SLS_011", "threat_name": "Unbounded Lambda Concurrency", "source": "An external client or an AWS service", "target": "AWS Lambda"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Lambda\nThreat: No Dead-Letter Queue Configured\nDescription: If a function invocation fails repeatedly without a DLQ or on-failure destination, errors can go unnoticed and data may be lost.\nMitigation: Assign a DLQ or destination to capture failed events, enabling investigation and replay of unprocessed requests.", "metadata": {"threat_id": "SLS_012", "threat_name": "No Dead-Letter Queue Configured", "source": "An external client or an AWS service", "target": "AWS Lambda"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Lambda\nThreat: Lambda Publicly Accessible\nDescription: If the Lambda function allows public invocation, attackers can repeatedly call it, leading to resource exhaustion or malicious activities.\nMitigation: Disallow public access using resource-based policies or IAM, restricting invocation to authorized principals or VPC endpoints.", "metadata": {"threat_id": "SLS_013", "threat_name": "Lambda Publicly Accessible", "source": "An external client or an AWS service", "target": "AWS Lambda"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Lambda\nThreat: Lambda Deployed Outside VPC\nDescription: A function not in a VPC may communicate over the public internet, increasing exposure to potential attackers and limiting private resource access.\nMitigation: Deploy the function within a VPC to control inbound/outbound traffic using security groups and route tables, securing private communications.", "metadata": {"threat_id": "SLS_014", "threat_name": "Lambda Deployed Outside VPC", "source": "An external client or an AWS service", "target": "AWS Lambda"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Lambda\nThreat: Single-AZ Lambda VPC Deployment\nDescription: Using a single subnet or AZ for Lambda in a VPC can cause downtime if that AZ becomes unavailable, impacting application availability.\nMitigation: Configure multiple subnets across different AZs for the Lambda function to ensure high availability and fault tolerance.", "metadata": {"threat_id": "SLS_015", "threat_name": "Single-AZ Lambda VPC Deployment", "source": "An external client or an AWS service", "target": "AWS Lambda"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Lambda\nThreat: No VPC Endpoint for Lambda\nDescription: If the Lambda service is accessed via the public internet, connections are exposed to potential eavesdropping or disruption.\nMitigation: Configure a VPC endpoint for Lambda so that internal resources can invoke functions securely over private networking.", "metadata": {"threat_id": "SLS_017", "threat_name": "No VPC Endpoint for Lambda", "source": "An external client or an AWS service", "target": "AWS Lambda"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Lambda\nThreat: Missing Dead-Letter Queue\nDescription: Lambda functions without a configured dead-letter queue (DLQ) can silently lose failed events, hindering troubleshooting and error handling.\nMitigation: Configure a DLQ or a failure destination for Lambda to capture and inspect unprocessed events.", "metadata": {"threat_id": "LAMBDA_001", "threat_name": "Missing Dead-Letter Queue", "source": "An external client or an AWS service", "target": "AWS Lambda"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Lambda\nThreat: Outdated or Unsupported Runtime\nDescription: Using an unapproved or outdated runtime increases the risk of vulnerabilities due to security patches not being applied.\nMitigation: Adopt supported, up-to-date runtimes from AWS\u2019s recommended list to ensure timely patches and compatibility.", "metadata": {"threat_id": "LAMBDA_002", "threat_name": "Outdated or Unsupported Runtime", "source": "An external client or an AWS service", "target": "AWS Lambda"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Lambda\nThreat: Lambda Deployed Outside VPC\nDescription: Running Lambda functions outside a VPC can expose them to uncontrolled public endpoints, increasing attack surface and risking unauthorized access.\nMitigation: Deploy Lambda functions within a VPC, use private subnets, and control inbound/outbound traffic with security groups and routing configurations.", "metadata": {"threat_id": "LAMBDA_003", "threat_name": "Lambda Deployed Outside VPC", "source": "An external client or an AWS service", "target": "AWS Lambda"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Lambda\nThreat: Single-AZ VPC Deployment\nDescription: If Lambda functions are tied to a single Availability Zone, an AZ outage may disrupt service, causing potential downtime.\nMitigation: Configure Lambda functions to use multiple AZ subnets for improved fault tolerance and availability.", "metadata": {"threat_id": "LAMBDA_004", "threat_name": "Single-AZ VPC Deployment", "source": "An external client or an AWS service", "target": "AWS Lambda"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS MQ\nThreat: AWS MQ Broker Logging Disabled\nDescription: AWS MQ brokers with logging disabled reduce visibility into authentication attempts, access patterns, and security incidents, making it harder to detect anomalies.\nMitigation: Ensure logging is enabled for AWS MQ brokers to monitor access and detect unauthorized activity.", "metadata": {"threat_id": "MQ_001", "threat_name": "AWS MQ Broker Logging Disabled", "source": "An external client or an AWS service", "target": "AWS MQ"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS MQ\nThreat: Amazon MQ Broker Publicly Accessible\nDescription: Amazon MQ brokers that are publicly accessible increase the risk of unauthorized access, data leakage, and potential message interception.\nMitigation: Ensure Amazon MQ brokers are configured with private endpoints and security groups restrict access to only trusted networks.", "metadata": {"threat_id": "MQ_002", "threat_name": "Amazon MQ Broker Publicly Accessible", "source": "An external client or an AWS service", "target": "AWS MQ"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS MQ\nThreat: Amazon MQ Broker Publicly Exposed\nDescription: MQ brokers that are publicly exposed create a security risk by allowing unauthorized access to message queues and communication channels.\nMitigation: Ensure Amazon MQ brokers are not publicly exposed by configuring VPC endpoints and restricting access using security groups and IAM policies.", "metadata": {"threat_id": "MQ_003", "threat_name": "Amazon MQ Broker Publicly Exposed", "source": "An external client or an AWS service", "target": "AWS MQ"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS MQ\nThreat: Amazon MQ Broker Audit Logging Not Enabled\nDescription: MQ brokers without audit logging enabled lack visibility into messaging activities, which can hinder compliance and forensic investigations.\nMitigation: Ensure that AWS AmazonMQ Broker audit logging is enabled to capture messaging activity for security and compliance purposes.", "metadata": {"threat_id": "MQ_003", "threat_name": "Amazon MQ Broker Audit Logging Not Enabled", "source": "An external client or an AWS service", "target": "AWS MQ"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS MQ\nThreat: Amazon MQ Broker Audit Logging Not Enabled\nDescription: MQ brokers without audit logging enabled lack visibility into messaging activities, making it difficult to detect security incidents and comply with regulatory requirements.\nMitigation: Ensure that AWS MQ Broker audit logging is enabled to capture messaging activity for security and compliance purposes.", "metadata": {"threat_id": "MQ_004", "threat_name": "Amazon MQ Broker Audit Logging Not Enabled", "source": "An external client or an AWS service", "target": "AWS MQ"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS MQ\nThreat: MQ Broker Minor Version Updates Not Enabled\nDescription: Without automatic minor version updates, AWS MQ Broker may run outdated software, exposing the system to security vulnerabilities and performance issues.\nMitigation: Ensure that AWS MQ Broker minor version updates are enabled to receive the latest security patches and enhancements.", "metadata": {"threat_id": "MQ_005", "threat_name": "MQ Broker Minor Version Updates Not Enabled", "source": "An external client or an AWS service", "target": "AWS MQ"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS MQ\nThreat: MQ Broker Version Not Up-to-Date\nDescription: Running an outdated version of AWS MQ Broker increases the risk of security vulnerabilities and reduces system stability.\nMitigation: Ensure AWS MQ Broker is updated to the latest version to benefit from security patches and new features.", "metadata": {"threat_id": "MQ_006", "threat_name": "MQ Broker Version Not Up-to-Date", "source": "An external client or an AWS service", "target": "AWS MQ"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS MQ\nThreat: MQ Broker Configuration Using an Outdated Version\nDescription: Using an outdated configuration version for MQ Broker may result in security weaknesses and deprecated features that can introduce vulnerabilities.\nMitigation: Ensure AWS MQ Broker configuration is updated to align with the latest supported version.", "metadata": {"threat_id": "MQ_007", "threat_name": "MQ Broker Configuration Using an Outdated Version", "source": "An external client or an AWS service", "target": "AWS MQ"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS MQ\nThreat: MQ Broker Not Encrypted with KMS CMK\nDescription: An MQ Broker that is not encrypted with AWS KMS CMK may expose sensitive messaging data to unauthorized access.\nMitigation: Ensure MQ Broker is encrypted using AWS KMS CMK for secure message storage and transmission.", "metadata": {"threat_id": "MQ_008", "threat_name": "MQ Broker Not Encrypted with KMS CMK", "source": "An external client or an AWS service", "target": "AWS MQ"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS MSK\nThreat: MSK Cluster Logging Disabled\nDescription: Amazon MSK clusters without logging enabled lack visibility into access patterns and security incidents, making it difficult to detect unauthorized access or malicious activity.\nMitigation: Ensure that Amazon MSK logging is enabled to capture audit logs for security monitoring and compliance.", "metadata": {"threat_id": "MSK_001", "threat_name": "MSK Cluster Logging Disabled", "source": "An external client or an AWS service", "target": "AWS MSK"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS MSK\nThreat: MSK Cluster Logging Disabled\nDescription: Amazon MSK clusters without logging enabled lack visibility into access patterns and security incidents, making it difficult to detect unauthorized access or malicious activity.\nMitigation: Ensure that Amazon MSK logging is enabled to capture audit logs for security monitoring and compliance.", "metadata": {"threat_id": "MSK_002", "threat_name": "MSK Cluster Logging Disabled", "source": "An external client or an AWS service", "target": "AWS MSK"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS MSK\nThreat: MSK Cluster Encryption Disabled\nDescription: Amazon MSK clusters without encryption at rest and in transit expose sensitive streaming data to unauthorized access and potential interception.\nMitigation: Ensure that Amazon MSK clusters have encryption enabled at rest using AWS KMS and encryption in transit using TLS to protect sensitive data.", "metadata": {"threat_id": "MSK_003", "threat_name": "MSK Cluster Encryption Disabled", "source": "An external client or an AWS service", "target": "AWS MSK"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS MSK\nThreat: MSK Cluster Encryption Disabled\nDescription: Amazon MSK clusters without encryption at rest and in transit expose sensitive streaming data to unauthorized access and potential interception.\nMitigation: Ensure that Amazon MSK clusters have encryption enabled at rest using AWS KMS and encryption in transit using TLS to protect sensitive data.", "metadata": {"threat_id": "MSK_004", "threat_name": "MSK Cluster Encryption Disabled", "source": "An external client or an AWS service", "target": "AWS MSK"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS MSK\nThreat: MSK Cluster Exposed to Public Access\nDescription: MSK cluster nodes that are not private may be accessible from the internet, increasing the risk of unauthorized access and data breaches.\nMitigation: Ensure MSK nodes are deployed in private subnets and restrict access through security groups.", "metadata": {"threat_id": "MSK_001", "threat_name": "MSK Cluster Exposed to Public Access", "source": "An external client or an AWS service", "target": "AWS MSK"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS MWAA\nThreat: MWAA Environment Lacking Scheduler Logs\nDescription: If scheduler logs are not enabled, potential security incidents and workflow failures may not be properly logged for auditing and troubleshooting.\nMitigation: Ensure MWAA environment has scheduler logs enabled to support monitoring and security auditing.", "metadata": {"threat_id": "MWAA_001", "threat_name": "MWAA Environment Lacking Scheduler Logs", "source": "An external client or an AWS service", "target": "AWS MWAA"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS MWAA\nThreat: MWAA Environment Lacking Worker Logs\nDescription: If worker logs are not enabled, debugging and tracking security events for worker nodes becomes difficult, leading to unmonitored security incidents.\nMitigation: Ensure MWAA environment has worker logs enabled to facilitate debugging and security monitoring.", "metadata": {"threat_id": "MWAA_002", "threat_name": "MWAA Environment Lacking Worker Logs", "source": "An external client or an AWS service", "target": "AWS MWAA"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS MWAA\nThreat: MWAA Environment Lacking Webserver Logs\nDescription: Without webserver logs, security-related events such as unauthorized access attempts may not be detected.\nMitigation: Ensure MWAA environment has webserver logs enabled to track security and operational activities.", "metadata": {"threat_id": "MWAA_003", "threat_name": "MWAA Environment Lacking Webserver Logs", "source": "An external client or an AWS service", "target": "AWS MWAA"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS MWAA\nThreat: MWAA Environment is Publicly Accessible\nDescription: Publicly accessible MWAA environments may expose sensitive data and workflows to unauthorized users.\nMitigation: Ensure MWAA environments are configured with appropriate VPC settings to restrict public access.", "metadata": {"threat_id": "MWAA_024", "threat_name": "MWAA Environment is Publicly Accessible", "source": "An external client or an AWS service", "target": "AWS MWAA"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS MemoryDB\nThreat: MemoryDB Not Encrypted at Rest\nDescription: MemoryDB clusters that are not encrypted at rest using AWS KMS CMKs may store sensitive data in an unprotected manner, increasing the risk of unauthorized access.\nMitigation: Ensure that MemoryDB is encrypted at rest using AWS KMS CMKs.", "metadata": {"threat_id": "MEMORYDB_001", "threat_name": "MemoryDB Not Encrypted at Rest", "source": "An external client or an AWS service", "target": "AWS MemoryDB"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS MemoryDB\nThreat: MemoryDB Data Not Encrypted in Transit\nDescription: MemoryDB clusters that do not encrypt data in transit may expose sensitive information during communication between nodes, increasing security risks.\nMitigation: Ensure MemoryDB data is encrypted in transit to protect data integrity and confidentiality.", "metadata": {"threat_id": "MEMORYDB_002", "threat_name": "MemoryDB Data Not Encrypted in Transit", "source": "An external client or an AWS service", "target": "AWS MemoryDB"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS MemoryDB\nThreat: Unencrypted MemoryDB Snapshot\nDescription: If a MemoryDB snapshot is not encrypted with a customer-managed KMS key (CMK), stored data could be accessed by unauthorized entities.\nMitigation: Ensure MemoryDB snapshots are encrypted using a customer-managed KMS key.", "metadata": {"threat_id": "MDB_004", "threat_name": "Unencrypted MemoryDB Snapshot", "source": "An external client or an AWS service", "target": "AWS MemoryDB"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Neptune\nThreat: Unencrypted Neptune Database Cluster Storage\nDescription: Neptune database clusters without encryption expose sensitive graph data to unauthorized access and potential data breaches.\nMitigation: Ensure Neptune database clusters use AWS KMS encryption to protect data at rest.", "metadata": {"threat_id": "NEPTUNE_001", "threat_name": "Unencrypted Neptune Database Cluster Storage", "source": "An external client or an AWS service", "target": "AWS Neptune"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Neptune\nThreat: Unencrypted Neptune Database Cluster Storage\nDescription: Neptune database clusters without encryption expose sensitive graph data to unauthorized access and potential data breaches.\nMitigation: Ensure Neptune database clusters use AWS KMS encryption to protect data at rest.", "metadata": {"threat_id": "NEPTUNE_002", "threat_name": "Unencrypted Neptune Database Cluster Storage", "source": "An external client or an AWS service", "target": "AWS Neptune"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Neptune\nThreat: Neptune Logging Disabled\nDescription: Neptune clusters without logging enabled lack visibility into database queries and access patterns, increasing the risk of undetected security incidents.\nMitigation: Ensure AWS Neptune logging is enabled to capture audit logs for compliance and security monitoring.", "metadata": {"threat_id": "NEPTUNE_001", "threat_name": "Neptune Logging Disabled", "source": "An external client or an AWS service", "target": "AWS Neptune"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Neptune\nThreat: Neptune Logging Disabled\nDescription: Neptune clusters without logging enabled lack visibility into database queries and access patterns, increasing the risk of undetected security incidents.\nMitigation: Ensure AWS Neptune logging is enabled to capture audit logs for compliance and security monitoring.", "metadata": {"threat_id": "NEPTUNE_002", "threat_name": "Neptune Logging Disabled", "source": "An external client or an AWS service", "target": "AWS Neptune"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Neptune\nThreat: Publicly Accessible Neptune Cluster Instance\nDescription: Neptune cluster instances that are publicly accessible increase the risk of unauthorized access, data exfiltration, and potential data breaches.\nMitigation: Ensure that Neptune cluster instances are deployed in private subnets and access is restricted through security groups and IAM policies.", "metadata": {"threat_id": "NEPTUNE_003", "threat_name": "Publicly Accessible Neptune Cluster Instance", "source": "An external client or an AWS service", "target": "AWS Neptune"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Neptune\nThreat: Unencrypted Neptune Cluster Snapshot\nDescription: If Neptune snapshots are not encrypted, sensitive graph database information may be exposed.\nMitigation: Ensure Neptune snapshots are encrypted using a customer-managed KMS key.", "metadata": {"threat_id": "NEPT_005", "threat_name": "Unencrypted Neptune Cluster Snapshot", "source": "An external client or an AWS service", "target": "AWS Neptune"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Neptune\nThreat: Unencrypted Neptune Cluster\nDescription: Neptune clusters that are not encrypted using a CMK may expose sensitive data to unauthorized access.\nMitigation: Ensure Neptune clusters are encrypted by KMS using a customer-managed key (CMK).", "metadata": {"threat_id": "NEPT_007", "threat_name": "Unencrypted Neptune Cluster", "source": "An external client or an AWS service", "target": "AWS Neptune"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Neptune\nThreat: Neptune DB Cluster Without IAM Authentication\nDescription: Neptune DB clusters without IAM authentication may rely on static credentials, increasing the risk of credential compromise.\nMitigation: Ensure Neptune DB clusters have IAM database authentication enabled for secure access control.", "metadata": {"threat_id": "Neptune_019", "threat_name": "Neptune DB Cluster Without IAM Authentication", "source": "An external client or an AWS service", "target": "AWS Neptune"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Neptune\nThreat: Neptune DB Cluster Without Automated Backups\nDescription: Neptune clusters without automated backups are at risk of data loss due to accidental deletions or failures.\nMitigation: Ensure Neptune DB clusters have automated backups enabled with an adequate retention period.", "metadata": {"threat_id": "Neptune_021", "threat_name": "Neptune DB Cluster Without Automated Backups", "source": "An external client or an AWS service", "target": "AWS Neptune"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Neptune\nThreat: Neptune DB Cluster Not Copying Tags to Snapshots\nDescription: Not copying tags to snapshots may cause compliance tracking issues and impact resource organization.\nMitigation: Ensure Neptune DB clusters are configured to copy tags to snapshots for proper governance and tracking.", "metadata": {"threat_id": "Neptune_022", "threat_name": "Neptune DB Cluster Not Copying Tags to Snapshots", "source": "An external client or an AWS service", "target": "AWS Neptune"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Neptune\nThreat: Neptune Cluster Lacking Deletion Protection\nDescription: Neptune clusters without deletion protection enabled can be accidentally deleted, leading to irreversible data loss.\nMitigation: Enable deletion protection on Neptune clusters to prevent accidental deletions.", "metadata": {"threat_id": "NEP_016", "threat_name": "Neptune Cluster Lacking Deletion Protection", "source": "An external client or an AWS service", "target": "AWS Neptune"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Network Firewall\nThreat: Network Firewall Without Deletion Protection\nDescription: Network Firewalls without deletion protection enabled can be accidentally removed, leading to security gaps.\nMitigation: Ensure that Network Firewalls have deletion protection enabled to prevent accidental removal.", "metadata": {"threat_id": "NFW_003", "threat_name": "Network Firewall Without Deletion Protection", "source": "An external client or an AWS service", "target": "AWS Network Firewall"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Network Firewall\nThreat: Network Firewall Encryption Without CMK\nDescription: Network firewalls that are not encrypted using a customer-managed key (CMK) may be vulnerable to unauthorized access.\nMitigation: Ensure that Network Firewall encryption is configured using a CMK to enhance security.", "metadata": {"threat_id": "NFW_004", "threat_name": "Network Firewall Encryption Without CMK", "source": "An external client or an AWS service", "target": "AWS Network Firewall"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Network Firewall\nThreat: Network Firewall Rule Group Encryption Without CMK\nDescription: Network firewall rule groups that do not use CMK encryption may not provide adequate security for traffic inspection.\nMitigation: Ensure that Network Firewall Rule Group encryption is configured using a CMK.", "metadata": {"threat_id": "NFW_005", "threat_name": "Network Firewall Rule Group Encryption Without CMK", "source": "An external client or an AWS service", "target": "AWS Network Firewall"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Network Firewall\nThreat: Network Firewall Policy Without CMK Encryption\nDescription: Network firewall policies that do not use CMK encryption may be vulnerable to unauthorized modifications.\nMitigation: Ensure Network Firewall Policy defines an encryption configuration that uses a customer-managed key (CMK).", "metadata": {"threat_id": "NFW_006", "threat_name": "Network Firewall Policy Without CMK Encryption", "source": "An external client or an AWS service", "target": "AWS Network Firewall"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Network Firewall\nThreat: Network Firewall Lacks Logging\nDescription: A network firewall without logging enabled may lead to undetected security events and network anomalies.\nMitigation: Ensure logging is configured for AWS Network Firewall to enable visibility into traffic and security incidents.", "metadata": {"threat_id": "NWF_021", "threat_name": "Network Firewall Lacks Logging", "source": "An external client or an AWS service", "target": "AWS Network Firewall"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Network Firewall\nThreat: Unsafe Default Action for Fragment Packets\nDescription: If the default action for fragmented packets is not properly set (e.g., not dropping or passing to the stateful engine), an attacker may bypass network inspection by sending fragmented traffic.\nMitigation: Configure the stateless fragment default actions to drop suspicious fragments or forward them to a stateful rule engine for deeper inspection.", "metadata": {"threat_id": "NETFW_001", "threat_name": "Unsafe Default Action for Fragment Packets", "source": "An external client or an AWS service", "target": "AWS Network Firewall"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Network Firewall\nThreat: Insecure Default Action for Full Packets\nDescription: If the firewall policy\u2019s default action for full packets is misconfigured, potentially harmful or unknown traffic may pass uninspected.\nMitigation: Set the default action to drop unauthorized traffic or forward it to a robust rule set, ensuring unknown packets don\u2019t bypass inspection.", "metadata": {"threat_id": "NETFW_002", "threat_name": "Insecure Default Action for Full Packets", "source": "An external client or an AWS service", "target": "AWS Network Firewall"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Network Firewall\nThreat: Firewall Policy Without Rule Groups\nDescription: A firewall policy not associated with any rule groups effectively provides no filtering or inspection, allowing all traffic by default.\nMitigation: Attach stateless and stateful rule groups to the firewall policy to enforce inspection and filtering on network traffic.", "metadata": {"threat_id": "NETFW_003", "threat_name": "Firewall Policy Without Rule Groups", "source": "An external client or an AWS service", "target": "AWS Network Firewall"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Network Firewall\nThreat: Empty Stateless Rule Group\nDescription: If a stateless rule group is configured but contains no actual rules, it fails to inspect or filter traffic, leaving the network open to threats.\nMitigation: Ensure each stateless rule group includes well-defined rules that match and take action on relevant traffic patterns.", "metadata": {"threat_id": "NETFW_004", "threat_name": "Empty Stateless Rule Group", "source": "An external client or an AWS service", "target": "AWS Network Firewall"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS OpenSearch\nThreat: OpenSearch Domain Without HTTPS Enforcement\nDescription: OpenSearch domains that do not enforce HTTPS allow data to be transmitted in plaintext, increasing the risk of interception and unauthorized access.\nMitigation: Ensure that OpenSearch domains enforce HTTPS to secure data in transit and prevent unauthorized access.", "metadata": {"threat_id": "OPENSEARCH_001", "threat_name": "OpenSearch Domain Without HTTPS Enforcement", "source": "An external client or an AWS service", "target": "AWS OpenSearch"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS OpenSearch\nThreat: OpenSearch Domain Logging Disabled\nDescription: OpenSearch domains without logging enabled lack visibility into access patterns, search queries, and potential security incidents.\nMitigation: Ensure OpenSearch logging is enabled to capture audit logs for security monitoring and compliance.", "metadata": {"threat_id": "OPENSEARCH_002", "threat_name": "OpenSearch Domain Logging Disabled", "source": "An external client or an AWS service", "target": "AWS OpenSearch"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS OpenSearch\nThreat: OpenSearch Domain Logging Disabled\nDescription: OpenSearch domains without logging enabled lack visibility into access patterns, search queries, and potential security incidents.\nMitigation: Ensure OpenSearch logging is enabled to capture audit logs for security monitoring and compliance.", "metadata": {"threat_id": "OPENSEARCH_003", "threat_name": "OpenSearch Domain Logging Disabled", "source": "An external client or an AWS service", "target": "AWS OpenSearch"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS OpenSearch\nThreat: OpenSearch Domain Using Outdated TLS Policy\nDescription: Running OpenSearch with an outdated TLS policy may expose sensitive data to interception and compromise.\nMitigation: Ensure OpenSearch domains are configured with the latest TLS policy to protect data in transit.", "metadata": {"threat_id": "OS_001", "threat_name": "OpenSearch Domain Using Outdated TLS Policy", "source": "An external client or an AWS service", "target": "AWS OpenSearch"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS OpenSearch\nThreat: Unencrypted OpenSearch Data\nDescription: If OpenSearch data is not encrypted, unauthorized parties could access and manipulate stored information.\nMitigation: Ensure all data stored in OpenSearch is encrypted with a CMK to ensure data security.", "metadata": {"threat_id": "OS_001", "threat_name": "Unencrypted OpenSearch Data", "source": "An external client or an AWS service", "target": "AWS OpenSearch"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS OpenSearch\nThreat: Elasticsearch Using Default Security Group\nDescription: Using the default security group for OpenSearch may allow unintended access, increasing exposure to unauthorized data retrieval.\nMitigation: Ensure that OpenSearch is not using the default Security Group and instead uses a properly restricted security group.", "metadata": {"threat_id": "OS_002", "threat_name": "Elasticsearch Using Default Security Group", "source": "An external client or an AWS service", "target": "AWS OpenSearch"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS OpenSearch\nThreat: Missing Audit Logging in OpenSearch Domain\nDescription: OpenSearch domains without audit logging enabled may lack visibility into access patterns and security events.\nMitigation: Ensure OpenSearch Domain Audit Logging is enabled to track changes and detect unauthorized access.", "metadata": {"threat_id": "OPENSEARCH_015", "threat_name": "Missing Audit Logging in OpenSearch Domain", "source": "An external client or an AWS service", "target": "AWS OpenSearch"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS OpenSearch\nThreat: Insufficient Master Nodes in OpenSearch\nDescription: OpenSearch domains with fewer than three dedicated master nodes may experience instability and loss of cluster quorum.\nMitigation: Ensure OpenSearch domains are configured with at least three dedicated master nodes for high availability.", "metadata": {"threat_id": "OPENSEARCH_017", "threat_name": "Insufficient Master Nodes in OpenSearch", "source": "An external client or an AWS service", "target": "AWS OpenSearch"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS OpenSearch\nThreat: ElasticSearch/OpenSearch Without Fine-Grained Access Control\nDescription: AWS ElasticSearch/OpenSearch domains without fine-grained access control may allow unauthorized users to access and modify sensitive data.\nMitigation: Enable fine-grained access control to ensure only authorized users and applications have appropriate access.", "metadata": {"threat_id": "ES_009", "threat_name": "ElasticSearch/OpenSearch Without Fine-Grained Access Control", "source": "An external client or an AWS service", "target": "AWS OpenSearch"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS OpenSearch\nThreat: ElasticSearch/OpenSearch Without Dedicated Master Node\nDescription: ElasticSearch/OpenSearch clusters without dedicated master nodes may experience stability issues, leading to downtime and degraded performance.\nMitigation: Enable dedicated master nodes to improve cluster stability and ensure reliable operation.", "metadata": {"threat_id": "ES_017", "threat_name": "ElasticSearch/OpenSearch Without Dedicated Master Node", "source": "An external client or an AWS service", "target": "AWS OpenSearch"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS OpenSearch\nThreat: Access Control Not Enabled\nDescription: Without appropriate access control (e.g., domain access policies or fine-grained access control) attackers or unauthorized users could read, modify, or delete data in the domain.\nMitigation: Enable domain access policies and, optionally, fine-grained access control to limit user permissions and enforce IAM-based authentication.", "metadata": {"threat_id": "OS_001", "threat_name": "Access Control Not Enabled", "source": "An external client or an AWS service", "target": "AWS OpenSearch"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS OpenSearch\nThreat: Audit Logging Disabled\nDescription: If audit logs are not enabled, suspicious operations and access attempts will not be captured, complicating incident investigation and compliance checks.\nMitigation: Enable audit logs for detailed tracking of user operations and events, helping to detect anomalies and unauthorized actions.", "metadata": {"threat_id": "OS_002", "threat_name": "Audit Logging Disabled", "source": "An external client or an AWS service", "target": "AWS OpenSearch"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS OpenSearch\nThreat: Single Data Node or Insufficient Fault Tolerance\nDescription: Running data nodes without fault tolerance (e.g., only one node or insufficient replica shards) could result in data loss or service downtime if a node fails.\nMitigation: Configure multi-node clusters with replica shards in multiple Availability Zones to ensure high availability and prevent data loss.", "metadata": {"threat_id": "OS_003", "threat_name": "Single Data Node or Insufficient Fault Tolerance", "source": "An external client or an AWS service", "target": "AWS OpenSearch"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS OpenSearch\nThreat: Unencrypted Data at Rest\nDescription: Storing domain data unencrypted allows unauthorized actors with access to the physical storage to read sensitive data.\nMitigation: Enable encryption at rest using AWS KMS keys to secure data and restrict key usage via IAM policies.", "metadata": {"threat_id": "OS_004", "threat_name": "Unencrypted Data at Rest", "source": "An external client or an AWS service", "target": "AWS OpenSearch"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS OpenSearch\nThreat: HTTPS Not Required for Client Connections\nDescription: Allowing unencrypted HTTP connections exposes data in transit to eavesdropping and tampering, compromising confidentiality and integrity.\nMitigation: Require HTTPS for all connections to the OpenSearch domain to ensure end-to-end encryption of data in transit.", "metadata": {"threat_id": "OS_005", "threat_name": "HTTPS Not Required for Client Connections", "source": "An external client or an AWS service", "target": "AWS OpenSearch"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS OpenSearch\nThreat: Publicly Accessible Domain\nDescription: If the domain is not restricted to a VPC, unauthorized users from the internet can attempt to access or disrupt the service.\nMitigation: Configure the domain to run within a VPC and restrict network access to only trusted IP ranges or resources.", "metadata": {"threat_id": "OS_006", "threat_name": "Publicly Accessible Domain", "source": "An external client or an AWS service", "target": "AWS OpenSearch"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS OpenSearch\nThreat: No Logs Pushed to CloudWatch\nDescription: Without streaming logs to CloudWatch, administrators lack real-time visibility into domain performance or potential security events, delaying incident response.\nMitigation: Enable CloudWatch logging for domain logs to facilitate continuous monitoring, alerting, and troubleshooting.", "metadata": {"threat_id": "OS_007", "threat_name": "No Logs Pushed to CloudWatch", "source": "An external client or an AWS service", "target": "AWS OpenSearch"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS OpenSearch\nThreat: Node-to-Node Encryption Disabled\nDescription: If node-to-node encryption is disabled, data traveling between cluster nodes in transit could be intercepted or modified by an attacker with network access.\nMitigation: Enable node-to-node encryption to ensure that traffic within the cluster remains secure and cannot be intercepted or altered.", "metadata": {"threat_id": "OS_008", "threat_name": "Node-to-Node Encryption Disabled", "source": "An external client or an AWS service", "target": "AWS OpenSearch"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Organizations\nThreat: Account Not in AWS Organizations\nDescription: If an account isn\u2019t part of AWS Organizations, centralized governance, security baselines, and billing oversight can be bypassed or inconsistent.\nMitigation: Attach the standalone AWS account to an AWS Organization for consolidated management and consistent policy enforcement.", "metadata": {"threat_id": "SEC_002", "threat_name": "Account Not in AWS Organizations", "source": "An external client or an AWS service", "target": "AWS Organizations"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS QLDB\nThreat: QLDB Ledger Permissions Mode Not Set to STANDARD\nDescription: QLDB ledgers with improper permissions mode may allow unauthorized modifications, compromising data integrity.\nMitigation: Ensure that QLDB ledger permissions mode is set to STANDARD to enforce fine-grained access control.", "metadata": {"threat_id": "QLDB_002", "threat_name": "QLDB Ledger Permissions Mode Not Set to STANDARD", "source": "An external client or an AWS service", "target": "AWS QLDB"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS QLDB\nThreat: QLDB Ledger Deletion Protection Not Enabled\nDescription: QLDB ledgers without deletion protection enabled may be accidentally deleted, leading to data loss and operational disruptions.\nMitigation: Ensure that deletion protection is enabled for all QLDB ledgers to prevent accidental deletions.", "metadata": {"threat_id": "QLDB_003", "threat_name": "QLDB Ledger Deletion Protection Not Enabled", "source": "An external client or an AWS service", "target": "AWS QLDB"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS RDS\nThreat: Unencrypted RDS Storage\nDescription: RDS instances that store data without encryption expose sensitive information to unauthorized access in case of data breaches or insider threats.\nMitigation: Ensure RDS instances are configured with encryption enabled to protect data at rest using AWS KMS.", "metadata": {"threat_id": "RDS_001", "threat_name": "Unencrypted RDS Storage", "source": "An external client or an AWS service", "target": "AWS RDS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS RDS\nThreat: Unencrypted RDS Storage\nDescription: RDS instances that store data without encryption expose sensitive information to unauthorized access in case of data breaches or insider threats.\nMitigation: Ensure RDS instances are configured with encryption enabled to protect data at rest using AWS KMS.", "metadata": {"threat_id": "RDS_002", "threat_name": "Unencrypted RDS Storage", "source": "An external client or an AWS service", "target": "AWS RDS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS RDS\nThreat: Publicly Accessible RDS Instance\nDescription: RDS instances that are publicly accessible increase the risk of unauthorized access, data exposure, and potential exploitation.\nMitigation: Ensure RDS instances are not publicly accessible by restricting access to private VPCs and applying security group rules to limit database access.", "metadata": {"threat_id": "RDS_003", "threat_name": "Publicly Accessible RDS Instance", "source": "An external client or an AWS service", "target": "AWS RDS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS RDS\nThreat: Database Security Group Rules Lack Descriptions\nDescription: Database security groups and their rules without descriptions can lead to misconfigured access policies and hinder security audits.\nMitigation: Ensure all database security group rules include descriptions to maintain visibility and track database access permissions.", "metadata": {"threat_id": "DB_001", "threat_name": "Database Security Group Rules Lack Descriptions", "source": "An external client or an AWS service", "target": "AWS RDS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS RDS\nThreat: Amazon RDS Enhanced Monitoring Not Enabled\nDescription: Amazon RDS instances without enhanced monitoring lack real-time performance metrics, making it difficult to detect issues such as CPU overload, slow queries, or unauthorized access.\nMitigation: Enable enhanced monitoring for Amazon RDS instances to capture real-time performance data and improve operational visibility.", "metadata": {"threat_id": "RDS_004", "threat_name": "Amazon RDS Enhanced Monitoring Not Enabled", "source": "An external client or an AWS service", "target": "AWS RDS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS RDS\nThreat: Amazon RDS Enhanced Monitoring Not Enabled\nDescription: RDS clusters without enhanced monitoring lack insights into database performance metrics, potentially leading to undetected issues affecting availability and security.\nMitigation: Ensure enhanced monitoring is enabled for all Amazon RDS instances to gain deeper visibility into database performance and security events.", "metadata": {"threat_id": "RDS_005", "threat_name": "Amazon RDS Enhanced Monitoring Not Enabled", "source": "An external client or an AWS service", "target": "AWS RDS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS RDS\nThreat: Amazon RDS Enhanced Monitoring Not Enabled\nDescription: RDS cluster instances without enhanced monitoring enabled may lead to difficulties in detecting security anomalies, excessive resource utilization, and unauthorized access attempts.\nMitigation: Enable enhanced monitoring for RDS cluster instances to collect performance data and enhance troubleshooting capabilities.", "metadata": {"threat_id": "RDS_006", "threat_name": "Amazon RDS Enhanced Monitoring Not Enabled", "source": "An external client or an AWS service", "target": "AWS RDS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS RDS\nThreat: Amazon RDS Logs Not Enabled\nDescription: Without log collection enabled, Amazon RDS instances lack visibility into database activities, which can make security auditing and performance troubleshooting difficult.\nMitigation: Ensure that logging is enabled for Amazon RDS instances, including error logs, slow query logs, and general logs, to improve monitoring and compliance.", "metadata": {"threat_id": "RDS_006", "threat_name": "Amazon RDS Logs Not Enabled", "source": "An external client or an AWS service", "target": "AWS RDS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS RDS\nThreat: Amazon RDS Instances Without Backup Policy\nDescription: RDS instances without an automated backup policy may suffer data loss in case of accidental deletions, infrastructure failures, or security breaches.\nMitigation: Ensure that RDS instances have automated backups enabled with an appropriate retention period for disaster recovery and compliance.", "metadata": {"threat_id": "RDS_007", "threat_name": "Amazon RDS Instances Without Backup Policy", "source": "An external client or an AWS service", "target": "AWS RDS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS RDS\nThreat: Amazon RDS Cluster Without Backup Policy\nDescription: RDS clusters without a backup policy may lead to permanent data loss in case of failures or accidental modifications.\nMitigation: Ensure that RDS clusters have an automated backup policy enabled with proper retention settings to maintain recoverability.", "metadata": {"threat_id": "RDS_008", "threat_name": "Amazon RDS Cluster Without Backup Policy", "source": "An external client or an AWS service", "target": "AWS RDS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS RDS\nThreat: RDS Cluster Without Deletion Protection\nDescription: RDS clusters that do not have deletion protection enabled may be accidentally deleted, resulting in data loss and service disruption.\nMitigation: Enable deletion protection on all critical RDS clusters to prevent accidental deletions and ensure data availability.", "metadata": {"threat_id": "RDS_009", "threat_name": "RDS Cluster Without Deletion Protection", "source": "An external client or an AWS service", "target": "AWS RDS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS RDS\nThreat: RDS Global Clusters Not Encrypted\nDescription: RDS global clusters that are not encrypted may store sensitive data without adequate protection, increasing the risk of unauthorized access.\nMitigation: Ensure that all RDS global clusters are encrypted using AWS KMS to enhance data security and compliance.", "metadata": {"threat_id": "RDS_010", "threat_name": "RDS Global Clusters Not Encrypted", "source": "An external client or an AWS service", "target": "AWS RDS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS RDS\nThreat: RDS Database Cluster Snapshot Not Encrypted\nDescription: Unencrypted RDS database cluster snapshots may expose sensitive data to unauthorized access, increasing the risk of data breaches.\nMitigation: Ensure that all RDS database cluster snapshots are encrypted using AWS KMS to enhance data protection and compliance.", "metadata": {"threat_id": "RDS_011", "threat_name": "RDS Database Cluster Snapshot Not Encrypted", "source": "An external client or an AWS service", "target": "AWS RDS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS RDS\nThreat: RDS Instances Without Multi-AZ Enabled\nDescription: RDS instances that do not have Multi-AZ enabled are at risk of downtime and data unavailability in case of an infrastructure failure in a single availability zone.\nMitigation: Ensure that Multi-AZ is enabled for all critical RDS instances to enhance availability and fault tolerance.", "metadata": {"threat_id": "RDS_012", "threat_name": "RDS Instances Without Multi-AZ Enabled", "source": "An external client or an AWS service", "target": "AWS RDS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS RDS\nThreat: RDS Database Without IAM Authentication\nDescription: RDS databases that do not have IAM authentication enabled rely solely on static credentials, increasing the risk of unauthorized access and credential mismanagement.\nMitigation: Ensure that IAM authentication is enabled for RDS databases to improve access control and reduce reliance on static credentials.", "metadata": {"threat_id": "RDS_013", "threat_name": "RDS Database Without IAM Authentication", "source": "An external client or an AWS service", "target": "AWS RDS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS RDS\nThreat: RDS Cluster Without IAM Authentication Enabled\nDescription: RDS clusters that do not have IAM authentication enabled rely solely on static credentials, increasing the risk of unauthorized access and credential mismanagement.\nMitigation: Enable IAM authentication for RDS clusters to improve access control and reduce reliance on static credentials.", "metadata": {"threat_id": "RDS_014", "threat_name": "RDS Cluster Without IAM Authentication Enabled", "source": "An external client or an AWS service", "target": "AWS RDS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS RDS\nThreat: AWS DB Security Group Resources Exist\nDescription: AWS DB security groups may be improperly configured, allowing unauthorized access to databases.\nMitigation: Ensure that no AWS DB security group resources exist, and use VPC security groups instead for managing database access.", "metadata": {"threat_id": "DBSEC_001", "threat_name": "AWS DB Security Group Resources Exist", "source": "An external client or an AWS service", "target": "AWS RDS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS RDS\nThreat: RDS Not Using a Modern CA Certificate\nDescription: An outdated CA certificate on an RDS instance may expose connections to potential security vulnerabilities and man-in-the-middle attacks.\nMitigation: Ensure RDS instances use a modern CA certificate for secure database connections.", "metadata": {"threat_id": "RDS_006", "threat_name": "RDS Not Using a Modern CA Certificate", "source": "An external client or an AWS service", "target": "AWS RDS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS RDS\nThreat: DB Instance Not Receiving Minor Upgrades Automatically\nDescription: If minor upgrades are not enabled, the database instance may run outdated software, increasing security risks and missing important patches.\nMitigation: Ensure DB instances get all minor upgrades automatically to keep the software updated and secure.", "metadata": {"threat_id": "DB_001", "threat_name": "DB Instance Not Receiving Minor Upgrades Automatically", "source": "An external client or an AWS service", "target": "AWS RDS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS RDS\nThreat: RDS Cluster Instance Not Receiving Minor Upgrades\nDescription: Without automatic minor upgrades, RDS cluster instances may run outdated database engines, increasing the risk of vulnerabilities.\nMitigation: Enable automatic minor version upgrades for RDS cluster instances to ensure they remain secure.", "metadata": {"threat_id": "DB_002", "threat_name": "RDS Cluster Instance Not Receiving Minor Upgrades", "source": "An external client or an AWS service", "target": "AWS RDS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS RDS\nThreat: Unencrypted Replicated RDS Backups\nDescription: Failing to encrypt replicated RDS backups increases the risk of unauthorized data access during backup storage and transfers.\nMitigation: Ensure replicated backups are encrypted at rest using KMS CMKs to protect data integrity and confidentiality.", "metadata": {"threat_id": "RDS_005", "threat_name": "Unencrypted Replicated RDS Backups", "source": "An external client or an AWS service", "target": "AWS RDS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS RDS\nThreat: Unencrypted RDS Cluster Activity Stream\nDescription: If RDS cluster activity streams are not encrypted, logs containing sensitive database operations could be accessed by unauthorized entities.\nMitigation: Ensure RDS Cluster activity streams are encrypted using KMS CMKs to maintain secure audit logs.", "metadata": {"threat_id": "RDS_006", "threat_name": "Unencrypted RDS Cluster Activity Stream", "source": "An external client or an AWS service", "target": "AWS RDS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS RDS\nThreat: Vulnerable PostgreSQL Log_fdw Extension\nDescription: If PostgreSQL instances use a vulnerable version with the log_fdw extension, they may be susceptible to security exploits.\nMitigation: Ensure that RDS PostgreSQL instances use a non-vulnerable version with the log_fdw extension as per AWS security bulletin AWS-2022-004.", "metadata": {"threat_id": "RDS_007", "threat_name": "Vulnerable PostgreSQL Log_fdw Extension", "source": "An external client or an AWS service", "target": "AWS RDS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS RDS\nThreat: Vulnerable PostgreSQL Log_fdw Extension\nDescription: If PostgreSQL instances in RDS clusters use a vulnerable version with the log_fdw extension, they may be susceptible to security exploits.\nMitigation: Ensure that RDS PostgreSQL instances in clusters use a non-vulnerable version with the log_fdw extension as per AWS security bulletin AWS-2022-004.", "metadata": {"threat_id": "RDS_008", "threat_name": "Vulnerable PostgreSQL Log_fdw Extension", "source": "An external client or an AWS service", "target": "AWS RDS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS RDS\nThreat: Unencrypted Database Snapshot Copy\nDescription: If database snapshot copies are not encrypted using a CMK, sensitive backup data may be vulnerable to unauthorized access.\nMitigation: Ensure database snapshot copies are encrypted using a customer-managed KMS key (CMK).", "metadata": {"threat_id": "DB_006", "threat_name": "Unencrypted Database Snapshot Copy", "source": "An external client or an AWS service", "target": "AWS RDS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS RDS\nThreat: Lack of Deletion Protection for Database Instances\nDescription: AWS database instances without deletion protection enabled can be accidentally or maliciously deleted, resulting in data loss.\nMitigation: Enable deletion protection on AWS database instances to prevent accidental or unauthorized deletions.", "metadata": {"threat_id": "DB_001", "threat_name": "Lack of Deletion Protection for Database Instances", "source": "An external client or an AWS service", "target": "AWS RDS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS RDS\nThreat: Publicly Accessible DB Snapshots\nDescription: Publicly accessible DB snapshots may expose sensitive data, leading to data breaches.\nMitigation: Ensure DB snapshots are private and restrict access to authorized AWS accounts only.", "metadata": {"threat_id": "DB_009", "threat_name": "Publicly Accessible DB Snapshots", "source": "An external client or an AWS service", "target": "AWS RDS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS RDS\nThreat: RDS Cluster Without Copy Tags to Snapshots\nDescription: RDS clusters without the 'copy tags to snapshots' feature enabled may lead to inconsistent metadata tracking across backups.\nMitigation: Ensure RDS clusters are configured to copy tags to snapshots for better traceability.", "metadata": {"threat_id": "RDS_010", "threat_name": "RDS Cluster Without Copy Tags to Snapshots", "source": "An external client or an AWS service", "target": "AWS RDS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS RDS\nThreat: RDS Cluster Log Capture Disabled\nDescription: RDS clusters without log capture may lack visibility into database operations and potential security incidents.\nMitigation: Ensure that RDS Cluster log capture is enabled to track database activities.", "metadata": {"threat_id": "RDS_023", "threat_name": "RDS Cluster Log Capture Disabled", "source": "An external client or an AWS service", "target": "AWS RDS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS RDS\nThreat: Audit Logging Disabled for RDS MySQL\nDescription: RDS clusters running MySQL without audit logging may fail to meet compliance and security monitoring requirements.\nMitigation: Ensure that RDS Cluster audit logging is enabled for MySQL engine to track database access and modifications.", "metadata": {"threat_id": "RDS_024", "threat_name": "Audit Logging Disabled for RDS MySQL", "source": "An external client or an AWS service", "target": "AWS RDS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS RDS\nThreat: Aurora Clusters Without Backtracking\nDescription: Aurora clusters without backtracking enabled may have limited recovery options, increasing downtime risks.\nMitigation: Ensure that RDS Aurora Clusters have backtracking enabled for efficient point-in-time recovery.", "metadata": {"threat_id": "RDS_025", "threat_name": "Aurora Clusters Without Backtracking", "source": "An external client or an AWS service", "target": "AWS RDS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS RDS\nThreat: Unencrypted RDS Clusters\nDescription: RDS clusters without encryption may store sensitive data in plaintext, increasing the risk of data breaches.\nMitigation: Ensure RDS Clusters are encrypted using KMS CMKs to protect sensitive information.", "metadata": {"threat_id": "RDS_026", "threat_name": "Unencrypted RDS Clusters", "source": "An external client or an AWS service", "target": "AWS RDS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS RDS\nThreat: RDS Instances Without Performance Insights\nDescription: RDS instances without performance insights enabled may lack visibility into query performance and resource utilization.\nMitigation: Enable RDS Performance Insights to gain detailed metrics and improve database performance monitoring.", "metadata": {"threat_id": "RDS_013", "threat_name": "RDS Instances Without Performance Insights", "source": "An external client or an AWS service", "target": "AWS RDS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS RDS\nThreat: Unencrypted RDS Performance Insights\nDescription: RDS Performance Insights data that is not encrypted using KMS CMKs may be vulnerable to unauthorized access.\nMitigation: Ensure RDS Performance Insights are encrypted using AWS KMS CMKs to enhance data security.", "metadata": {"threat_id": "RDS_014", "threat_name": "Unencrypted RDS Performance Insights", "source": "An external client or an AWS service", "target": "AWS RDS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS RDS\nThreat: RDS Clusters Without AWS Backup Plan\nDescription: RDS clusters without an AWS Backup plan may result in data loss in case of accidental deletion or corruption.\nMitigation: Ensure that RDS clusters are included in an AWS Backup plan to maintain data availability and integrity.", "metadata": {"threat_id": "RDS_060", "threat_name": "RDS Clusters Without AWS Backup Plan", "source": "An external client or an AWS service", "target": "AWS RDS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS RDS\nThreat: PostgreSQL RDS Cluster Without Query Logging\nDescription: RDS PostgreSQL clusters without query logging enabled may hinder security audits and troubleshooting efforts.\nMitigation: Enable query logging in PostgreSQL RDS clusters via cluster parameter groups for security auditing and performance monitoring.", "metadata": {"threat_id": "RDS_077", "threat_name": "PostgreSQL RDS Cluster Without Query Logging", "source": "An external client or an AWS service", "target": "AWS RDS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS RDS\nThreat: PostgreSQL RDS Instance Without Query Logging\nDescription: PostgreSQL RDS instances without query logging enabled may hinder security audits and performance analysis.\nMitigation: Enable query logging in PostgreSQL RDS instances through the appropriate DB parameter group settings.", "metadata": {"threat_id": "RDS_080", "threat_name": "PostgreSQL RDS Instance Without Query Logging", "source": "An external client or an AWS service", "target": "AWS RDS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS RDS\nThreat: RDS Instance Without Copy Tags to Snapshots Enabled\nDescription: RDS instances that do not copy tags to snapshots may lead to difficulties in backup management and compliance tracking.\nMitigation: Ensure that 'copy tags to snapshots' is enabled to maintain consistent metadata across backups.", "metadata": {"threat_id": "RDS_018", "threat_name": "RDS Instance Without Copy Tags to Snapshots Enabled", "source": "An external client or an AWS service", "target": "AWS RDS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS RDS\nThreat: RDS Database Lacks Encryption in Transit\nDescription: RDS databases without encryption in transit may allow data interception by attackers during transmission.\nMitigation: Enable encryption in transit (TLS) for all AWS RDS database instances to protect data integrity.", "metadata": {"threat_id": "RDS_026", "threat_name": "RDS Database Lacks Encryption in Transit", "source": "An external client or an AWS service", "target": "AWS RDS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS RDS\nThreat: Unencrypted RDS Database in Transit\nDescription: RDS database instances without encryption in transit may expose sensitive data to interception during communication.\nMitigation: Ensure that RDS database instances have encryption in transit enabled using SSL/TLS.", "metadata": {"threat_id": "RDS_027", "threat_name": "Unencrypted RDS Database in Transit", "source": "An external client or an AWS service", "target": "AWS RDS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS RDS\nThreat: Backups Disabled\nDescription: If backups are not properly enabled for RDS instances, data recovery from failures is jeopardized.\nMitigation: Enable automated backups to ensure point-in-time recovery of database instances.", "metadata": {"threat_id": "RDS_001", "threat_name": "Backups Disabled", "source": "An external client or an AWS service", "target": "AWS RDS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS RDS\nThreat: No Automatic Minor Version Upgrades\nDescription: Without automatic minor version upgrades, instances may continue running outdated engines with known security vulnerabilities.\nMitigation: Enable automatic minor version upgrades to ensure timely patching of RDS engine versions.", "metadata": {"threat_id": "RDS_002", "threat_name": "No Automatic Minor Version Upgrades", "source": "An external client or an AWS service", "target": "AWS RDS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS RDS\nThreat: Default Administrator in RDS Cluster\nDescription: Leaving a default admin account enabled with potentially default credentials or well-known usernames may allow attackers easier entry.\nMitigation: Disable or rename default admin accounts and set strong, unique passwords.", "metadata": {"threat_id": "RDS_003", "threat_name": "Default Administrator in RDS Cluster", "source": "An external client or an AWS service", "target": "AWS RDS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS RDS\nThreat: Deletion Protection Disabled for RDS Cluster\nDescription: Clusters without deletion protection enabled can be removed unintentionally or maliciously, leading to data loss.\nMitigation: Enable deletion protection to prevent accidental or unauthorized cluster removal.", "metadata": {"threat_id": "RDS_004", "threat_name": "Deletion Protection Disabled for RDS Cluster", "source": "An external client or an AWS service", "target": "AWS RDS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS RDS\nThreat: IAM Authentication Disabled (Cluster)\nDescription: Without IAM database authentication, credentials may be managed in ways that increase the risk of compromise or mismanagement.\nMitigation: Enable IAM authentication for RDS clusters to simplify credential management and strengthen access control.", "metadata": {"threat_id": "RDS_005", "threat_name": "IAM Authentication Disabled (Cluster)", "source": "An external client or an AWS service", "target": "AWS RDS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS RDS\nThreat: Single AZ Configuration (Cluster)\nDescription: Without Multi-AZ enabled, cluster availability could be disrupted if the primary Availability Zone experiences an outage.\nMitigation: Configure RDS clusters in Multi-AZ deployments for high availability and fault tolerance.", "metadata": {"threat_id": "RDS_006", "threat_name": "Single AZ Configuration (Cluster)", "source": "An external client or an AWS service", "target": "AWS RDS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS RDS\nThreat: Enhanced Monitoring Disabled\nDescription: Disabling enhanced monitoring hinders the ability to detect and diagnose performance or security issues in real time.\nMitigation: Enable Enhanced Monitoring for detailed, real-time metrics on RDS instance performance.", "metadata": {"threat_id": "RDS_007", "threat_name": "Enhanced Monitoring Disabled", "source": "An external client or an AWS service", "target": "AWS RDS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS RDS\nThreat: Not Included in Backup Plan\nDescription: RDS resources not covered by a backup plan risk permanent data loss if the resource fails or is deleted.\nMitigation: Add RDS instances to a backup plan using AWS Backup to ensure recoverability.", "metadata": {"threat_id": "RDS_008", "threat_name": "Not Included in Backup Plan", "source": "An external client or an AWS service", "target": "AWS RDS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS RDS\nThreat: Default Administrator in RDS Instance\nDescription: Instances with default admin users configured may be more easily compromised by brute force or known username attacks.\nMitigation: Disable or rename default admin accounts and use unique, strong passwords.", "metadata": {"threat_id": "RDS_009", "threat_name": "Default Administrator in RDS Instance", "source": "An external client or an AWS service", "target": "AWS RDS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS RDS\nThreat: Deletion Protection Disabled for RDS Instance\nDescription: An RDS instance can be unintentionally terminated or removed if not protected, resulting in data loss.\nMitigation: Enable deletion protection to prevent unintentional database instance removal.", "metadata": {"threat_id": "RDS_010", "threat_name": "Deletion Protection Disabled for RDS Instance", "source": "An external client or an AWS service", "target": "AWS RDS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS RDS\nThreat: IAM Authentication Disabled (Instance)\nDescription: Not using IAM authentication increases the risk of credential compromise, as credentials must be handled and stored manually.\nMitigation: Enable and enforce IAM authentication for secure and centralized credential management.", "metadata": {"threat_id": "RDS_011", "threat_name": "IAM Authentication Disabled (Instance)", "source": "An external client or an AWS service", "target": "AWS RDS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS RDS\nThreat: Public Access Enabled\nDescription: Database instances configured for public access expand the attack surface, allowing direct access from the public internet.\nMitigation: Disable public access and use private networking (VPC, security groups) to restrict access to trusted networks.", "metadata": {"threat_id": "RDS_012", "threat_name": "Public Access Enabled", "source": "An external client or an AWS service", "target": "AWS RDS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS RDS\nThreat: Logging and Auditing Disabled\nDescription: Without logging, malicious queries or unauthorized actions may go undetected, complicating forensics and compliance.\nMitigation: Enable database logging (e.g., PostgreSQL logs, MySQL logs) and integrate them with monitoring/alerting solutions.", "metadata": {"threat_id": "RDS_013", "threat_name": "Logging and Auditing Disabled", "source": "An external client or an AWS service", "target": "AWS RDS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS RDS\nThreat: Single AZ Configuration (Instance)\nDescription: If an instance is not deployed in Multi-AZ mode, a failure or outage in one Availability Zone can result in downtime or data loss.\nMitigation: Configure RDS instances in Multi-AZ for failover capability and higher availability.", "metadata": {"threat_id": "RDS_014", "threat_name": "Single AZ Configuration (Instance)", "source": "An external client or an AWS service", "target": "AWS RDS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS RDS\nThreat: Snapshots Not Encrypted\nDescription: Unencrypted snapshots can be accessed if compromised, potentially exposing sensitive data.\nMitigation: Use KMS encryption for all database snapshots to protect data at rest.", "metadata": {"threat_id": "RDS_015", "threat_name": "Snapshots Not Encrypted", "source": "An external client or an AWS service", "target": "AWS RDS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS RDS\nThreat: Publicly Accessible Snapshots\nDescription: Snapshots configured for public access enable attackers to restore or view data without authorization.\nMitigation: Disable public access for snapshots and ensure snapshots are shared only with authorized accounts.", "metadata": {"threat_id": "RDS_016", "threat_name": "Publicly Accessible Snapshots", "source": "An external client or an AWS service", "target": "AWS RDS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS RDS\nThreat: Unencrypted RDS Storage\nDescription: Data at rest on an unencrypted RDS instance may be exposed if an attacker gains access to the underlying storage.\nMitigation: Enable storage encryption using a customer-managed KMS key to secure data at rest.", "metadata": {"threat_id": "RDS_017", "threat_name": "Unencrypted RDS Storage", "source": "An external client or an AWS service", "target": "AWS RDS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS RedShift\nThreat: Redshift Security Group Rules Lack Descriptions\nDescription: Redshift security groups and their rules without descriptions can lead to misconfigured access policies and hinder security audits.\nMitigation: Ensure all Redshift security group rules include descriptions to maintain visibility and track access permissions.", "metadata": {"threat_id": "REDSHIFT_001", "threat_name": "Redshift Security Group Rules Lack Descriptions", "source": "An external client or an AWS service", "target": "AWS RedShift"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS RedShift\nThreat: Unencrypted Redshift Cluster Storage\nDescription: Redshift clusters that do not use encryption at rest expose sensitive analytical data to unauthorized access and data breaches.\nMitigation: Ensure that Redshift clusters are configured with encryption enabled using AWS KMS to protect data at rest.", "metadata": {"threat_id": "REDSHIFT_001", "threat_name": "Unencrypted Redshift Cluster Storage", "source": "An external client or an AWS service", "target": "AWS RedShift"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS RedShift\nThreat: Unencrypted Redshift Cluster Storage\nDescription: Redshift clusters that do not use encryption at rest expose sensitive analytical data to unauthorized access and data breaches.\nMitigation: Ensure that Redshift clusters are configured with encryption enabled using AWS KMS to protect data at rest.", "metadata": {"threat_id": "REDSHIFT_002", "threat_name": "Unencrypted Redshift Cluster Storage", "source": "An external client or an AWS service", "target": "AWS RedShift"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS RedShift\nThreat: Redshift Cluster Logging Disabled\nDescription: Redshift clusters without logging enabled lack visibility into access patterns, queries, and potential security incidents.\nMitigation: Ensure Amazon Redshift logging is enabled to capture audit logs for compliance and security monitoring.", "metadata": {"threat_id": "REDSHIFT_003", "threat_name": "Redshift Cluster Logging Disabled", "source": "An external client or an AWS service", "target": "AWS RedShift"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS RedShift\nThreat: Redshift Cluster Logging Disabled\nDescription: Redshift clusters without logging enabled lack visibility into access patterns, queries, and potential security incidents.\nMitigation: Ensure Amazon Redshift logging is enabled to capture audit logs for compliance and security monitoring.", "metadata": {"threat_id": "REDSHIFT_004", "threat_name": "Redshift Cluster Logging Disabled", "source": "An external client or an AWS service", "target": "AWS RedShift"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS RedShift\nThreat: Publicly Accessible Redshift Cluster\nDescription: Redshift clusters that are publicly accessible increase the risk of unauthorized access, data exfiltration, and potential data breaches.\nMitigation: Ensure that Redshift clusters are configured to restrict public access by using VPC security groups and IAM policies.", "metadata": {"threat_id": "REDSHIFT_005", "threat_name": "Publicly Accessible Redshift Cluster", "source": "An external client or an AWS service", "target": "AWS RedShift"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS RedShift\nThreat: Publicly Accessible Redshift Cluster\nDescription: Redshift clusters that are publicly accessible increase the risk of unauthorized access, data exfiltration, and potential data breaches.\nMitigation: Ensure that Redshift clusters are configured to restrict public access by using VPC security groups and IAM policies.", "metadata": {"threat_id": "REDSHIFT_006", "threat_name": "Publicly Accessible Redshift Cluster", "source": "An external client or an AWS service", "target": "AWS RedShift"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS RedShift\nThreat: Redshift Cluster Without SSL\nDescription: Redshift clusters that do not enforce SSL for client connections expose data in transit to potential interception and unauthorized access.\nMitigation: Ensure SSL is enabled for all Redshift connections to secure data in transit and prevent unauthorized eavesdropping.", "metadata": {"threat_id": "REDSHIFT_007", "threat_name": "Redshift Cluster Without SSL", "source": "An external client or an AWS service", "target": "AWS RedShift"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS RedShift\nThreat: Redshift Cluster Without SSL\nDescription: Redshift clusters that do not enforce SSL for client connections expose data in transit to potential interception and unauthorized access.\nMitigation: Ensure SSL is enabled for all Redshift connections to secure data in transit and prevent unauthorized eavesdropping.", "metadata": {"threat_id": "REDSHIFT_008", "threat_name": "Redshift Cluster Without SSL", "source": "An external client or an AWS service", "target": "AWS RedShift"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS RedShift\nThreat: Redshift Cluster Not Configured to Allow Version Upgrades\nDescription: Redshift clusters that do not allow automatic version upgrades may remain on outdated versions, exposing them to security vulnerabilities and missing performance improvements.\nMitigation: Ensure that Redshift clusters are configured to allow version upgrades by default to maintain security and performance updates.", "metadata": {"threat_id": "REDSHIFT_003", "threat_name": "Redshift Cluster Not Configured to Allow Version Upgrades", "source": "An external client or an AWS service", "target": "AWS RedShift"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS RedShift\nThreat: Redshift Cluster Not Encrypted Using KMS\nDescription: Redshift clusters that are not encrypted with AWS KMS may store sensitive data without adequate protection, increasing the risk of unauthorized access and data breaches.\nMitigation: Ensure that Redshift clusters are encrypted using AWS KMS to enhance data security and regulatory compliance.", "metadata": {"threat_id": "REDSHIFT_004", "threat_name": "Redshift Cluster Not Encrypted Using KMS", "source": "An external client or an AWS service", "target": "AWS RedShift"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS RedShift\nThreat: Redshift Cluster Deployed Outside of a VPC\nDescription: Redshift clusters that are not deployed within a VPC may be publicly accessible, increasing the risk of unauthorized access and data breaches.\nMitigation: Ensure that all Redshift clusters are deployed within a VPC to enforce network security controls and limit unauthorized access.", "metadata": {"threat_id": "REDSHIFT_005", "threat_name": "Redshift Cluster Deployed Outside of a VPC", "source": "An external client or an AWS service", "target": "AWS RedShift"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS RedShift\nThreat: Unencrypted RedShift Snapshot Copy\nDescription: If RedShift snapshot copies are not encrypted, sensitive data may be accessible in transit or at rest.\nMitigation: Ensure RedShift snapshot copies are encrypted using a customer-managed KMS key.", "metadata": {"threat_id": "RS_006", "threat_name": "Unencrypted RedShift Snapshot Copy", "source": "An external client or an AWS service", "target": "AWS RedShift"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS RedShift\nThreat: Unencrypted RedShift Serverless Namespace\nDescription: If a RedShift Serverless namespace is not encrypted using KMS, stored data may be accessed by unauthorized users.\nMitigation: Ensure RedShift Serverless namespace is encrypted using a customer-managed KMS key (CMK).", "metadata": {"threat_id": "RS_007", "threat_name": "Unencrypted RedShift Serverless Namespace", "source": "An external client or an AWS service", "target": "AWS RedShift"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS RedShift\nThreat: Use of Default Database Name in Redshift\nDescription: Redshift clusters using the default database name may increase the risk of targeted attacks and misconfigurations.\nMitigation: Ensure Redshift clusters do not use the default database name by specifying a custom name during creation.", "metadata": {"threat_id": "REDSHIFT_019", "threat_name": "Use of Default Database Name in Redshift", "source": "An external client or an AWS service", "target": "AWS RedShift"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS RedShift\nThreat: Lack of Enhanced VPC Routing in Redshift\nDescription: Redshift clusters without enhanced VPC routing may transmit traffic over public networks, increasing exposure to attacks.\nMitigation: Ensure Redshift clusters use enhanced VPC routing to keep data within a private network.", "metadata": {"threat_id": "REDSHIFT_020", "threat_name": "Lack of Enhanced VPC Routing in Redshift", "source": "An external client or an AWS service", "target": "AWS RedShift"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS RedShift\nThreat: Redshift Clusters Without Automatic Snapshots\nDescription: Redshift clusters without automatic snapshots may result in data loss in case of failure or accidental deletion.\nMitigation: Ensure Amazon Redshift clusters have automatic snapshots enabled to provide data recovery options.", "metadata": {"threat_id": "RS_002", "threat_name": "Redshift Clusters Without Automatic Snapshots", "source": "An external client or an AWS service", "target": "AWS RedShift"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Route 53\nThreat: Missing Transfer Lock in Route 53\nDescription: Domains without transfer lock protection are susceptible to unauthorized transfers.\nMitigation: Ensure Route 53 domains have transfer lock protection.", "metadata": {"threat_id": "Route53_038", "threat_name": "Missing Transfer Lock in Route 53", "source": "An external client or an AWS service", "target": "AWS Route 53"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Route 53\nThreat: Route 53 A Record Missing Attached Resource\nDescription: A Route 53 A record without an attached resource may lead to unreachable services and DNS misconfigurations.\nMitigation: Ensure that every Route 53 A record has a valid attached resource to maintain DNS integrity.", "metadata": {"threat_id": "Route53_076", "threat_name": "Route 53 A Record Missing Attached Resource", "source": "An external client or an AWS service", "target": "AWS Route 53"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Route 53\nThreat: Lack of DNSSEC Signing in Route 53\nDescription: Without DNSSEC signing, DNS responses can be forged or manipulated, leading to security risks such as DNS spoofing or cache poisoning.\nMitigation: Enable Domain Name System Security Extensions (DNSSEC) signing for all public hosted zones in Amazon Route 53.", "metadata": {"threat_id": "ROUTE53_001", "threat_name": "Lack of DNSSEC Signing in Route 53", "source": "An external client or an AWS service", "target": "AWS Route 53"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Route 53\nThreat: Lack of DNS Query Logging\nDescription: Without DNS query logging, organizations lack visibility into potential DNS-based attacks, misconfigurations, or unusual query activity.\nMitigation: Ensure Domain Name System (DNS) query logging is enabled for Amazon Route 53 hosted zones to monitor DNS traffic.", "metadata": {"threat_id": "ROUTE53_002", "threat_name": "Lack of DNS Query Logging", "source": "An external client or an AWS service", "target": "AWS Route 53"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS S3\nThreat: S3 Bucket Without Access Logging\nDescription: S3 buckets without access logging enabled lack visibility into access patterns and potential unauthorized access attempts.\nMitigation: Enable S3 access logging to capture detailed access records and monitor unauthorized access attempts.", "metadata": {"threat_id": "S3_015", "threat_name": "S3 Bucket Without Access Logging", "source": "An external client or an AWS service", "target": "AWS S3"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS S3\nThreat: S3 Bucket Without Server-Side Encryption\nDescription: S3 buckets without server-side encryption expose data to unauthorized access if compromised.\nMitigation: Enable S3 bucket server-side encryption (SSE) using AWS KMS or AES-256 to protect data at rest.", "metadata": {"threat_id": "S3_016", "threat_name": "S3 Bucket Without Server-Side Encryption", "source": "An external client or an AWS service", "target": "AWS S3"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS S3\nThreat: S3 Bucket Allows Public Read Access\nDescription: S3 buckets with public READ permissions expose stored objects to unauthorized access, leading to potential data leaks.\nMitigation: Ensure S3 bucket policies and ACLs restrict public access. Use AWS IAM policies to enforce strict access control.", "metadata": {"threat_id": "S3_017", "threat_name": "S3 Bucket Allows Public Read Access", "source": "An external client or an AWS service", "target": "AWS S3"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS S3\nThreat: S3 Bucket Allows Public Read Access via ACL\nDescription: S3 buckets with ACLs that allow public READ access expose stored objects to unauthorized access, leading to potential data leaks.\nMitigation: Ensure S3 bucket ACLs do not allow public READ access. Use IAM policies and bucket policies to enforce strict access control.", "metadata": {"threat_id": "S3_018", "threat_name": "S3 Bucket Allows Public Read Access via ACL", "source": "An external client or an AWS service", "target": "AWS S3"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS S3\nThreat: S3 Bucket Without Versioning\nDescription: S3 buckets without versioning enabled risk accidental data deletion or modification without the ability to recover previous versions.\nMitigation: Enable S3 bucket versioning to ensure previous versions of objects are retained and recoverable in case of accidental deletion or modification.", "metadata": {"threat_id": "S3_019", "threat_name": "S3 Bucket Without Versioning", "source": "An external client or an AWS service", "target": "AWS S3"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS S3\nThreat: S3 Bucket Allows Public ACLs\nDescription: S3 buckets that do not have block public ACLs enabled may allow unauthorized public access, leading to potential data exposure.\nMitigation: Enable the 'Block Public ACLs' setting on S3 buckets to prevent public access configurations.", "metadata": {"threat_id": "S3_018", "threat_name": "S3 Bucket Allows Public ACLs", "source": "An external client or an AWS service", "target": "AWS S3"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS S3\nThreat: S3 Bucket Allows Public ACLs\nDescription: S3 buckets without block public ACLs enabled can be misconfigured to allow unauthorized access, leading to data leaks.\nMitigation: Ensure S3 bucket public access is restricted by enabling 'Block Public ACLs' to prevent accidental public exposure.", "metadata": {"threat_id": "S3_019", "threat_name": "S3 Bucket Allows Public ACLs", "source": "An external client or an AWS service", "target": "AWS S3"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS S3\nThreat: S3 Bucket Allows Public Policies\nDescription: S3 buckets without 'Block Public Policy' enabled may allow unauthorized users to apply public policies, leading to unintended data exposure.\nMitigation: Enable the 'Block Public Policy' setting on S3 buckets to prevent users from applying public policies that expose data.", "metadata": {"threat_id": "S3_020", "threat_name": "S3 Bucket Allows Public Policies", "source": "An external client or an AWS service", "target": "AWS S3"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS S3\nThreat: S3 Bucket Allows Public Policies\nDescription: S3 buckets without 'Block Public Policy' enabled may allow public policies that expose sensitive data.\nMitigation: Ensure 'Block Public Policy' is enabled in S3 public access block settings to prevent unintended data exposure.", "metadata": {"threat_id": "S3_021", "threat_name": "S3 Bucket Allows Public Policies", "source": "An external client or an AWS service", "target": "AWS S3"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS S3\nThreat: S3 Bucket Does Not Ignore Public ACLs\nDescription: S3 buckets without 'Ignore Public ACLs' enabled may inherit public permissions from ACLs, leading to potential data exposure.\nMitigation: Enable the 'Ignore Public ACLs' setting on S3 buckets to prevent public ACLs from granting unintended access.", "metadata": {"threat_id": "S3_022", "threat_name": "S3 Bucket Does Not Ignore Public ACLs", "source": "An external client or an AWS service", "target": "AWS S3"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS S3\nThreat: S3 Bucket Does Not Ignore Public ACLs\nDescription: S3 buckets that do not have 'Ignore Public ACLs' enabled may allow unauthorized users to gain access through ACL configurations.\nMitigation: Ensure 'Ignore Public ACLs' is enabled in S3 public access block settings to restrict public ACLs.", "metadata": {"threat_id": "S3_023", "threat_name": "S3 Bucket Does Not Ignore Public ACLs", "source": "An external client or an AWS service", "target": "AWS S3"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS S3\nThreat: S3 Bucket Does Not Restrict Public Access\nDescription: S3 buckets without 'Restrict Public Buckets' enabled may allow public access to stored objects, leading to potential data leaks.\nMitigation: Enable the 'Restrict Public Buckets' setting on S3 buckets to prevent unauthorized access to bucket contents.", "metadata": {"threat_id": "S3_024", "threat_name": "S3 Bucket Does Not Restrict Public Access", "source": "An external client or an AWS service", "target": "AWS S3"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS S3\nThreat: S3 Bucket Does Not Restrict Public Buckets\nDescription: S3 buckets without 'Restrict Public Buckets' enabled may allow unintended public access, increasing the risk of data exposure.\nMitigation: Enable the 'Restrict Public Buckets' setting in S3 public access block configurations to prevent unauthorized access.", "metadata": {"threat_id": "S3_025", "threat_name": "S3 Bucket Does Not Restrict Public Buckets", "source": "An external client or an AWS service", "target": "AWS S3"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS S3\nThreat: S3 Bucket Allows Public WRITE Access\nDescription: S3 buckets that allow WRITE permissions to everyone could enable unauthorized users to upload or modify content, leading to data integrity issues and potential malware injection.\nMitigation: Ensure the S3 bucket does not allow public WRITE access by configuring bucket policies and ACLs appropriately.", "metadata": {"threat_id": "S3_026", "threat_name": "S3 Bucket Allows Public WRITE Access", "source": "An external client or an AWS service", "target": "AWS S3"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS S3\nThreat: S3 Bucket Has Public WRITE Access ACL\nDescription: S3 buckets with ACLs that allow public WRITE access expose stored objects to unauthorized modifications, increasing the risk of data corruption or malicious uploads.\nMitigation: Ensure S3 bucket ACLs do not allow public WRITE access. Use IAM policies and bucket policies to enforce strict access control.", "metadata": {"threat_id": "S3_027", "threat_name": "S3 Bucket Has Public WRITE Access ACL", "source": "An external client or an AWS service", "target": "AWS S3"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS S3\nThreat: S3 Bucket Has Public WRITE Access ACL\nDescription: S3 bucket ACLs allowing public WRITE access can lead to unauthorized data modifications, posing a security risk.\nMitigation: Ensure S3 bucket ACLs do not allow public WRITE access. Restrict permissions using IAM policies and S3 bucket policies.", "metadata": {"threat_id": "S3_028", "threat_name": "S3 Bucket Has Public WRITE Access ACL", "source": "An external client or an AWS service", "target": "AWS S3"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS S3\nThreat: S3 Bucket Allows Actions with Any Principal\nDescription: S3 bucket policies allowing actions for any principal ('*') create a risk of unauthorized access and potential data exposure.\nMitigation: Ensure S3 bucket policies restrict actions to specific principals, following the principle of least privilege.", "metadata": {"threat_id": "S3_029", "threat_name": "S3 Bucket Allows Actions with Any Principal", "source": "An external client or an AWS service", "target": "AWS S3"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS S3\nThreat: S3 Bucket Allows Actions with Any Principal\nDescription: S3 bucket policies that do not restrict actions to specific principals allow unauthorized entities to access bucket contents.\nMitigation: Ensure S3 bucket policies define explicit IAM principals instead of using wildcard ('*') permissions.", "metadata": {"threat_id": "S3_030", "threat_name": "S3 Bucket Allows Actions with Any Principal", "source": "An external client or an AWS service", "target": "AWS S3"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS S3\nThreat: S3 Bucket Policy Locks Out All But Root User\nDescription: S3 bucket policies that lock out all users except the root account create an operational risk, requiring root account intervention for policy fixes.\nMitigation: Ensure that S3 bucket policies allow designated IAM users and roles appropriate access to avoid reliance on the root account.", "metadata": {"threat_id": "S3_031", "threat_name": "S3 Bucket Policy Locks Out All But Root User", "source": "An external client or an AWS service", "target": "AWS S3"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS S3\nThreat: S3 Bucket Policy Locks Out All But Root User\nDescription: S3 bucket policies that restrict access to only the root user may lead to lockout scenarios, requiring escalated privilege intervention to restore access.\nMitigation: Ensure S3 bucket policies allow appropriate IAM users and roles to manage bucket access securely.", "metadata": {"threat_id": "S3_032", "threat_name": "S3 Bucket Policy Locks Out All But Root User", "source": "An external client or an AWS service", "target": "AWS S3"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS S3\nThreat: S3 Bucket Without Lock Configuration Enabled\nDescription: S3 buckets that do not have object lock configuration enabled may be susceptible to accidental deletions or unauthorized modifications, leading to data integrity issues.\nMitigation: Enable object lock configuration on S3 buckets to prevent accidental deletions and ensure compliance with retention policies.", "metadata": {"threat_id": "S3_015", "threat_name": "S3 Bucket Without Lock Configuration Enabled", "source": "An external client or an AWS service", "target": "AWS S3"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS S3\nThreat: S3 Bucket Without Cross-Region Replication Enabled\nDescription: S3 buckets without cross-region replication may face data loss risks in case of regional failures, limiting data redundancy and availability.\nMitigation: Enable cross-region replication (CRR) on S3 buckets to enhance data redundancy and disaster recovery preparedness.", "metadata": {"threat_id": "S3_016", "threat_name": "S3 Bucket Without Cross-Region Replication Enabled", "source": "An external client or an AWS service", "target": "AWS S3"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS S3\nThreat: S3 Buckets Not Encrypted with KMS by Default\nDescription: S3 buckets that are not encrypted using AWS KMS by default may store sensitive data without adequate protection, increasing the risk of unauthorized access.\nMitigation: Ensure that S3 buckets are encrypted using AWS KMS as the default encryption method to enhance security and compliance.", "metadata": {"threat_id": "S3_017", "threat_name": "S3 Buckets Not Encrypted with KMS by Default", "source": "An external client or an AWS service", "target": "AWS S3"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS S3\nThreat: S3 Object Copy Not Encrypted with KMS\nDescription: S3 objects copied without KMS encryption may be stored in an unprotected manner, increasing the risk of unauthorized access.\nMitigation: Ensure that S3 object copies are encrypted using AWS KMS CMK to protect data during transfer and storage.", "metadata": {"threat_id": "S3_015", "threat_name": "S3 Object Copy Not Encrypted with KMS", "source": "An external client or an AWS service", "target": "AWS S3"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS S3\nThreat: S3 Bucket Object Not Encrypted with KMS\nDescription: S3 bucket objects that are not encrypted using AWS KMS CMK may be vulnerable to unauthorized access and data breaches.\nMitigation: Ensure that all S3 bucket objects are encrypted using AWS KMS CMK to enhance security and compliance.", "metadata": {"threat_id": "S3_016", "threat_name": "S3 Bucket Object Not Encrypted with KMS", "source": "An external client or an AWS service", "target": "AWS S3"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS S3\nThreat: Unconfigured Lifecycle Policy for Failed Uploads\nDescription: S3 buckets without lifecycle configurations to abort failed uploads may accumulate unnecessary storage costs and expose stale data.\nMitigation: Ensure S3 lifecycle policies set a defined period for aborting failed uploads.", "metadata": {"threat_id": "S3_007", "threat_name": "Unconfigured Lifecycle Policy for Failed Uploads", "source": "An external client or an AWS service", "target": "AWS S3"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS S3\nThreat: S3 Bucket Global View ACL Permissions\nDescription: S3 buckets with global view ACL permissions may expose sensitive data to unauthorized access.\nMitigation: Ensure AWS S3 bucket does not have global view ACL permissions enabled.", "metadata": {"threat_id": "S3_036", "threat_name": "S3 Bucket Global View ACL Permissions", "source": "An external client or an AWS service", "target": "AWS S3"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS S3\nThreat: S3 Bucket Without Secure Data Transport Policy\nDescription: S3 buckets without secure data transport policies may allow unencrypted data transfers, increasing the risk of data interception.\nMitigation: Ensure AWS S3 bucket is configured with a secure data transport policy.", "metadata": {"threat_id": "S3_040", "threat_name": "S3 Bucket Without Secure Data Transport Policy", "source": "An external client or an AWS service", "target": "AWS S3"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS S3\nThreat: S3 Bucket Without Public Access Block\nDescription: S3 buckets without public access block enabled may be at risk of accidental public exposure of sensitive data.\nMitigation: Ensure that all S3 buckets have a Public Access Block to restrict unauthorized access.", "metadata": {"threat_id": "S3_056", "threat_name": "S3 Bucket Without Public Access Block", "source": "An external client or an AWS service", "target": "AWS S3"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS S3\nThreat: S3 Public Access Block Not Configured\nDescription: Without a Public Access Block, an S3 bucket may be inadvertently exposed to public access, increasing the risk of data breaches.\nMitigation: Ensure that all S3 buckets are configured with a Public Access Block to prevent unauthorized access.", "metadata": {"threat_id": "S3_057", "threat_name": "S3 Public Access Block Not Configured", "source": "An external client or an AWS service", "target": "AWS S3"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS S3\nThreat: S3 Bucket ACL Allows Access to All Authenticated Users\nDescription: S3 buckets with ACLs that allow access to 'All Authenticated Users' can lead to unauthorized data exposure.\nMitigation: Restrict bucket ACLs to only allow access to specific IAM roles, users, or accounts, ensuring data is not broadly accessible.", "metadata": {"threat_id": "S3_401", "threat_name": "S3 Bucket ACL Allows Access to All Authenticated Users", "source": "An external client or an AWS service", "target": "AWS S3"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS S3\nThreat: S3 Bucket Allows Access to All Authenticated Users\nDescription: S3 buckets with ACLs that allow access to 'All Authenticated Users' may expose sensitive data to unintended AWS accounts.\nMitigation: Restrict bucket ACLs to only allow access to specific IAM roles, users, or accounts, and use bucket policies for fine-grained access control.", "metadata": {"threat_id": "S3_015", "threat_name": "S3 Bucket Allows Access to All Authenticated Users", "source": "An external client or an AWS service", "target": "AWS S3"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS S3\nThreat: S3 Bucket Without Lifecycle Configuration\nDescription: S3 buckets without lifecycle policies may accumulate unused or obsolete data, leading to increased storage costs and security risks.\nMitigation: Enable and enforce S3 lifecycle policies to automatically manage and expire older object versions.", "metadata": {"threat_id": "S3_019", "threat_name": "S3 Bucket Without Lifecycle Configuration", "source": "An external client or an AWS service", "target": "AWS S3"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS S3\nThreat: Missing S3 Event Notifications\nDescription: S3 buckets without event notifications may result in security events, data modifications, or deletions going unnoticed.\nMitigation: Ensure event notifications are enabled to trigger alerts or automation when changes occur in the bucket.", "metadata": {"threat_id": "S3_020", "threat_name": "Missing S3 Event Notifications", "source": "An external client or an AWS service", "target": "AWS S3"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS S3\nThreat: S3 Buckets with Enabled Access Control Lists (ACLs)\nDescription: S3 buckets using ACLs instead of bucket policies may lead to unintended exposure and misconfiguration risks.\nMitigation: Disable access control lists (ACLs) and enforce fine-grained access control using bucket policies.", "metadata": {"threat_id": "S3_023", "threat_name": "S3 Buckets with Enabled Access Control Lists (ACLs)", "source": "An external client or an AWS service", "target": "AWS S3"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS S3\nThreat: S3 Account-Level Public Access Block Disabled\nDescription: Not enabling Public Access Blocks at the account level can result in accidental exposure of newly created buckets or objects.\nMitigation: Enable account-level public access block to enforce no public exposure by default for all S3 buckets in the account.", "metadata": {"threat_id": "SEC_033", "threat_name": "S3 Account-Level Public Access Block Disabled", "source": "An external client or an AWS service", "target": "AWS S3"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS S3\nThreat: S3 Bucket Logging Disabled\nDescription: Without server access logs, suspicious activity remains undiscovered, hindering post-incident analysis.\nMitigation: Enable S3 access logging to an appropriate bucket, ensuring thorough records of access events.", "metadata": {"threat_id": "SEC_034", "threat_name": "S3 Bucket Logging Disabled", "source": "An external client or an AWS service", "target": "AWS S3"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS S3\nThreat: S3 Account-Level Public Access\nDescription: Allowing public access at the account level can expose all S3 buckets and objects to the internet, risking unauthorized data reads/writes.\nMitigation: Enable account-level S3 Public Access Blocks to prevent buckets and objects from being publicly accessible by default.", "metadata": {"threat_id": "STORAGE_011", "threat_name": "S3 Account-Level Public Access", "source": "An external client or an AWS service", "target": "AWS S3"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS S3\nThreat: S3 Bucket ACL Usage\nDescription: If ACLs are used and not strictly controlled, they may allow unauthorized users to read or write data, leading to potential data leakage or tampering.\nMitigation: Prohibit or restrict ACL usage, using bucket policies and IAM instead for granular, auditable access control.", "metadata": {"threat_id": "STORAGE_012", "threat_name": "S3 Bucket ACL Usage", "source": "An external client or an AWS service", "target": "AWS S3"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS S3\nThreat: S3 Default Lock Not Enabled\nDescription: Without object lock, important objects can be overwritten or deleted, causing permanent data loss.\nMitigation: Enable S3 Object Lock in compliance or governance mode to prevent object version deletions for a specified retention period.", "metadata": {"threat_id": "STORAGE_013", "threat_name": "S3 Default Lock Not Enabled", "source": "An external client or an AWS service", "target": "AWS S3"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS S3\nThreat: S3 Bucket Level Public Access\nDescription: A bucket configured for public access could expose sensitive data or allow unauthorized parties to upload or modify objects.\nMitigation: Disable public bucket-level access and use strict IAM policies and access point configurations for private data handling.", "metadata": {"threat_id": "STORAGE_014", "threat_name": "S3 Bucket Level Public Access", "source": "An external client or an AWS service", "target": "AWS S3"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS S3\nThreat: S3 Bucket Logging Disabled\nDescription: If S3 server access logging is not enabled, unauthorized activity on the bucket remains untracked, hindering investigations and forensics.\nMitigation: Enable server access logs for S3 buckets to track all requests and integrate logs with security monitoring solutions.", "metadata": {"threat_id": "STORAGE_015", "threat_name": "S3 Bucket Logging Disabled", "source": "An external client or an AWS service", "target": "AWS S3"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS S3\nThreat: Overly Permissive Bucket Policy\nDescription: A bucket policy that grants overly permissive access, such as to any AWS account or public principal, risks data exposure or tampering.\nMitigation: Restrict bucket policy principals and actions to the minimum necessary, removing wildcard or public entries.", "metadata": {"threat_id": "STORAGE_016", "threat_name": "Overly Permissive Bucket Policy", "source": "An external client or an AWS service", "target": "AWS S3"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS S3\nThreat: Public Read Enabled\nDescription: Buckets or objects allowed for public read can leak sensitive information or intellectual property, exposing data to unauthorized viewers.\nMitigation: Set the bucket policy to explicitly deny public reads, and rely on IAM roles or user-based access for legitimate read requests.", "metadata": {"threat_id": "STORAGE_017", "threat_name": "Public Read Enabled", "source": "An external client or an AWS service", "target": "AWS S3"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS S3\nThreat: Public Write Enabled\nDescription: With public write, attackers can upload malicious or illegal content, overwrite existing files, or conduct data sabotage.\nMitigation: Disable public write permissions via bucket policy, ACL, or access blocks, restricting upload rights to authorized principals.", "metadata": {"threat_id": "STORAGE_018", "threat_name": "Public Write Enabled", "source": "An external client or an AWS service", "target": "AWS S3"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS S3\nThreat: Replication Not Enabled\nDescription: Buckets without replication risk data loss or unavailability if the primary region or underlying infrastructure fails.\nMitigation: Configure cross-region replication for critical data to maintain multiple copies across different AWS regions.", "metadata": {"threat_id": "STORAGE_019", "threat_name": "Replication Not Enabled", "source": "An external client or an AWS service", "target": "AWS S3"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS S3\nThreat: Server-Side Encryption Disabled\nDescription: Unencrypted S3 objects can be viewed by unauthorized actors if the storage layer is compromised.\nMitigation: Enable server-side encryption (SSE) with SSE-S3 or SSE-KMS to protect data at rest and control encryption keys.", "metadata": {"threat_id": "STORAGE_020", "threat_name": "Server-Side Encryption Disabled", "source": "An external client or an AWS service", "target": "AWS S3"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS S3\nThreat: HTTP Requests Allowed to S3 Bucket\nDescription: Permitting insecure (HTTP) connections can allow eavesdroppers to read or modify data in transit between clients and S3.\nMitigation: Require SSL/TLS (HTTPS) for all bucket access and block insecure connections at the bucket policy level.", "metadata": {"threat_id": "STORAGE_021", "threat_name": "HTTP Requests Allowed to S3 Bucket", "source": "An external client or an AWS service", "target": "AWS S3"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS S3\nThreat: No Versioning Enabled\nDescription: Buckets without versioning lose historical versions of objects, making it difficult to recover from unintended deletions or modifications.\nMitigation: Enable versioning on S3 buckets to preserve older object versions and facilitate recovery from overwrites or deletions.", "metadata": {"threat_id": "STORAGE_022", "threat_name": "No Versioning Enabled", "source": "An external client or an AWS service", "target": "AWS S3"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS S3\nThreat: Missing KMS-Based Encryption by Default\nDescription: If S3 default encryption using KMS is disabled, new uploads may remain unencrypted or rely on potentially less secure SSE modes.\nMitigation: Configure S3 default encryption with AWS KMS for fine-grained key management and explicit access controls.", "metadata": {"threat_id": "STORAGE_023", "threat_name": "Missing KMS-Based Encryption by Default", "source": "An external client or an AWS service", "target": "AWS S3"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS S3\nThreat: No Event Notifications Enabled\nDescription: Lacking event notifications means changes to bucket objects (e.g., uploads, deletions) may go undetected, hindering timely responses to suspicious activities.\nMitigation: Enable and route S3 event notifications to AWS Lambda, SNS, or SQS to monitor and react to object-level events in real time.", "metadata": {"threat_id": "STORAGE_024", "threat_name": "No Event Notifications Enabled", "source": "An external client or an AWS service", "target": "AWS S3"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS S3\nThreat: No Lifecycle Policy\nDescription: Without lifecycle policies, unused or older object versions may remain indefinitely, increasing costs and potential exposure of outdated data.\nMitigation: Configure S3 lifecycle rules to transition or expire data based on usage and retention requirements, reducing clutter and risk.", "metadata": {"threat_id": "STORAGE_025", "threat_name": "No Lifecycle Policy", "source": "An external client or an AWS service", "target": "AWS S3"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS S3\nThreat: Unprotected S3 Buckets Not in Backup Plan\nDescription: If S3 resources are not included in a backup plan, objects deleted or overwritten cannot be restored from a backup.\nMitigation: Include critical S3 buckets in AWS Backup or third-party solutions to regularly snapshot and retain copies of stored data.", "metadata": {"threat_id": "STORAGE_026", "threat_name": "Unprotected S3 Buckets Not in Backup Plan", "source": "An external client or an AWS service", "target": "AWS S3"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS S3\nThreat: Account-Level Public Access\nDescription: If account-level public access blocks are not enabled or incorrectly configured (BlockPublicAcls, BlockPublicPolicy, IgnorePublicAcls, RestrictPublicBuckets), newly created buckets could expose data publicly by default.\nMitigation: Enable and enforce S3 account-level public access blocks to prevent unintended public exposures for all buckets.", "metadata": {"threat_id": "S3_001", "threat_name": "Account-Level Public Access", "source": "An external client or an AWS service", "target": "AWS S3"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS S3\nThreat: Bucket ACL Misuse\nDescription: Bucket ACLs can unintentionally grant read/write permissions if configured improperly, allowing attackers or unauthorized users to list or modify data.\nMitigation: Prohibit or limit ACL usage (e.g., S3_BUCKET_ACL_PROHIBITED), relying on bucket policies and IAM for access control.", "metadata": {"threat_id": "S3_002", "threat_name": "Bucket ACL Misuse", "source": "An external client or an AWS service", "target": "AWS S3"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS S3\nThreat: Object Lock Not Enabled\nDescription: Disabling default object lock increases the risk of permanent data loss from overwrites or deletions before they can be reversed.\nMitigation: Enable default bucket lock (S3_BUCKET_DEFAULT_LOCK_ENABLED) to protect against unintended deletions and ensure immutability.", "metadata": {"threat_id": "S3_003", "threat_name": "Object Lock Not Enabled", "source": "An external client or an AWS service", "target": "AWS S3"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS S3\nThreat: Public Bucket Access at Bucket Level\nDescription: If a bucket allows public access at the bucket level, sensitive data may be exposed to anyone online, posing a high risk of data leakage.\nMitigation: Block public bucket policies (S3_BUCKET_LEVEL_PUBLIC_ACCESS_PROHIBITED) and rely on private policies with least-privilege configurations.", "metadata": {"threat_id": "S3_004", "threat_name": "Public Bucket Access at Bucket Level", "source": "An external client or an AWS service", "target": "AWS S3"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS S3\nThreat: Disabled Logging\nDescription: Buckets without logging enabled provide no detailed records of read/write actions, delaying detection of suspicious behavior and complicating investigations.\nMitigation: Enable server access logging (S3_BUCKET_LOGGING_ENABLED) and configure logs to be stored securely for auditing and compliance.", "metadata": {"threat_id": "S3_005", "threat_name": "Disabled Logging", "source": "An external client or an AWS service", "target": "AWS S3"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS S3\nThreat: Public Read Access\nDescription: Allowing public read access can expose sensitive bucket objects to any internet user, leading to potential data leaks.\nMitigation: Prohibit public read access (S3_BUCKET_PUBLIC_READ_PROHIBITED) by using block public access settings, bucket policies, or ACL rules.", "metadata": {"threat_id": "S3_006", "threat_name": "Public Read Access", "source": "An external client or an AWS service", "target": "AWS S3"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS S3\nThreat: Public Write Access\nDescription: A bucket permitting public writes allows attackers to upload malicious content or overwrite legitimate data, potentially leading to sabotage or malicious hosting.\nMitigation: Enable bucket policies or ACLs that prohibit public writes (S3_BUCKET_PUBLIC_WRITE_PROHIBITED).", "metadata": {"threat_id": "S3_007", "threat_name": "Public Write Access", "source": "An external client or an AWS service", "target": "AWS S3"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS S3\nThreat: Replication Not Enabled\nDescription: Without cross-region replication, a regional disaster or corruption event could lead to data loss and disrupted operations.\nMitigation: Enable cross-region replication (S3_BUCKET_REPLICATION_ENABLED) for critical data to maintain copies in different regions.", "metadata": {"threat_id": "S3_008", "threat_name": "Replication Not Enabled", "source": "An external client or an AWS service", "target": "AWS S3"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS S3\nThreat: Execution of Blacklisted S3 Actions\nDescription: Certain sensitive S3 actions (e.g., DeleteBucketPolicy, PutBucketAcl) can compromise security if misused by unauthorized individuals.\nMitigation: Prohibit blacklisted actions (S3_BUCKET_BLACKLISTED_ACTIONS_PROHIBITED) via IAM or bucket policies to prevent unauthorized execution.", "metadata": {"threat_id": "S3_009", "threat_name": "Execution of Blacklisted S3 Actions", "source": "An external client or an AWS service", "target": "AWS S3"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS S3\nThreat: Non-SSL Requests\nDescription: Allowing HTTP connections can leak or corrupt data in transit, exposing object content or credentials.\nMitigation: Enforce HTTPS-only traffic (S3_BUCKET_SSL_REQUESTS_ONLY) to safeguard data and requests from interception or tampering.", "metadata": {"threat_id": "S3_010", "threat_name": "Non-SSL Requests", "source": "An external client or an AWS service", "target": "AWS S3"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS S3\nThreat: No Versioning\nDescription: Without versioning, older versions of objects are overwritten or removed, making it impossible to restore data changes or undo deletions.\nMitigation: Enable bucket versioning (S3_BUCKET_VERSIONING_ENABLED) to preserve object history and recover from accidental overwrites.", "metadata": {"threat_id": "S3_011", "threat_name": "No Versioning", "source": "An external client or an AWS service", "target": "AWS S3"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS S3\nThreat: Unencrypted Bucket or Default Encryption Disabled\nDescription: Storing data unencrypted at rest can expose sensitive information if the storage layer is compromised or incorrectly accessed.\nMitigation: Require default encryption (S3_DEFAULT_ENCRYPTION_KMS or SSE-S3) to ensure all objects are encrypted at rest by default.", "metadata": {"threat_id": "S3_012", "threat_name": "Unencrypted Bucket or Default Encryption Disabled", "source": "An external client or an AWS service", "target": "AWS S3"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS S3\nThreat: No Event Notifications\nDescription: Without event notifications, changes in bucket contents go untracked, delaying detection of malicious uploads or data deletions.\nMitigation: Enable and configure S3 event notifications (S3_EVENT_NOTIFICATIONS_ENABLED) to monitor object-level operations in real time.", "metadata": {"threat_id": "S3_013", "threat_name": "No Event Notifications", "source": "An external client or an AWS service", "target": "AWS S3"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS S3\nThreat: Incomplete Version Lifecycle Policy\nDescription: Buckets storing multiple versions of objects without a lifecycle policy may face high storage costs and accidental use of outdated data.\nMitigation: Enable and enforce version lifecycle policies (S3_VERSION_LIFECYCLE_POLICY_CHECK) to automatically manage or expire older object versions.", "metadata": {"threat_id": "S3_014", "threat_name": "Incomplete Version Lifecycle Policy", "source": "An external client or an AWS service", "target": "AWS S3"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS SES\nThreat: Unsecured SES Configuration Set\nDescription: Without enforcing TLS, emails sent via SES may be susceptible to interception during transmission.\nMitigation: Ensure SES Configuration Set enforces TLS usage to protect email communications.", "metadata": {"threat_id": "SES_025", "threat_name": "Unsecured SES Configuration Set", "source": "An external client or an AWS service", "target": "AWS SES"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS SNS\nThreat: Unencrypted SNS Topic Data\nDescription: SNS topics that store data without encryption expose sensitive messages to unauthorized access and compromise.\nMitigation: Ensure that SNS topics use AWS KMS encryption to protect data at rest.", "metadata": {"threat_id": "SNS_001", "threat_name": "Unencrypted SNS Topic Data", "source": "An external client or an AWS service", "target": "AWS SNS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS SNS\nThreat: Unencrypted SNS Topic Data\nDescription: SNS topics that store data without encryption expose sensitive messages to unauthorized access and compromise.\nMitigation: Ensure that SNS topics use AWS KMS encryption to protect data at rest.", "metadata": {"threat_id": "SNS_002", "threat_name": "Unencrypted SNS Topic Data", "source": "An external client or an AWS service", "target": "AWS SNS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS SNS\nThreat: SNS Topic Policy is Public\nDescription: SNS topic policies that allow public access may enable unauthorized message publishing or subscription, leading to security risks.\nMitigation: Ensure that SNS topic policies restrict access to authorized AWS services or principals to prevent misuse.", "metadata": {"threat_id": "SNS_004", "threat_name": "SNS Topic Policy is Public", "source": "An external client or an AWS service", "target": "AWS SNS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS SQS\nThreat: Unencrypted SQS Queue Data\nDescription: SQS queues that store data without encryption expose messages to unauthorized access and compromise.\nMitigation: Ensure that SQS queues use AWS KMS encryption to protect data at rest.", "metadata": {"threat_id": "SQS_001", "threat_name": "Unencrypted SQS Queue Data", "source": "An external client or an AWS service", "target": "AWS SQS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS SQS\nThreat: Unencrypted SQS Queue Data\nDescription: SQS queues that store data without encryption expose messages to unauthorized access and compromise.\nMitigation: Ensure that SQS queues use AWS KMS encryption to protect data at rest.", "metadata": {"threat_id": "SQS_002", "threat_name": "Unencrypted SQS Queue Data", "source": "An external client or an AWS service", "target": "AWS SQS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS SQS\nThreat: Overly Permissive SQS Queue Policy\nDescription: SQS queue policies that allow all ('*') actions grant excessive permissions, increasing the risk of unauthorized access and abuse.\nMitigation: Ensure SQS queue policies specify only required actions and restrict access to trusted principals.", "metadata": {"threat_id": "SQS_001", "threat_name": "Overly Permissive SQS Queue Policy", "source": "An external client or an AWS service", "target": "AWS SQS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS SQS\nThreat: SQS Queue Policy is Public\nDescription: SQS queue policies that allow public access may expose messages to unauthorized users, leading to potential data leaks or misuse.\nMitigation: Ensure that SQS queue policies allow access only to specific AWS services or principals to prevent unauthorized access.", "metadata": {"threat_id": "SQS_005", "threat_name": "SQS Queue Policy is Public", "source": "An external client or an AWS service", "target": "AWS SQS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS SQS\nThreat: SQS Encryption Uses Default AWS Keys\nDescription: Using AWS default keys for SQS encryption may result in a lack of fine-grained control over data access and key management.\nMitigation: Ensure that SQS queues are encrypted using Customer Managed Keys (CMKs) instead of AWS default keys.", "metadata": {"threat_id": "SQS_031", "threat_name": "SQS Encryption Uses Default AWS Keys", "source": "An external client or an AWS service", "target": "AWS SQS"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS SSM\nThreat: Unencrypted SSM Parameters\nDescription: SSM parameters that are not encrypted may expose sensitive configuration data in plaintext.\nMitigation: Ensure SSM parameters are encrypted using KMS CMK to protect sensitive information.", "metadata": {"threat_id": "SSM_038", "threat_name": "Unencrypted SSM Parameters", "source": "An external client or an AWS service", "target": "AWS SSM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS SSM\nThreat: Unencrypted SSM Parameters\nDescription: SSM parameters that are not encrypted may expose sensitive configuration data in plaintext.\nMitigation: Ensure SSM parameters are encrypted using KMS CMK to protect sensitive information.", "metadata": {"threat_id": "SSM_038", "threat_name": "Unencrypted SSM Parameters", "source": "An external client or an AWS service", "target": "AWS SSM"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS SageMaker\nThreat: Unencrypted SageMaker Notebook Storage\nDescription: SageMaker notebook instances that do not use KMS CMK encryption expose sensitive ML models, training data, and logs to unauthorized access if compromised.\nMitigation: Ensure all SageMaker notebook instances use AWS KMS CMK encryption to protect data at rest.", "metadata": {"threat_id": "SAGEMAKER_001", "threat_name": "Unencrypted SageMaker Notebook Storage", "source": "An external client or an AWS service", "target": "AWS SageMaker"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS SageMaker\nThreat: Unencrypted Sagemaker Endpoint Data\nDescription: Sagemaker endpoints that do not use encryption at rest expose stored model data and inference results to unauthorized access and potential data breaches.\nMitigation: Ensure Sagemaker endpoints are configured with encryption at rest using AWS KMS to protect sensitive data.", "metadata": {"threat_id": "SAGEMAKER_001", "threat_name": "Unencrypted Sagemaker Endpoint Data", "source": "An external client or an AWS service", "target": "AWS SageMaker"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS SageMaker\nThreat: SageMaker Notebook Instance with Direct Internet Access Enabled\nDescription: Amazon SageMaker Notebook instances with direct internet access enabled expose the environment to potential external threats and unauthorized access.\nMitigation: Ensure that direct internet access is disabled for SageMaker Notebook instances by configuring them to use VPC-only mode.", "metadata": {"threat_id": "SAGEMAKER_003", "threat_name": "SageMaker Notebook Instance with Direct Internet Access Enabled", "source": "An external client or an AWS service", "target": "AWS SageMaker"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS SageMaker\nThreat: SageMaker Domain and Notebook Instance Not Encrypted with KMS\nDescription: SageMaker domains and notebook instances that are not encrypted using AWS KMS CMK may store sensitive machine learning data in an unprotected manner, increasing security risks.\nMitigation: Ensure that AWS SageMaker domains and notebook instances are encrypted using AWS KMS CMK to enhance security and compliance.", "metadata": {"threat_id": "SAGEMAKER_002", "threat_name": "SageMaker Domain and Notebook Instance Not Encrypted with KMS", "source": "An external client or an AWS service", "target": "AWS SageMaker"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS SageMaker\nThreat: SageMaker Domain and Notebook Instance Not Encrypted with KMS\nDescription: SageMaker domains and notebook instances that are not encrypted using AWS KMS CMK may store sensitive machine learning data in an unprotected manner, increasing security risks.\nMitigation: Ensure that AWS SageMaker domains and notebook instances are encrypted using AWS KMS CMK to enhance security and compliance.", "metadata": {"threat_id": "SAGEMAKER_003", "threat_name": "SageMaker Domain and Notebook Instance Not Encrypted with KMS", "source": "An external client or an AWS service", "target": "AWS SageMaker"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS SageMaker\nThreat: SageMaker Notebook Instance Launched in Default VPC\nDescription: SageMaker notebook instances launched in the default VPC may be accessible from outside the intended network boundary.\nMitigation: Ensure SageMaker notebook instances are launched in a custom VPC with proper security controls.", "metadata": {"threat_id": "SAGEMAKER_003", "threat_name": "SageMaker Notebook Instance Launched in Default VPC", "source": "An external client or an AWS service", "target": "AWS SageMaker"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS SageMaker\nThreat: Root Access to SageMaker Notebook Instances\nDescription: Allowing users root access to SageMaker notebook instances may lead to unauthorized modifications and security risks.\nMitigation: Ensure SageMaker users do not have root access to notebook instances.", "metadata": {"threat_id": "SAGEMAKER_004", "threat_name": "Root Access to SageMaker Notebook Instances", "source": "An external client or an AWS service", "target": "AWS SageMaker"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS SageMaker\nThreat: Unencrypted SageMaker Data Quality Job Artifacts\nDescription: SageMaker Data Quality Job artifacts that are not encrypted with KMS may be vulnerable to unauthorized access.\nMitigation: Ensure Amazon SageMaker Data Quality Job uses KMS to encrypt model artifacts to protect sensitive data.", "metadata": {"threat_id": "SageMaker_027", "threat_name": "Unencrypted SageMaker Data Quality Job Artifacts", "source": "An external client or an AWS service", "target": "AWS SageMaker"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS SageMaker\nThreat: Unencrypted SageMaker Data Quality Job Storage\nDescription: Amazon SageMaker Data Quality Jobs that do not use KMS encryption for attached storage volumes may expose sensitive data to unauthorized access.\nMitigation: Ensure Amazon SageMaker Data Quality Job uses KMS to encrypt data on attached storage volume.", "metadata": {"threat_id": "SageMaker_028", "threat_name": "Unencrypted SageMaker Data Quality Job Storage", "source": "An external client or an AWS service", "target": "AWS SageMaker"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS SageMaker\nThreat: Unencrypted Communication in SageMaker Monitoring Jobs\nDescription: Without encryption, communications between instances used for monitoring jobs in Amazon SageMaker may be vulnerable to interception.\nMitigation: Ensure Amazon SageMaker Data Quality Job encrypts all communications between instances used for monitoring jobs.", "metadata": {"threat_id": "SageMaker_029", "threat_name": "Unencrypted Communication in SageMaker Monitoring Jobs", "source": "An external client or an AWS service", "target": "AWS SageMaker"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS SageMaker\nThreat: SageMaker Model Without Network Isolation\nDescription: If network isolation is not enforced, a SageMaker model may have unintended access to external resources, increasing security risks.\nMitigation: Ensure Amazon SageMaker model uses network isolation to prevent unauthorized access.", "metadata": {"threat_id": "SageMaker_030", "threat_name": "SageMaker Model Without Network Isolation", "source": "An external client or an AWS service", "target": "AWS SageMaker"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS SageMaker\nThreat: IMDSv1 Usage in SageMaker Notebook Instance\nDescription: Using Instance Metadata Service v1 (IMDSv1) in SageMaker Notebook Instances increases the risk of metadata exposure via SSRF attacks.\nMitigation: Ensure Amazon SageMaker Notebook Instance only allows for IMDSv2.", "metadata": {"threat_id": "SageMaker_031", "threat_name": "IMDSv1 Usage in SageMaker Notebook Instance", "source": "An external client or an AWS service", "target": "AWS SageMaker"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS SageMaker\nThreat: Unencrypted SageMaker Flow Definition Outputs\nDescription: If KMS is not used for output configurations, SageMaker Flow Definition outputs may be vulnerable to unauthorized access.\nMitigation: Ensure Amazon SageMaker Flow Definition uses KMS for output configurations.", "metadata": {"threat_id": "SageMaker_032", "threat_name": "Unencrypted SageMaker Flow Definition Outputs", "source": "An external client or an AWS service", "target": "AWS SageMaker"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS SageMaker\nThreat: Overly Permissive SageMaker Notebook IAM Policy\nDescription: IAM policies attached to SageMaker notebooks with excessive permissions may allow privilege escalation or unauthorized access.\nMitigation: Apply the principle of least privilege by restricting IAM permissions for SageMaker notebook instances.", "metadata": {"threat_id": "IAM_025", "threat_name": "Overly Permissive SageMaker Notebook IAM Policy", "source": "An external client or an AWS service", "target": "AWS SageMaker"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS SageMaker\nThreat: Unencrypted Endpoint Configuration\nDescription: Without a KMS key configured for the SageMaker endpoint, data at rest may be unprotected and vulnerable to unauthorized access.\nMitigation: Encrypt endpoint data using an AWS KMS customer-managed key to ensure secure storage and restricted access.", "metadata": {"threat_id": "SM_001", "threat_name": "Unencrypted Endpoint Configuration", "source": "An external client or an AWS service", "target": "AWS SageMaker"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS SageMaker\nThreat: Unencrypted Notebook Instance Data\nDescription: If a SageMaker notebook instance lacks KMS-based encryption, sensitive data stored locally or in logs could be compromised.\nMitigation: Configure a KMS key for notebook storage to protect data at rest and control key access policies.", "metadata": {"threat_id": "SM_002", "threat_name": "Unencrypted Notebook Instance Data", "source": "An external client or an AWS service", "target": "AWS SageMaker"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS SageMaker\nThreat: Direct Internet Access on Notebook\nDescription: A notebook instance accessible directly from the internet increases the risk of unauthorized access, data exfiltration, and potential compromise.\nMitigation: Disable direct internet access and run the notebook in a private subnet within a VPC, restricting incoming and outgoing connections.", "metadata": {"threat_id": "SM_003", "threat_name": "Direct Internet Access on Notebook", "source": "An external client or an AWS service", "target": "AWS SageMaker"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Secrets Manager\nThreat: Secrets Manager Secret Not Encrypted Using KMS CMK\nDescription: Secrets stored in AWS Secrets Manager without encryption using AWS KMS CMK may be at risk of unauthorized access or leakage.\nMitigation: Ensure that all secrets in AWS Secrets Manager are encrypted using AWS KMS CMK to enhance security and compliance.", "metadata": {"threat_id": "SECRETSMANAGER_003", "threat_name": "Secrets Manager Secret Not Encrypted Using KMS CMK", "source": "An external client or an AWS service", "target": "AWS Secrets Manager"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Secrets Manager\nThreat: Stale Secrets in AWS Secrets Manager\nDescription: AWS Secrets Manager secrets that are not rotated within 90 days may become vulnerable to compromise due to prolonged exposure.\nMitigation: Ensure Secrets Manager secrets are configured for automatic rotation within 90 days.", "metadata": {"threat_id": "SECRETS_001", "threat_name": "Stale Secrets in AWS Secrets Manager", "source": "An external client or an AWS service", "target": "AWS Secrets Manager"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Secrets Manager\nThreat: Secrets Manager Secrets Without Automatic Rotation\nDescription: Secrets stored in AWS Secrets Manager that are not automatically rotated may lead to credential leakage and long-term security risks.\nMitigation: Enable automatic secret rotation in AWS Secrets Manager to regularly update and secure credentials.", "metadata": {"threat_id": "SEC_015", "threat_name": "Secrets Manager Secrets Without Automatic Rotation", "source": "An external client or an AWS service", "target": "AWS Secrets Manager"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Secrets Manager\nThreat: Secrets Not Rotated\nDescription: Secrets not configured for rotation can become stale, increasing the risk of unauthorized disclosure or misuse.\nMitigation: Enable rotation in Secrets Manager and configure rotation intervals to meet compliance requirements.", "metadata": {"threat_id": "AWS_SM_001", "threat_name": "Secrets Not Rotated", "source": "An external client or an AWS service", "target": "AWS Secrets Manager"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Secrets Manager\nThreat: Failed Scheduled Rotation\nDescription: If a scheduled rotation fails (e.g., due to rotation function errors), secrets remain unrotated and vulnerable.\nMitigation: Monitor scheduled rotation status, ensure rotation Lambda is properly configured and has required permissions.", "metadata": {"threat_id": "AWS_SM_002", "threat_name": "Failed Scheduled Rotation", "source": "An external client or an AWS service", "target": "AWS Secrets Manager"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Secrets Manager\nThreat: Overdue Secrets Rotation\nDescription: Secrets exceeding the maximum recommended days since rotation can lead to unauthorized use of outdated credentials.\nMitigation: Set a maximum age for secrets in Secrets Manager and enforce regular rotation intervals (e.g., 90 days).", "metadata": {"threat_id": "AWS_SM_003", "threat_name": "Overdue Secrets Rotation", "source": "An external client or an AWS service", "target": "AWS Secrets Manager"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Secrets Manager\nThreat: Unused Secrets\nDescription: Secrets unused for a prolonged period may indicate orphaned credentials, increasing exposure if leaked.\nMitigation: Regularly audit secrets for usage, remove or rotate unused secrets to minimize attack surface.", "metadata": {"threat_id": "AWS_SM_004", "threat_name": "Unused Secrets", "source": "An external client or an AWS service", "target": "AWS Secrets Manager"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Secrets Manager\nThreat: Secrets Not Encrypted with CMK\nDescription: Secrets not encrypted using a customer-managed KMS key (CMK) reduce the control over encryption and key rotation.\nMitigation: Configure secrets to use CMK for encryption, granting fine-grained control over key policies and rotations.", "metadata": {"threat_id": "AWS_SM_005", "threat_name": "Secrets Not Encrypted with CMK", "source": "An external client or an AWS service", "target": "AWS Secrets Manager"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Secrets Manager\nThreat: Secrets Not Rotated\nDescription: Secrets that are never rotated remain vulnerable if leaked or brute-forced, allowing attackers indefinite usage.\nMitigation: Enable Secrets Manager rotation, scheduling regular automated updates to minimize risk of long-lived credentials.", "metadata": {"threat_id": "SEC_035", "threat_name": "Secrets Not Rotated", "source": "An external client or an AWS service", "target": "AWS Secrets Manager"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Secrets Manager\nThreat: Failed or Incomplete Secret Rotation\nDescription: If scheduled secret rotation fails silently, older credentials remain in use, weakening security posture.\nMitigation: Monitor rotation success checks; configure notifications or alerts when a rotation fails or is incomplete.", "metadata": {"threat_id": "SEC_036", "threat_name": "Failed or Incomplete Secret Rotation", "source": "An external client or an AWS service", "target": "AWS Secrets Manager"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Security Group\nThreat: Unrestricted SSH Access (0.0.0.0/0) to Port 22\nDescription: Security groups that allow SSH access from 0.0.0.0/0 on port 22 expose instances to brute-force and unauthorized access attempts.\nMitigation: Restrict security group rules for SSH access by allowing only specific trusted IPs or using AWS Systems Manager Session Manager.", "metadata": {"threat_id": "SECURITYGROUP_003", "threat_name": "Unrestricted SSH Access (0.0.0.0/0) to Port 22", "source": "An external client or an AWS service", "target": "AWS Security Group"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Security Group\nThreat: Unrestricted SSH Access (0.0.0.0/0) to Port 22\nDescription: Security group rules allowing unrestricted SSH access (0.0.0.0/0) on port 22 increase the attack surface and potential security risks.\nMitigation: Ensure security group rules are configured to allow SSH access only from trusted sources.", "metadata": {"threat_id": "SECURITYGROUP_004", "threat_name": "Unrestricted SSH Access (0.0.0.0/0) to Port 22", "source": "An external client or an AWS service", "target": "AWS Security Group"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Security Group\nThreat: Unrestricted RDP Access (0.0.0.0/0) to Port 3389\nDescription: Security groups that allow RDP access from 0.0.0.0/0 on port 3389 expose instances to brute-force and unauthorized access attempts.\nMitigation: Restrict security group rules for RDP access by allowing only specific trusted IPs or using AWS Systems Manager Session Manager.", "metadata": {"threat_id": "SECURITYGROUP_005", "threat_name": "Unrestricted RDP Access (0.0.0.0/0) to Port 3389", "source": "An external client or an AWS service", "target": "AWS Security Group"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Security Group\nThreat: Unrestricted RDP Access (0.0.0.0/0) to Port 3389\nDescription: Security group rules allowing unrestricted RDP access (0.0.0.0/0) on port 3389 increase the attack surface and potential security risks.\nMitigation: Ensure security group rules are configured to allow RDP access only from trusted sources.", "metadata": {"threat_id": "SECURITYGROUP_006", "threat_name": "Unrestricted RDP Access (0.0.0.0/0) to Port 3389", "source": "An external client or an AWS service", "target": "AWS Security Group"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Security Group\nThreat: Open Ingress to Port 80\nDescription: Allowing ingress from 0.0.0.0/0 to port 80 in a security group exposes web servers to the public internet, leading to potential attacks.\nMitigation: Restrict port 80 access to trusted IP ranges or use a Web Application Firewall (WAF) for additional security.", "metadata": {"threat_id": "SG_005", "threat_name": "Open Ingress to Port 80", "source": "An external client or an AWS service", "target": "AWS Security Group"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Security Group\nThreat: Overly Permissive Security Group Rules\nDescription: Allowing ingress from 0.0.0.0/0 to port -1 effectively allows unrestricted access to all ports, increasing the attack surface.\nMitigation: Ensure security groups do not allow ingress from 0.0.0.0/0 to port -1. Restrict access to necessary IP ranges only.", "metadata": {"threat_id": "SG_002", "threat_name": "Overly Permissive Security Group Rules", "source": "An external client or an AWS service", "target": "AWS Security Group"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Security Group\nThreat: VPC Security Group Ingress Rule Allows All Traffic\nDescription: Security group ingress rules allowing 0.0.0.0/0 to port -1 can expose resources to public access, increasing security risks.\nMitigation: Restrict ingress rules to necessary IP ranges and ports to minimize exposure.", "metadata": {"threat_id": "SG_003", "threat_name": "VPC Security Group Ingress Rule Allows All Traffic", "source": "An external client or an AWS service", "target": "AWS Security Group"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Security Group\nThreat: Overly Permissive Security Group Egress Rules\nDescription: Security groups allowing egress from 0.0.0.0/0 to all ports (-1) can lead to data exfiltration or unauthorized access.\nMitigation: Ensure no security groups allow egress from 0.0.0.0/0 to all ports (-1).", "metadata": {"threat_id": "SecurityGroup_043", "threat_name": "Overly Permissive Security Group Egress Rules", "source": "An external client or an AWS service", "target": "AWS Security Group"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Security Hub\nThreat: Security Hub Disabled\nDescription: Without Security Hub, findings from multiple services remain siloed, complicating overall threat detection and compliance management.\nMitigation: Enable AWS Security Hub to consolidate and prioritize findings across GuardDuty, Inspector, Macie, and other services.", "metadata": {"threat_id": "SEC_037", "threat_name": "Security Hub Disabled", "source": "An external client or an AWS service", "target": "AWS Security Hub"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Serverless\nThreat: Hardcoded AWS Access Keys\nDescription: Hardcoded AWS access keys and secret keys in serverless provider configurations expose sensitive credentials to unauthorized access, increasing the risk of account compromise.\nMitigation: Ensure AWS credentials are securely stored in environment variables or AWS Secrets Manager instead of hardcoding them in configuration files.", "metadata": {"threat_id": "AWS_002", "threat_name": "Hardcoded AWS Access Keys", "source": "An external client or an AWS service", "target": "AWS Serverless"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Serverless\nThreat: Overly Permissive IAM Policy Actions\nDescription: IAM policies for serverless applications that use wildcard ('*') in the action statement grant excessive permissions, increasing the risk of privilege escalation and unauthorized access.\nMitigation: Ensure serverless IAM policies specify only required permissions instead of using wildcard actions ('*') to enforce the principle of least privilege.", "metadata": {"threat_id": "IAM_015", "threat_name": "Overly Permissive IAM Policy Actions", "source": "An external client or an AWS service", "target": "AWS Serverless"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Step Functions\nThreat: State Machine Without X-Ray Tracing\nDescription: Without X-Ray tracing enabled, monitoring and debugging the execution flow of AWS Step Functions state machines becomes difficult, increasing the risk of undetected failures.\nMitigation: Enable X-Ray tracing for AWS Step Functions state machines to improve observability and debugging capabilities.", "metadata": {"threat_id": "SFN_001", "threat_name": "State Machine Without X-Ray Tracing", "source": "An external client or an AWS service", "target": "AWS Step Functions"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Step Functions\nThreat: State Machine Execution History Logging Disabled\nDescription: Disabling execution history logging may prevent administrators from identifying and analyzing failures or unauthorized executions.\nMitigation: Ensure that execution history logging is enabled for AWS Step Functions to maintain an audit trail of executions.", "metadata": {"threat_id": "SFN_002", "threat_name": "State Machine Execution History Logging Disabled", "source": "An external client or an AWS service", "target": "AWS Step Functions"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Systems Manager\nThreat: Session Manager Logs Not Enabled or Unencrypted\nDescription: Without logging enabled and encrypted, Session Manager activities are not captured securely, making it difficult to audit administrative actions and detect security incidents.\nMitigation: Ensure that Session Manager logs are enabled and encrypted using AWS CloudWatch and AWS KMS for compliance and security monitoring.", "metadata": {"threat_id": "SSM_001", "threat_name": "Session Manager Logs Not Enabled or Unencrypted", "source": "An external client or an AWS service", "target": "AWS Systems Manager"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Systems Manager\nThreat: Publicly Accessible SSM Documents\nDescription: AWS SSM documents that are publicly accessible may expose sensitive system management configurations.\nMitigation: Restrict AWS SSM document permissions and ensure they are not publicly accessible.", "metadata": {"threat_id": "SSM_010", "threat_name": "Publicly Accessible SSM Documents", "source": "An external client or an AWS service", "target": "AWS Systems Manager"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Systems Manager\nThreat: Hard-Coded Secrets in AWS SSM Parameter Store\nDescription: Storing plaintext secrets in SSM Parameter Store increases the risk of accidental exposure or compromise.\nMitigation: Ensure no hard-coded secrets exist in Parameter Store values by using AWS Secrets Manager or KMS encryption.", "metadata": {"threat_id": "SSM_045", "threat_name": "Hard-Coded Secrets in AWS SSM Parameter Store", "source": "An external client or an AWS service", "target": "AWS Systems Manager"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Systems Manager\nThreat: Unencrypted SSM Parameter\nDescription: Unencrypted SSM parameters may expose sensitive information such as credentials, API keys, and configuration secrets.\nMitigation: Ensure all SSM parameters are encrypted using AWS KMS to protect sensitive data.", "metadata": {"threat_id": "SSM_084", "threat_name": "Unencrypted SSM Parameter", "source": "An external client or an AWS service", "target": "AWS Systems Manager"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Systems Manager\nThreat: SSM Secrets Sent to Untrusted Domains\nDescription: Terraform configurations that send SSM secrets over HTTP to untrusted domains may result in credential exposure.\nMitigation: Ensure Terraform is not configured to send sensitive SSM parameters to untrusted domains and enforce HTTPS for transmission.", "metadata": {"threat_id": "SSM_086", "threat_name": "SSM Secrets Sent to Untrusted Domains", "source": "An external client or an AWS service", "target": "AWS Systems Manager"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Systems Manager\nThreat: SSM Secrets Sent to Untrusted Domains\nDescription: Terraform configurations that send SSM secrets over HTTP to untrusted domains may result in credential exposure and data leakage.\nMitigation: Ensure Terraform is not configured to send sensitive SSM parameters to untrusted domains and enforce HTTPS for secure transmission.", "metadata": {"threat_id": "SSM_087", "threat_name": "SSM Secrets Sent to Untrusted Domains", "source": "An external client or an AWS service", "target": "AWS Systems Manager"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Timestream\nThreat: Timestream Database Not Encrypted with KMS\nDescription: Timestream databases that are not encrypted using AWS KMS may store sensitive time-series data without adequate protection, increasing the risk of unauthorized access.\nMitigation: Ensure that AWS Timestream databases are encrypted using AWS KMS CMK to enhance data security and compliance.", "metadata": {"threat_id": "TIMESTREAM_001", "threat_name": "Timestream Database Not Encrypted with KMS", "source": "An external client or an AWS service", "target": "AWS Timestream"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Transfer\nThreat: AWS Transfer Server Exposed Publicly\nDescription: AWS Transfer servers that are publicly accessible may expose sensitive files to unauthorized users, increasing the risk of data breaches.\nMitigation: Ensure that AWS Transfer servers are configured to restrict access to specific IP addresses and require authentication mechanisms to prevent unauthorized access.", "metadata": {"threat_id": "TRANSFER_001", "threat_name": "AWS Transfer Server Exposed Publicly", "source": "An external client or an AWS service", "target": "AWS Transfer"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Transfer\nThreat: Unsecured Transfer Server Protocols\nDescription: Allowing insecure protocols on AWS Transfer Server increases the risk of data interception and unauthorized access.\nMitigation: Ensure Transfer Server allows only secure protocols like SFTP, FTPS, and disable plaintext FTP.", "metadata": {"threat_id": "TS_017", "threat_name": "Unsecured Transfer Server Protocols", "source": "An external client or an AWS service", "target": "AWS Transfer"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS Transfer\nThreat: Outdated Security Policy in AWS Transfer Server\nDescription: Using outdated security policies in AWS Transfer Server may expose data to vulnerabilities and compliance issues.\nMitigation: Ensure AWS Transfer Server uses the latest security policy to maintain strong encryption and security compliance.", "metadata": {"threat_id": "Transfer_041", "threat_name": "Outdated Security Policy in AWS Transfer Server", "source": "An external client or an AWS service", "target": "AWS Transfer"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS VPC\nThreat: VPC Security Group Egress Rules Lack Descriptions\nDescription: Outbound security group rules without descriptions can lead to unauthorized data exfiltration risks and hinder security audits.\nMitigation: Ensure all VPC security group egress rules include descriptions to maintain visibility and track outbound traffic permissions.", "metadata": {"threat_id": "VPC_001", "threat_name": "VPC Security Group Egress Rules Lack Descriptions", "source": "An external client or an AWS service", "target": "AWS VPC"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS VPC\nThreat: VPC Security Group Ingress Rules Lack Descriptions\nDescription: Ingress security group rules without descriptions can lead to misconfigurations, unauthorized access, and hinder security audits.\nMitigation: Ensure all VPC security group ingress rules include descriptions to maintain visibility and track security configurations.", "metadata": {"threat_id": "VPC_002", "threat_name": "VPC Security Group Ingress Rules Lack Descriptions", "source": "An external client or an AWS service", "target": "AWS VPC"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS VPC\nThreat: Unrestricted SSH Access (0.0.0.0/0) to Port 22\nDescription: Allowing unrestricted SSH access (0.0.0.0/0) on port 22 exposes instances to brute-force attacks, unauthorized access, and potential compromise.\nMitigation: Restrict SSH access by allowing only trusted IPs or using VPN-based access controls.", "metadata": {"threat_id": "VPC_003", "threat_name": "Unrestricted SSH Access (0.0.0.0/0) to Port 22", "source": "An external client or an AWS service", "target": "AWS VPC"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS VPC\nThreat: Unrestricted RDP Access (0.0.0.0/0) to Port 3389\nDescription: Allowing unrestricted RDP access (0.0.0.0/0) on port 3389 exposes instances to brute-force attacks, unauthorized access, and potential compromise.\nMitigation: Restrict RDP access by allowing only trusted IPs or using VPN-based access controls.", "metadata": {"threat_id": "VPC_004", "threat_name": "Unrestricted RDP Access (0.0.0.0/0) to Port 3389", "source": "An external client or an AWS service", "target": "AWS VPC"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS VPC\nThreat: VPC Endpoint Service Not Configured for Manual Acceptance\nDescription: VPC Endpoint Services that do not require manual acceptance may allow unintended or unauthorized connections, leading to potential data exfiltration or network security risks.\nMitigation: Ensure that VPC Endpoint Services require manual acceptance before allowing connections to prevent unauthorized access.", "metadata": {"threat_id": "VPC_006", "threat_name": "VPC Endpoint Service Not Configured for Manual Acceptance", "source": "An external client or an AWS service", "target": "AWS VPC"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS VPC\nThreat: VPC Endpoint Service Not Configured for Manual Acceptance\nDescription: A VPC Endpoint Service that automatically accepts connection requests could be exploited by unauthorized users or malicious actors.\nMitigation: Configure the VPC Endpoint Service to require manual acceptance of connection requests to enhance security.", "metadata": {"threat_id": "VPC_007", "threat_name": "VPC Endpoint Service Not Configured for Manual Acceptance", "source": "An external client or an AWS service", "target": "AWS VPC"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS VPC\nThreat: VPC Subnets Assigning Public IPs by Default\nDescription: VPC subnets that assign public IPs by default increase the risk of exposing instances to the public internet, making them vulnerable to attacks.\nMitigation: Ensure that VPC subnets do not assign public IP addresses by default unless explicitly required for public-facing applications.", "metadata": {"threat_id": "VPC_008", "threat_name": "VPC Subnets Assigning Public IPs by Default", "source": "An external client or an AWS service", "target": "AWS VPC"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS VPC\nThreat: Default VPC is Provisioned\nDescription: Provisioning a default VPC without customization can lead to security risks, such as unnecessary internet access, lack of proper segmentation, and potential exposure of resources.\nMitigation: Avoid provisioning default VPCs and instead create custom VPCs with properly defined security groups, subnets, and route tables.", "metadata": {"threat_id": "VPC_009", "threat_name": "Default VPC is Provisioned", "source": "An external client or an AWS service", "target": "AWS VPC"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS VPC\nThreat: NACL Allows Ingress from 0.0.0.0:0 to Port 21\nDescription: Allowing unrestricted inbound access to port 21 (FTP) from all IP addresses may lead to unauthorized access or FTP-based attacks.\nMitigation: Ensure Network ACLs do not allow ingress from 0.0.0.0/0 to port 21 to prevent security risks.", "metadata": {"threat_id": "NACL_001", "threat_name": "NACL Allows Ingress from 0.0.0.0:0 to Port 21", "source": "An external client or an AWS service", "target": "AWS VPC"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS VPC\nThreat: NACL Allows Ingress from 0.0.0.0:0 to Port 20\nDescription: Allowing unrestricted inbound access to port 20 (FTP Data) from all IP addresses may expose the system to unauthorized data transfers.\nMitigation: Ensure Network ACLs do not allow ingress from 0.0.0.0/0 to port 20 to protect against unauthorized FTP data access.", "metadata": {"threat_id": "NACL_002", "threat_name": "NACL Allows Ingress from 0.0.0.0:0 to Port 20", "source": "An external client or an AWS service", "target": "AWS VPC"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS VPC\nThreat: NACL Allows Ingress from 0.0.0.0:0 to Port 3389\nDescription: Allowing unrestricted inbound access to port 3389 (RDP) exposes remote administration to potential unauthorized access and brute-force attacks.\nMitigation: Ensure Network ACLs do not allow ingress from 0.0.0.0/0 to port 3389 to prevent unauthorized remote access.", "metadata": {"threat_id": "NACL_003", "threat_name": "NACL Allows Ingress from 0.0.0.0:0 to Port 3389", "source": "An external client or an AWS service", "target": "AWS VPC"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS VPC\nThreat: Unrestricted SSH Access via NACL\nDescription: Allowing unrestricted inbound access to port 22 (SSH) from all IP addresses exposes the system to unauthorized remote access and brute-force attacks.\nMitigation: Ensure Network ACLs do not allow ingress from 0.0.0.0/0 to port 22 to prevent unauthorized SSH access.", "metadata": {"threat_id": "NACL_004", "threat_name": "Unrestricted SSH Access via NACL", "source": "An external client or an AWS service", "target": "AWS VPC"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS VPC\nThreat: NACL Allowing All Ingress Ports\nDescription: Network ACL rules that allow ingress traffic on all ports pose a security risk by enabling unrestricted access.\nMitigation: Ensure NACL ingress rules do not allow all ports and follow the principle of least privilege.", "metadata": {"threat_id": "NACL_012", "threat_name": "NACL Allowing All Ingress Ports", "source": "An external client or an AWS service", "target": "AWS VPC"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS VPC\nThreat: Detached Network ACLs\nDescription: Unattached NACLs leave subnets without proper access control, increasing exposure to unauthorized traffic.\nMitigation: Ensure that all Network ACLs (NACLs) are attached to subnets to enforce security policies.", "metadata": {"threat_id": "NACL_047", "threat_name": "Detached Network ACLs", "source": "An external client or an AWS service", "target": "AWS VPC"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS VPC\nThreat: Unprotected Subnets Due to Missing NACL\nDescription: Subnets without an attached NACL may lack necessary network traffic controls, increasing exposure to security risks.\nMitigation: Ensure that all subnets have Network ACLs (NACLs) attached to enforce security controls.", "metadata": {"threat_id": "Subnet_048", "threat_name": "Unprotected Subnets Due to Missing NACL", "source": "An external client or an AWS service", "target": "AWS VPC"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS VPC\nThreat: VPC Flow Logging Not Enabled\nDescription: VPCs without flow logging enabled may lead to difficulties in troubleshooting and detecting malicious activities.\nMitigation: Ensure VPC flow logging is enabled for all VPCs to monitor and analyze network traffic.", "metadata": {"threat_id": "VPC_063", "threat_name": "VPC Flow Logging Not Enabled", "source": "An external client or an AWS service", "target": "AWS VPC"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS VPC\nThreat: Default Security Group Allows Unrestricted Traffic\nDescription: If the default security group in a VPC allows unrestricted traffic, it increases the risk of unauthorized access.\nMitigation: Ensure that the default security group of every VPC restricts all traffic unless explicitly configured.", "metadata": {"threat_id": "VPC_064", "threat_name": "Default Security Group Allows Unrestricted Traffic", "source": "An external client or an AWS service", "target": "AWS VPC"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS VPC\nThreat: Absence of NAT Gateway for Default Route\nDescription: A default route that does not use AWS NAT Gateway may expose private instances directly to the internet, increasing the attack surface.\nMitigation: Ensure that AWS NAT Gateways are utilized for private subnet default routes to maintain security.", "metadata": {"threat_id": "VPC_085", "threat_name": "Absence of NAT Gateway for Default Route", "source": "An external client or an AWS service", "target": "AWS VPC"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS VPC\nThreat: Overly Permissive VPC Peering Route Table\nDescription: A VPC route table with overly permissive rules may allow unintended access between peered VPCs, increasing the attack surface.\nMitigation: Restrict VPC peering route table entries to specific CIDR ranges and ensure proper access controls are in place.", "metadata": {"threat_id": "VPC_001", "threat_name": "Overly Permissive VPC Peering Route Table", "source": "An external client or an AWS service", "target": "AWS VPC"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS VPC\nThreat: Default VPC Security Group Left Open\nDescription: If the default security group allows inbound or outbound traffic from any source, attackers can exploit open communication paths.\nMitigation: Close or restrict rules in the default SG, and create specialized security groups to control inbound/outbound traffic strictly.", "metadata": {"threat_id": "SEC_038", "threat_name": "Default VPC Security Group Left Open", "source": "An external client or an AWS service", "target": "AWS VPC"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS VPC\nThreat: Unrestricted Ports Beyond Authorized Range\nDescription: Exposing ports beyond a known authorized set (e.g., 443) may enable attackers to connect through less-monitored channels.\nMitigation: Limit allowed inbound TCP ports to only those explicitly needed, referencing a formal list of authorized ports.", "metadata": {"threat_id": "SEC_039", "threat_name": "Unrestricted Ports Beyond Authorized Range", "source": "An external client or an AWS service", "target": "AWS VPC"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS WAF\nThreat: AWS WAF Web ACL Without Associated Rules\nDescription: WAF Web ACLs without associated rules do not provide protection against web application threats, leaving applications vulnerable to attacks such as SQL injection and XSS.\nMitigation: Ensure that WAF Web ACLs have properly configured rules to detect and mitigate web threats.", "metadata": {"threat_id": "WAF_004", "threat_name": "AWS WAF Web ACL Without Associated Rules", "source": "An external client or an AWS service", "target": "AWS WAF"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS WAF\nThreat: AWS WAF Web ACL Logging Not Enabled\nDescription: WAF Web ACLs without logging enabled prevent security teams from monitoring and analyzing web traffic for malicious activities.\nMitigation: Ensure that logging is enabled for WAF Web ACLs to provide visibility into web application traffic and detect potential threats.", "metadata": {"threat_id": "WAF_005", "threat_name": "AWS WAF Web ACL Logging Not Enabled", "source": "An external client or an AWS service", "target": "AWS WAF"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS WAF\nThreat: AWS WAF Does Not Prevent Log4j2 Exploits\nDescription: Without appropriate WAF rules, applications may be vulnerable to the Log4j2 vulnerability (Log4Shell), leading to remote code execution and security compromise.\nMitigation: Ensure AWS WAF rules are configured to block requests containing patterns related to Log4j2 exploits to mitigate Log4Shell vulnerabilities.", "metadata": {"threat_id": "WAF_006", "threat_name": "AWS WAF Does Not Prevent Log4j2 Exploits", "source": "An external client or an AWS service", "target": "AWS WAF"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS WAF\nThreat: WAF Rule Without Defined Actions\nDescription: A WAF rule without defined actions may fail to block or monitor malicious traffic effectively.\nMitigation: Ensure WAF rules have specific actions assigned to enforce security policies effectively.", "metadata": {"threat_id": "WAF_005", "threat_name": "WAF Rule Without Defined Actions", "source": "An external client or an AWS service", "target": "AWS WAF"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS WAF\nThreat: WAF Web ACL Without Defined Actions\nDescription: WAF Web ACLs without defined rule actions may not effectively mitigate web-based threats.\nMitigation: Ensure WAF Web ACLs have properly defined rule actions to protect applications from attacks.", "metadata": {"threat_id": "WAF_006", "threat_name": "WAF Web ACL Without Defined Actions", "source": "An external client or an AWS service", "target": "AWS WAF"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS WAF\nThreat: WAFRegional Rule Group Without Defined Actions\nDescription: A WAFRegional rule group without assigned actions may fail to filter malicious traffic.\nMitigation: Ensure WAFRegional rule groups include properly configured actions to enforce security policies.", "metadata": {"threat_id": "WAFR_007", "threat_name": "WAFRegional Rule Group Without Defined Actions", "source": "An external client or an AWS service", "target": "AWS WAF"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS WAF\nThreat: WAFRegional Web ACL Without Defined Actions\nDescription: A WAFRegional Web ACL without rule actions may leave applications vulnerable to security threats.\nMitigation: Ensure WAFRegional Web ACLs have rule actions assigned to enforce web security.", "metadata": {"threat_id": "WAFR_008", "threat_name": "WAFRegional Web ACL Without Defined Actions", "source": "An external client or an AWS service", "target": "AWS WAF"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS WAF\nThreat: WAFv2 Rule Group Without Defined Actions\nDescription: A WAFv2 rule group without properly assigned actions may not provide adequate web application security.\nMitigation: Ensure WAFv2 rule groups contain actions to enforce security policies effectively.", "metadata": {"threat_id": "WAFV2_009", "threat_name": "WAFv2 Rule Group Without Defined Actions", "source": "An external client or an AWS service", "target": "AWS WAF"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS WAF\nThreat: WAFv2 Web ACL Without Defined Actions\nDescription: A WAFv2 Web ACL without defined rule actions may not provide effective web application security.\nMitigation: Ensure WAFv2 Web ACLs contain rule actions to enforce security policies effectively.", "metadata": {"threat_id": "WAFV2_001", "threat_name": "WAFv2 Web ACL Without Defined Actions", "source": "An external client or an AWS service", "target": "AWS WAF"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS WAF\nThreat: Public ALB Without WAF Protection\nDescription: Public-facing ALBs without AWS WAF protection may be vulnerable to web-based attacks such as SQL injection and cross-site scripting.\nMitigation: Ensure that public-facing ALBs are protected by AWS WAF to filter and mitigate web-based threats.", "metadata": {"threat_id": "WAF_078", "threat_name": "Public ALB Without WAF Protection", "source": "An external client or an AWS service", "target": "AWS WAF"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS WAF\nThreat: Public API Gateway Without WAF Protection\nDescription: Public API Gateways without AWS WAF protection are vulnerable to attacks such as DDoS, injection, and unauthorized access.\nMitigation: Ensure that public API Gateways are protected by AWS WAF to enforce web application security policies.", "metadata": {"threat_id": "WAF_079", "threat_name": "Public API Gateway Without WAF Protection", "source": "An external client or an AWS service", "target": "AWS WAF"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS WAF\nThreat: WAFv2 Web ACL Without Logging Configuration\nDescription: WAFv2 Web ACLs without logging configuration may prevent security teams from monitoring and responding to threats effectively.\nMitigation: Ensure WAFv2 Web ACLs have a logging configuration enabled to capture request data for security analysis.", "metadata": {"threat_id": "WAF_081", "threat_name": "WAFv2 Web ACL Without Logging Configuration", "source": "An external client or an AWS service", "target": "AWS WAF"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS WAF\nThreat: CloudFront WAFv2 WebACL Missing AMR for Log4j Vulnerability\nDescription: Without an AWS Managed Rule (AMR) configured for Log4j, CloudFront applications may be vulnerable to remote code execution (RCE) attacks.\nMitigation: Ensure AWS WAFv2 WebACL attached to CloudFront includes AWS Managed Rules (AMR) to mitigate Log4j vulnerabilities.", "metadata": {"threat_id": "WAF_004", "threat_name": "CloudFront WAFv2 WebACL Missing AMR for Log4j Vulnerability", "source": "An external client or an AWS service", "target": "AWS WAF"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS WAF\nThreat: ALB Without WAF Protection\nDescription: If an ALB is not associated with an AWS WAF Web ACL, it may allow SQL injection, cross-site scripting, and other Layer 7 attacks.\nMitigation: Attach a WAF Web ACL to the ALB and configure rules to block or filter malicious requests.", "metadata": {"threat_id": "SEC_004", "threat_name": "ALB Without WAF Protection", "source": "An external client or an AWS service", "target": "AWS WAF"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS WAF\nThreat: WAFv2 Logging Disabled\nDescription: Without logging, potentially harmful traffic patterns or rule hits cannot be audited, impeding threat analysis and response.\nMitigation: Enable WAFv2 logs and send them to S3 or CloudWatch Logs for monitoring and correlation with other security data.", "metadata": {"threat_id": "SEC_040", "threat_name": "WAFv2 Logging Disabled", "source": "An external client or an AWS service", "target": "AWS WAF"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS WAF\nThreat: ALB Not Protected by WAF\nDescription: If ALB is not associated with AWS WAF, layer 7 web attacks (SQL injection, cross-site scripting, etc.) can pass through unfiltered.\nMitigation: Enable AWS WAF on the ALB to filter malicious requests with configured rules or rule groups.", "metadata": {"threat_id": "WAF_001", "threat_name": "ALB Not Protected by WAF", "source": "An external client or an AWS service", "target": "AWS WAF"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS WAF\nThreat: API Gateway Not Protected by WAF\nDescription: Without WAF protection, the API endpoint is exposed to web exploits and denial-of-service attempts that bypass standard controls.\nMitigation: Associate AWS WAF with the API Gateway stage to detect and block suspicious or malicious traffic.", "metadata": {"threat_id": "WAF_002", "threat_name": "API Gateway Not Protected by WAF", "source": "An external client or an AWS service", "target": "AWS WAF"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS WAF\nThreat: Empty WAF Regional Rule\nDescription: A WAF rule that has no conditions or statements will not inspect or filter any traffic, leaving potential attacks unchecked.\nMitigation: Populate WAF rules with relevant conditions or statements (e.g., IP match conditions, SQL injection match conditions).", "metadata": {"threat_id": "WAF_003", "threat_name": "Empty WAF Regional Rule", "source": "An external client or an AWS service", "target": "AWS WAF"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS WAF\nThreat: Empty WAF Regional Rule Group\nDescription: If a rule group is empty, it provides no additional protection and cannot block or filter malicious requests as intended.\nMitigation: Define rules and conditions in the WAF rule group to address specific threats and strengthen web application defenses.", "metadata": {"threat_id": "WAF_004", "threat_name": "Empty WAF Regional Rule Group", "source": "An external client or an AWS service", "target": "AWS WAF"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS WAF\nThreat: Empty WAF Regional Web ACL\nDescription: A Web ACL with no rules or conditions does not provide any enforcement or threat mitigation, leaving the application unprotected.\nMitigation: Add rules or rule groups to the Web ACL that filter known bad traffic patterns or behaviors (e.g., SQL injection, cross-site scripting).", "metadata": {"threat_id": "WAF_005", "threat_name": "Empty WAF Regional Web ACL", "source": "An external client or an AWS service", "target": "AWS WAF"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS WorkSpaces\nThreat: Workspace User Volumes Not Encrypted\nDescription: User volumes in AWS WorkSpaces that are not encrypted may store sensitive data in an unprotected state, increasing the risk of unauthorized access and data breaches.\nMitigation: Ensure that all AWS WorkSpaces user volumes are encrypted using AWS KMS to protect data at rest.", "metadata": {"threat_id": "WORKSPACES_003", "threat_name": "Workspace User Volumes Not Encrypted", "source": "An external client or an AWS service", "target": "AWS WorkSpaces"}}
{"text": "Interaction: An external client or an AWS service sends data to AWS WorkSpaces\nThreat: Workspace Root Volumes Not Encrypted\nDescription: Root volumes in AWS WorkSpaces that are not encrypted may store critical system and user data in an unprotected state, increasing the risk of unauthorized access.\nMitigation: Ensure that all AWS WorkSpaces root volumes are encrypted using AWS KMS to secure system data.", "metadata": {"threat_id": "WORKSPACES_004", "threat_name": "Workspace Root Volumes Not Encrypted", "source": "An external client or an AWS service", "target": "AWS WorkSpaces"}}
