[
  {
    "Threat ID": "IAM_001",
    "Threat Name": "Overly Permissive IAM Policies",
    "Source": "Insecure IAM Policy Configuration",
    "Target": "AWS IAM Policy Document",
    "Description": "IAM policies granting full administrative privileges using wildcard ('*-*') permissions can lead to excessive privileges, increasing the risk of unauthorized access and privilege escalation.",
    "Mitigation": "Ensure that IAM policies follow the principle of least privilege by restricting permissions to only necessary actions and resources. Avoid using wildcard '*' permissions.",
    "Service": "AWS IAM"
  },
  {
    "Threat ID": "IAM_002",
    "Threat Name": "Overly Permissive IAM Policies in Serverless AWS",
    "Source": "Insecure IAM Policy Configuration",
    "Target": "AWS Serverless IAM Policy",
    "Description": "IAM policies in serverless applications granting full administrative privileges using wildcard ('*-*') permissions can lead to excessive privileges, increasing the risk of unauthorized access and privilege escalation.",
    "Mitigation": "Apply least privilege access to serverless AWS policies, limiting permissions to only necessary functions and resources.",
    "Service": "AWS IAM"
  },
  {
    "Threat ID": "ALB_001",
    "Threat Name": "Unencrypted ALB Listener Traffic",
    "Source": "Use of Insecure Protocols",
    "Target": "AWS Application Load Balancer (ALB) Listener",
    "Description": "ALB listeners configured with non-HTTPS protocols (e.g., HTTP) expose data in transit to interception and man-in-the-middle (MITM) attacks.",
    "Mitigation": "Ensure ALB listeners enforce HTTPS to encrypt data in transit and use TLS 1.2 or higher.",
    "Service": "AWS ALB"
  },
  {
    "Threat ID": "ALB_002",
    "Threat Name": "Unencrypted ALB Listener Traffic",
    "Source": "Use of Insecure Protocols",
    "Target": "AWS ALB Listener",
    "Description": "ALB listeners configured with non-HTTPS protocols (e.g., HTTP) expose data in transit to interception and man-in-the-middle (MITM) attacks.",
    "Mitigation": "Ensure ALB listeners enforce HTTPS to encrypt data in transit and use TLS 1.2 or higher.",
    "Service": "AWS ALB"
  },
  {
    "Threat ID": "ALB_003",
    "Threat Name": "Unencrypted ALB Listener Traffic",
    "Source": "Use of Insecure Protocols",
    "Target": "AWS LB Listener",
    "Description": "ALB listeners configured with non-HTTPS protocols (e.g., HTTP) expose data in transit to interception and man-in-the-middle (MITM) attacks.",
    "Mitigation": "Ensure ALB listeners enforce HTTPS to encrypt data in transit and use TLS 1.2 or higher.",
    "Service": "AWS LB"
  },
  {
    "Threat ID": "EBS_001",
    "Threat Name": "Unencrypted EBS Volume",
    "Source": "Storage Without Encryption",
    "Target": "AWS EC2 Volume (EBS)",
    "Description": "EBS volumes that are not encrypted expose sensitive data to unauthorized access if compromised.",
    "Mitigation": "Enable encryption for EBS volumes using AWS KMS to protect data at rest.",
    "Service": "AWS EC2"
  },
  {
    "Threat ID": "EBS_001",
    "Threat Name": "Unencrypted EBS Volume",
    "Source": "Anyone with Access to Underlying Storage",
    "Target": "Amazon EBS Volume",
    "Description": "If the EBS volume is not encrypted, unauthorized users who gain physical or system-level access to the storage can view or copy sensitive data.",
    "Mitigation": "Enable EBS encryption using AWS KMS (CMK) to protect data at rest and limit key usage via IAM policies.",
    "Service": "Amazon EBS"
  },
  {
    "Threat ID": "ES_001",
    "Threat Name": "Unencrypted Elasticsearch Data (AWS::Elasticsearch::Domain)",
    "Source": "Unauthorized Parties with Access to Physical Storage",
    "Target": "AWS::Elasticsearch::Domain",
    "Description": "If Elasticsearch data at rest is not encrypted, attackers who access the underlying storage could exfiltrate sensitive information.",
    "Mitigation": "Enable encryption at rest via AWS KMS to protect data, ensuring only authorized principals can decrypt it.",
    "Service": "Amazon Elasticsearch/OpenSearch"
  },
  {
    "Threat ID": "ES_002",
    "Threat Name": "Unencrypted Elasticsearch Data (aws_elasticsearch_domain)",
    "Source": "Unauthorized Parties with Access to Physical Storage",
    "Target": "aws_elasticsearch_domain",
    "Description": "Storing data in a non-encrypted Elasticsearch domain allows anyone with storage-level access to read or extract the data without authorization.",
    "Mitigation": "Configure encryption at rest with KMS keys on the Elasticsearch domain to secure data from unauthorized disclosure.",
    "Service": "Amazon Elasticsearch/OpenSearch"
  },
  {
    "Threat ID": "ES_003",
    "Threat Name": "Unencrypted Elasticsearch Data (aws_opensearch_domain)",
    "Source": "Unauthorized Parties with Access to Physical Storage",
    "Target": "aws_opensearch_domain",
    "Description": "If the OpenSearch domain is not configured for encryption at rest, stored data may be exposed if the underlying storage is compromised.",
    "Mitigation": "Enable encryption at rest using KMS on the OpenSearch domain, limiting key usage to authorized IAM roles.",
    "Service": "Amazon Elasticsearch/OpenSearch"
  },
  {
    "Threat ID": "ES_004",
    "Threat Name": "No Node-to-Node Encryption (AWS::Elasticsearch::Domain)",
    "Source": "Network Attackers on the Same VPC or Internal Network",
    "Target": "AWS::Elasticsearch::Domain",
    "Description": "Without node-to-node encryption, data traversing between Elasticsearch nodes can be intercepted or tampered with by an attacker on the network.",
    "Mitigation": "Enable node-to-node encryption to ensure data is encrypted in transit between all nodes in the Elasticsearch cluster.",
    "Service": "Amazon Elasticsearch/OpenSearch"
  },
  {
    "Threat ID": "ES_005",
    "Threat Name": "No Node-to-Node Encryption (aws_elasticsearch_domain)",
    "Source": "Network Attackers on the Same VPC or Internal Network",
    "Target": "aws_elasticsearch_domain",
    "Description": "When node-to-node encryption is disabled, data exchanged across Elasticsearch nodes can be intercepted or modified if an attacker has network visibility.",
    "Mitigation": "Activate node-to-node encryption for all Elasticsearch domain nodes to protect in-transit data from unauthorized viewing or tampering.",
    "Service": "Amazon Elasticsearch/OpenSearch"
  },
  {
    "Threat ID": "ES_006",
    "Threat Name": "No Node-to-Node Encryption (aws_opensearch_domain)",
    "Source": "Network Attackers on the Same VPC or Internal Network",
    "Target": "aws_opensearch_domain",
    "Description": "Unencrypted traffic between OpenSearch domain nodes can be sniffed or altered by malicious actors with network access, compromising data integrity and confidentiality.",
    "Mitigation": "Enable node-to-node encryption to ensure internal cluster communications remain protected and tamper-proof.",
    "Service": "Amazon Elasticsearch/OpenSearch"
  },
  {
    "Threat ID": "KMS_001",
    "Threat Name": "Disabled Rotation for CMK (AWS::KMS::Key)",
    "Source": "Long-Term Key Exposure",
    "Target": "AWS::KMS::Key",
    "Description": "A CMK that never rotates accumulates risk over time, increasing the chance that a compromised or leaked key remains active indefinitely.",
    "Mitigation": "Enable key rotation for customer-managed CMKs in KMS to reduce exposure and limit the impact of a potential key compromise.",
    "Service": "AWS KMS"
  },
  {
    "Threat ID": "KMS_002",
    "Threat Name": "Disabled Rotation for CMK (aws_kms_key)",
    "Source": "Long-Term Key Exposure",
    "Target": "aws_kms_key",
    "Description": "If a CMKâ€™s rotation is turned off, credentials can remain unchanged and be abused for extended periods, undermining encryption security.",
    "Mitigation": "Turn on automatic rotation for the KMS key to periodically generate new cryptographic material, reducing the threat window for compromised keys.",
    "Service": "AWS KMS"
  },
  {
    "Threat ID": "ASG_001",
    "Threat Name": "Unencrypted EBS in Launch Configuration",
    "Source": "Physical or System-Level Storage Access",
    "Target": "AWS::AutoScaling::LaunchConfiguration EBS Volumes",
    "Description": "If the EBS volumes used by an Auto Scaling launch configuration are not encrypted, sensitive data can be read by unauthorized users with access to underlying storage.",
    "Mitigation": "Enable encryption for EBS volumes in the launch configuration using a KMS key to ensure data at rest is protected.",
    "Service": "Amazon EC2 Auto Scaling"
  },
  {
    "Threat ID": "EC2_001",
    "Threat Name": "Unencrypted Data in EC2 Instance Storage",
    "Source": "Storage Without Encryption",
    "Target": "AWS EC2 Instance",
    "Description": "EC2 instances that store data in unencrypted Elastic Block Store (EBS) volumes expose sensitive data to unauthorized access if compromised.",
    "Mitigation": "Ensure all EBS volumes attached to EC2 instances are encrypted using AWS KMS to protect data at rest.",
    "Service": "AWS EC2"
  },
  {
    "Threat ID": "EC2_002",
    "Threat Name": "Unencrypted Data in Launch Configuration",
    "Source": "Storage Without Encryption",
    "Target": "AWS Launch Configuration",
    "Description": "Launch configurations that use unencrypted Elastic Block Store (EBS) volumes expose sensitive data to unauthorized access.",
    "Mitigation": "Ensure all EBS volumes created via launch configurations are encrypted using AWS KMS.",
    "Service": "AWS EC2"
  },
  {
    "Threat ID": "IAM_003",
    "Threat Name": "Weak IAM Password Policy - Expiration",
    "Source": "Weak Authentication Controls",
    "Target": "AWS IAM Password Policy",
    "Description": "IAM password policies that do not enforce expiration within 90 days increase the risk of compromised credentials remaining active for prolonged periods.",
    "Mitigation": "Configure IAM password policies to require password expiration within 90 days or less.",
    "Service": "AWS IAM"
  },
  {
    "Threat ID": "IAM_004",
    "Threat Name": "Weak IAM Password Policy - Minimum Length",
    "Source": "Weak Authentication Controls",
    "Target": "AWS IAM Password Policy",
    "Description": "IAM password policies that allow passwords shorter than 14 characters increase the risk of brute force and dictionary attacks.",
    "Mitigation": "Set IAM password policies to enforce a minimum password length of at least 14 characters.",
    "Service": "AWS IAM"
  },
  {
    "Threat ID": "IAM_005",
    "Threat Name": "Weak IAM Password Policy - Missing Lowercase Letter Requirement",
    "Source": "Weak Authentication Controls",
    "Target": "AWS IAM Password Policy",
    "Description": "IAM password policies that do not require at least one lowercase letter may allow easily guessable passwords.",
    "Mitigation": "Ensure IAM password policies require at least one lowercase letter.",
    "Service": "AWS IAM"
  },
  {
    "Threat ID": "IAM_006",
    "Threat Name": "Weak IAM Password Policy - Missing Number Requirement",
    "Source": "Weak Authentication Controls",
    "Target": "AWS IAM Password Policy",
    "Description": "IAM password policies that do not require at least one numeric character may allow easily guessable passwords.",
    "Mitigation": "Ensure IAM password policies require at least one numeric character.",
    "Service": "AWS IAM"
  },
  {
    "Threat ID": "IAM_007",
    "Threat Name": "Weak IAM Password Policy - Missing Symbol Requirement",
    "Source": "Weak Authentication Controls",
    "Target": "AWS IAM Password Policy",
    "Description": "IAM password policies that do not require at least one special symbol may allow easily guessable passwords.",
    "Mitigation": "Ensure IAM password policies require at least one special symbol.",
    "Service": "AWS IAM"
  },
  {
    "Threat ID": "IAM_008",
    "Threat Name": "Weak IAM Password Policy - Missing Uppercase Letter Requirement",
    "Source": "Weak Authentication Controls",
    "Target": "AWS IAM Password Policy",
    "Description": "IAM password policies that do not require at least one uppercase letter may allow easily guessable passwords.",
    "Mitigation": "Ensure IAM password policies require at least one uppercase letter.",
    "Service": "AWS IAM"
  },
  {
    "Threat ID": "IAM_009",
    "Threat Name": "IAM Password Policy Allows Password Reuse",
    "Source": "Weak Authentication Controls",
    "Target": "AWS IAM Password Policy",
    "Description": "Allowing users to reuse previous passwords increases the risk of credential compromise if old passwords are leaked.",
    "Mitigation": "Configure IAM password policies to prevent password reuse.",
    "Service": "AWS IAM"
  },
  {
    "Threat ID": "RDS_001",
    "Threat Name": "Unencrypted RDS Storage",
    "Source": "Storage Without Encryption",
    "Target": "AWS RDS Database Instance",
    "Description": "RDS instances that store data without encryption expose sensitive information to unauthorized access in case of data breaches or insider threats.",
    "Mitigation": "Ensure RDS instances are configured with encryption enabled to protect data at rest using AWS KMS.",
    "Service": "AWS RDS"
  },
  {
    "Threat ID": "RDS_002",
    "Threat Name": "Unencrypted RDS Storage",
    "Source": "Storage Without Encryption",
    "Target": "AWS RDS Database Instance",
    "Description": "RDS instances that store data without encryption expose sensitive information to unauthorized access in case of data breaches or insider threats.",
    "Mitigation": "Ensure RDS instances are configured with encryption enabled to protect data at rest using AWS KMS.",
    "Service": "AWS RDS"
  },
  {
    "Threat ID": "RDS_003",
    "Threat Name": "Publicly Accessible RDS Instance",
    "Source": "Misconfigured Network Access",
    "Target": "AWS RDS Database Instance",
    "Description": "RDS instances that are publicly accessible increase the risk of unauthorized access, data exposure, and potential exploitation.",
    "Mitigation": "Ensure RDS instances are not publicly accessible by restricting access to private VPCs and applying security group rules to limit database access.",
    "Service": "AWS RDS"
  },
  {
    "Threat ID": "S3_015",
    "Threat Name": "S3 Bucket Without Access Logging",
    "Source": "Lack of Auditability",
    "Target": "Amazon S3 Bucket",
    "Description": "S3 buckets without access logging enabled lack visibility into access patterns and potential unauthorized access attempts.",
    "Mitigation": "Enable S3 access logging to capture detailed access records and monitor unauthorized access attempts.",
    "Service": "Amazon S3"
  },
  {
    "Threat ID": "S3_016",
    "Threat Name": "S3 Bucket Without Server-Side Encryption",
    "Source": "Storage Without Encryption",
    "Target": "Amazon S3 Bucket",
    "Description": "S3 buckets without server-side encryption expose data to unauthorized access if compromised.",
    "Mitigation": "Enable S3 bucket server-side encryption (SSE) using AWS KMS or AES-256 to protect data at rest.",
    "Service": "Amazon S3"
  },
  {
    "Threat ID": "S3_017",
    "Threat Name": "S3 Bucket Allows Public Read Access",
    "Source": "Misconfigured Bucket Permissions",
    "Target": "Amazon S3 Bucket",
    "Description": "S3 buckets with public READ permissions expose stored objects to unauthorized access, leading to potential data leaks.",
    "Mitigation": "Ensure S3 bucket policies and ACLs restrict public access. Use AWS IAM policies to enforce strict access control.",
    "Service": "Amazon S3"
  },
  {
    "Threat ID": "S3_018",
    "Threat Name": "S3 Bucket Allows Public Read Access via ACL",
    "Source": "Misconfigured ACL Permissions",
    "Target": "Amazon S3 Bucket",
    "Description": "S3 buckets with ACLs that allow public READ access expose stored objects to unauthorized access, leading to potential data leaks.",
    "Mitigation": "Ensure S3 bucket ACLs do not allow public READ access. Use IAM policies and bucket policies to enforce strict access control.",
    "Service": "Amazon S3"
  },
  {
    "Threat ID": "S3_019",
    "Threat Name": "S3 Bucket Without Versioning",
    "Source": "Lack of Data Protection",
    "Target": "Amazon S3 Bucket",
    "Description": "S3 buckets without versioning enabled risk accidental data deletion or modification without the ability to recover previous versions.",
    "Mitigation": "Enable S3 bucket versioning to ensure previous versions of objects are retained and recoverable in case of accidental deletion or modification.",
    "Service": "Amazon S3"
  },
  {
    "Threat ID": "SAGEMAKER_001",
    "Threat Name": "Unencrypted SageMaker Notebook Storage",
    "Source": "Storage Without Encryption",
    "Target": "AWS SageMaker Notebook Instance",
    "Description": "SageMaker notebook instances that do not use KMS CMK encryption expose sensitive ML models, training data, and logs to unauthorized access if compromised.",
    "Mitigation": "Ensure all SageMaker notebook instances use AWS KMS CMK encryption to protect data at rest.",
    "Service": "AWS SageMaker"
  },
  {
    "Threat ID": "EC2_003",
    "Threat Name": "Security Group Rules Lack Descriptions",
    "Source": "Lack of Visibility",
    "Target": "AWS EC2 Security Group",
    "Description": "Security groups without descriptions on rules make it difficult to track changes, audit access permissions, and maintain security best practices.",
    "Mitigation": "Ensure all security group rules include meaningful descriptions to improve auditability and access control management.",
    "Service": "AWS EC2"
  },
  {
    "Threat ID": "EC2_004",
    "Threat Name": "Security Group Egress Rules Lack Descriptions",
    "Source": "Lack of Visibility",
    "Target": "AWS EC2 Security Group Egress Rules",
    "Description": "Outbound security group rules without descriptions can lead to unauthorized data exfiltration risks and hinder security audits.",
    "Mitigation": "Ensure all security group egress rules include descriptions to maintain visibility and track outbound traffic permissions.",
    "Service": "AWS EC2"
  },
  {
    "Threat ID": "EC2_005",
    "Threat Name": "Security Group Ingress Rules Lack Descriptions",
    "Source": "Lack of Visibility",
    "Target": "AWS EC2 Security Group Ingress Rules",
    "Description": "Inbound security group rules without descriptions can lead to open attack vectors and hinder security audits.",
    "Mitigation": "Ensure all security group ingress rules include descriptions to maintain visibility and track inbound traffic permissions.",
    "Service": "AWS EC2"
  },
  {
    "Threat ID": "DB_001",
    "Threat Name": "Database Security Group Rules Lack Descriptions",
    "Source": "Lack of Visibility",
    "Target": "AWS Database Security Group",
    "Description": "Database security groups and their rules without descriptions can lead to misconfigured access policies and hinder security audits.",
    "Mitigation": "Ensure all database security group rules include descriptions to maintain visibility and track database access permissions.",
    "Service": "AWS RDS"
  },
  {
    "Threat ID": "ELASTICACHE_001",
    "Threat Name": "Elasticache Security Group Rules Lack Descriptions",
    "Source": "Lack of Visibility",
    "Target": "AWS ElastiCache Security Group",
    "Description": "ElastiCache security groups and their rules without descriptions can lead to misconfigured access policies and hinder security audits.",
    "Mitigation": "Ensure all ElastiCache security group rules include descriptions to maintain visibility and track access permissions.",
    "Service": "AWS ElastiCache"
  },
  {
    "Threat ID": "REDSHIFT_001",
    "Threat Name": "Redshift Security Group Rules Lack Descriptions",
    "Source": "Lack of Visibility",
    "Target": "AWS Redshift Security Group",
    "Description": "Redshift security groups and their rules without descriptions can lead to misconfigured access policies and hinder security audits.",
    "Mitigation": "Ensure all Redshift security group rules include descriptions to maintain visibility and track access permissions.",
    "Service": "AWS Redshift"
  },
  {
    "Threat ID": "SECURITYGROUP_001",
    "Threat Name": "Security Group Rules Lack Descriptions",
    "Source": "Lack of Visibility",
    "Target": "AWS Security Group",
    "Description": "Security groups without descriptions on rules make it difficult to track changes, audit access permissions, and maintain security best practices.",
    "Mitigation": "Ensure all security group rules include meaningful descriptions to improve auditability and access control management.",
    "Service": "AWS EC2"
  },
  {
    "Threat ID": "SECURITYGROUP_002",
    "Threat Name": "Security Group Rules Lack Descriptions",
    "Source": "Lack of Visibility",
    "Target": "AWS Security Group Rule",
    "Description": "Security group rules without descriptions can lead to misconfigurations, unauthorized access, and hinder security audits.",
    "Mitigation": "Ensure all security group rules include descriptions to maintain visibility and track security configurations.",
    "Service": "AWS EC2"
  },
  {
    "Threat ID": "VPC_001",
    "Threat Name": "VPC Security Group Egress Rules Lack Descriptions",
    "Source": "Lack of Visibility",
    "Target": "AWS VPC Security Group Egress Rule",
    "Description": "Outbound security group rules without descriptions can lead to unauthorized data exfiltration risks and hinder security audits.",
    "Mitigation": "Ensure all VPC security group egress rules include descriptions to maintain visibility and track outbound traffic permissions.",
    "Service": "AWS VPC"
  },
  {
    "Threat ID": "VPC_002",
    "Threat Name": "VPC Security Group Ingress Rules Lack Descriptions",
    "Source": "Lack of Visibility",
    "Target": "AWS VPC Security Group Ingress Rule",
    "Description": "Ingress security group rules without descriptions can lead to misconfigurations, unauthorized access, and hinder security audits.",
    "Mitigation": "Ensure all VPC security group ingress rules include descriptions to maintain visibility and track security configurations.",
    "Service": "AWS VPC"
  },
  {
    "Threat ID": "EC2_006",
    "Threat Name": "Unrestricted SSH Access (0.0.0.0/0) to Port 22",
    "Source": "Overly Permissive Security Group Rules",
    "Target": "AWS EC2 Security Group",
    "Description": "Allowing unrestricted SSH access (0.0.0.0/0) on port 22 exposes instances to brute-force attacks, unauthorized access, and potential compromise.",
    "Mitigation": "Restrict SSH access by allowing only trusted IPs or using VPN-based access controls.",
    "Service": "AWS EC2"
  },
  {
    "Threat ID": "EC2_007",
    "Threat Name": "Unrestricted SSH Access (0.0.0.0/0) to Port 22",
    "Source": "Overly Permissive Security Group Rules",
    "Target": "AWS EC2 Security Group Ingress Rule",
    "Description": "Security group rules that allow unrestricted SSH access (0.0.0.0/0) to port 22 increase the risk of unauthorized access and compromise.",
    "Mitigation": "Ensure security group ingress rules restrict SSH access by allowing only specific trusted IPs.",
    "Service": "AWS EC2"
  },
  {
    "Threat ID": "SECURITYGROUP_003",
    "Threat Name": "Unrestricted SSH Access (0.0.0.0/0) to Port 22",
    "Source": "Overly Permissive Security Group Rules",
    "Target": "AWS Security Group",
    "Description": "Security groups that allow SSH access from 0.0.0.0/0 on port 22 expose instances to brute-force and unauthorized access attempts.",
    "Mitigation": "Restrict security group rules for SSH access by allowing only specific trusted IPs or using AWS Systems Manager Session Manager.",
    "Service": "AWS Security Groups"
  },
  {
    "Threat ID": "SECURITYGROUP_004",
    "Threat Name": "Unrestricted SSH Access (0.0.0.0/0) to Port 22",
    "Source": "Overly Permissive Security Group Rules",
    "Target": "AWS Security Group Rule",
    "Description": "Security group rules allowing unrestricted SSH access (0.0.0.0/0) on port 22 increase the attack surface and potential security risks.",
    "Mitigation": "Ensure security group rules are configured to allow SSH access only from trusted sources.",
    "Service": "AWS Security Groups"
  },
  {
    "Threat ID": "VPC_003",
    "Threat Name": "Unrestricted SSH Access (0.0.0.0/0) to Port 22",
    "Source": "Overly Permissive Security Group Rules",
    "Target": "AWS VPC Security Group Ingress Rule",
    "Description": "Allowing unrestricted SSH access (0.0.0.0/0) on port 22 exposes instances to brute-force attacks, unauthorized access, and potential compromise.",
    "Mitigation": "Restrict SSH access by allowing only trusted IPs or using VPN-based access controls.",
    "Service": "AWS VPC"
  },
  {
    "Threat ID": "EC2_008",
    "Threat Name": "Unrestricted RDP Access (0.0.0.0/0) to Port 3389",
    "Source": "Overly Permissive Security Group Rules",
    "Target": "AWS EC2 Security Group",
    "Description": "Allowing unrestricted RDP access (0.0.0.0/0) on port 3389 exposes instances to brute-force attacks, unauthorized access, and potential compromise.",
    "Mitigation": "Restrict RDP access by allowing only trusted IPs or using VPN-based access controls.",
    "Service": "AWS EC2"
  },
  {
    "Threat ID": "EC2_009",
    "Threat Name": "Unrestricted RDP Access (0.0.0.0/0) to Port 3389",
    "Source": "Overly Permissive Security Group Rules",
    "Target": "AWS EC2 Security Group Ingress Rule",
    "Description": "Security group rules allowing unrestricted RDP access (0.0.0.0/0) to port 3389 increase the risk of unauthorized access and compromise.",
    "Mitigation": "Ensure security group ingress rules restrict RDP access by allowing only specific trusted IPs.",
    "Service": "AWS EC2"
  },
  {
    "Threat ID": "SECURITYGROUP_005",
    "Threat Name": "Unrestricted RDP Access (0.0.0.0/0) to Port 3389",
    "Source": "Overly Permissive Security Group Rules",
    "Target": "AWS Security Group",
    "Description": "Security groups that allow RDP access from 0.0.0.0/0 on port 3389 expose instances to brute-force and unauthorized access attempts.",
    "Mitigation": "Restrict security group rules for RDP access by allowing only specific trusted IPs or using AWS Systems Manager Session Manager.",
    "Service": "AWS Security Groups"
  },
  {
    "Threat ID": "SECURITYGROUP_006",
    "Threat Name": "Unrestricted RDP Access (0.0.0.0/0) to Port 3389",
    "Source": "Overly Permissive Security Group Rules",
    "Target": "AWS Security Group Rule",
    "Description": "Security group rules allowing unrestricted RDP access (0.0.0.0/0) on port 3389 increase the attack surface and potential security risks.",
    "Mitigation": "Ensure security group rules are configured to allow RDP access only from trusted sources.",
    "Service": "AWS Security Groups"
  },
  {
    "Threat ID": "VPC_004",
    "Threat Name": "Unrestricted RDP Access (0.0.0.0/0) to Port 3389",
    "Source": "Overly Permissive Security Group Rules",
    "Target": "AWS VPC Security Group Ingress Rule",
    "Description": "Allowing unrestricted RDP access (0.0.0.0/0) on port 3389 exposes instances to brute-force attacks, unauthorized access, and potential compromise.",
    "Mitigation": "Restrict RDP access by allowing only trusted IPs or using VPN-based access controls.",
    "Service": "AWS VPC"
  },
  {
    "Threat ID": "SNS_001",
    "Threat Name": "Unencrypted SNS Topic Data",
    "Source": "Storage Without Encryption",
    "Target": "AWS SNS Topic",
    "Description": "SNS topics that store data without encryption expose sensitive messages to unauthorized access and compromise.",
    "Mitigation": "Ensure that SNS topics use AWS KMS encryption to protect data at rest.",
    "Service": "AWS SNS"
  },
  {
    "Threat ID": "SNS_002",
    "Threat Name": "Unencrypted SNS Topic Data",
    "Source": "Storage Without Encryption",
    "Target": "AWS SNS Topic",
    "Description": "SNS topics that store data without encryption expose sensitive messages to unauthorized access and compromise.",
    "Mitigation": "Ensure that SNS topics use AWS KMS encryption to protect data at rest.",
    "Service": "AWS SNS"
  },
  {
    "Threat ID": "SQS_001",
    "Threat Name": "Unencrypted SQS Queue Data",
    "Source": "Storage Without Encryption",
    "Target": "AWS SQS Queue",
    "Description": "SQS queues that store data without encryption expose messages to unauthorized access and compromise.",
    "Mitigation": "Ensure that SQS queues use AWS KMS encryption to protect data at rest.",
    "Service": "AWS SQS"
  },
  {
    "Threat ID": "SQS_002",
    "Threat Name": "Unencrypted SQS Queue Data",
    "Source": "Storage Without Encryption",
    "Target": "AWS SQS Queue",
    "Description": "SQS queues that store data without encryption expose messages to unauthorized access and compromise.",
    "Mitigation": "Ensure that SQS queues use AWS KMS encryption to protect data at rest.",
    "Service": "AWS SQS"
  },
  {
    "Threat ID": "DDB_001",
    "Threat Name": "DynamoDB Point-in-Time Recovery Disabled",
    "Source": "Lack of Backup and Recovery Mechanism",
    "Target": "AWS DynamoDB Table",
    "Description": "DynamoDB tables without Point-in-Time Recovery (PITR) enabled risk data loss due to accidental deletion, corruption, or malicious activity.",
    "Mitigation": "Enable Point-in-Time Recovery (PITR) for DynamoDB tables to allow data restoration in case of an incident.",
    "Service": "AWS DynamoDB"
  },
  {
    "Threat ID": "DDB_002",
    "Threat Name": "DynamoDB Point-in-Time Recovery Disabled",
    "Source": "Lack of Backup and Recovery Mechanism",
    "Target": "AWS DynamoDB Table",
    "Description": "DynamoDB tables without Point-in-Time Recovery (PITR) enabled risk data loss due to accidental deletion, corruption, or malicious activity.",
    "Mitigation": "Enable Point-in-Time Recovery (PITR) for DynamoDB tables to allow data restoration in case of an incident.",
    "Service": "AWS DynamoDB"
  },
  {
    "Threat ID": "ELASTICACHE_002",
    "Threat Name": "Unencrypted ElastiCache Replication Group Data at Rest",
    "Source": "Storage Without Encryption",
    "Target": "AWS ElastiCache Replication Group",
    "Description": "ElastiCache replication groups that do not use encryption at rest expose sensitive cache data to unauthorized access and data breaches.",
    "Mitigation": "Enable encryption at rest for ElastiCache replication groups using AWS KMS to protect sensitive data.",
    "Service": "AWS ElastiCache"
  },
  {
    "Threat ID": "ELASTICACHE_003",
    "Threat Name": "Unencrypted ElastiCache Replication Group Data at Rest",
    "Source": "Storage Without Encryption",
    "Target": "AWS ElastiCache Replication Group",
    "Description": "ElastiCache replication groups that do not use encryption at rest expose sensitive cache data to unauthorized access and data breaches.",
    "Mitigation": "Enable encryption at rest for ElastiCache replication groups using AWS KMS to protect sensitive data.",
    "Service": "AWS ElastiCache"
  },
  {
    "Threat ID": "ELASTICACHE_004",
    "Threat Name": "Unencrypted ElastiCache Replication Group Data in Transit",
    "Source": "Data Transmission Without Encryption",
    "Target": "AWS ElastiCache Replication Group",
    "Description": "ElastiCache replication groups that do not use encryption in transit expose data to interception, unauthorized access, and man-in-the-middle attacks.",
    "Mitigation": "Enable encryption in transit for ElastiCache replication groups to protect data during transmission.",
    "Service": "AWS ElastiCache"
  },
  {
    "Threat ID": "ELASTICACHE_005",
    "Threat Name": "Unencrypted ElastiCache Replication Group Data in Transit",
    "Source": "Data Transmission Without Encryption",
    "Target": "AWS ElastiCache Replication Group",
    "Description": "ElastiCache replication groups that do not use encryption in transit expose data to interception, unauthorized access, and man-in-the-middle attacks.",
    "Mitigation": "Enable encryption in transit for ElastiCache replication groups to protect data during transmission.",
    "Service": "AWS ElastiCache"
  },
  {
    "Threat ID": "ELASTICACHE_006",
    "Threat Name": "ElastiCache Replication Group Without Authentication Token",
    "Source": "Lack of Authentication",
    "Target": "AWS ElastiCache Replication Group",
    "Description": "ElastiCache replication groups without authentication tokens allow unauthenticated clients to connect, increasing the risk of unauthorized data access.",
    "Mitigation": "Ensure authentication tokens are enabled for ElastiCache replication groups to restrict access to authorized clients.",
    "Service": "AWS ElastiCache"
  },
  {
    "Threat ID": "ECR_001",
    "Threat Name": "ECR Repository Policy Set to Public",
    "Source": "Misconfigured Access Control",
    "Target": "AWS ECR Repository",
    "Description": "ECR repositories with public policies expose container images to unauthorized access, increasing the risk of exploitation or malicious use.",
    "Mitigation": "Ensure that ECR repositories are private and restrict access using AWS IAM policies.",
    "Service": "AWS ECR"
  },
  {
    "Threat ID": "ECR_002",
    "Threat Name": "ECR Repository Policy Set to Public",
    "Source": "Misconfigured Access Control",
    "Target": "AWS ECR Repository Policy",
    "Description": "ECR repository policies that allow public access expose container images to potential abuse or unauthorized distribution.",
    "Mitigation": "Restrict ECR repository access using IAM policies to limit image pull and push operations to trusted entities.",
    "Service": "AWS ECR"
  },
  {
    "Threat ID": "KMS_001",
    "Threat Name": "Overly Permissive KMS Key Policy",
    "Source": "Insecure IAM Policy Configuration",
    "Target": "AWS KMS Key",
    "Description": "KMS key policies containing wildcard (*) principals grant excessive permissions, increasing the risk of unauthorized access to encryption keys.",
    "Mitigation": "Ensure KMS key policies specify explicit IAM principals and follow the principle of least privilege to restrict key usage.",
    "Service": "AWS KMS"
  },
  {
    "Threat ID": "KMS_002",
    "Threat Name": "Overly Permissive KMS Key Policy",
    "Source": "Insecure IAM Policy Configuration",
    "Target": "AWS KMS Key",
    "Description": "KMS key policies containing wildcard (*) principals grant excessive permissions, increasing the risk of unauthorized access to encryption keys.",
    "Mitigation": "Ensure KMS key policies specify explicit IAM principals and follow the principle of least privilege to restrict key usage.",
    "Service": "AWS KMS"
  },
  {
    "Threat ID": "CLOUDFRONT_001",
    "Threat Name": "Unencrypted CloudFront Distribution Traffic",
    "Source": "Use of Insecure Protocols",
    "Target": "AWS CloudFront Distribution",
    "Description": "CloudFront distributions that allow HTTP instead of enforcing HTTPS expose content to potential interception and tampering.",
    "Mitigation": "Set the CloudFront ViewerProtocolPolicy to enforce HTTPS-only traffic to ensure data is encrypted in transit.",
    "Service": "AWS CloudFront"
  },
  {
    "Threat ID": "CLOUDFRONT_002",
    "Threat Name": "Unencrypted CloudFront Distribution Traffic",
    "Source": "Use of Insecure Protocols",
    "Target": "AWS CloudFront Distribution",
    "Description": "CloudFront distributions that allow HTTP instead of enforcing HTTPS expose content to potential interception and tampering.",
    "Mitigation": "Set the CloudFront ViewerProtocolPolicy to enforce HTTPS-only traffic to ensure data is encrypted in transit.",
    "Service": "AWS CloudFront"
  },
  {
    "Threat ID": "CLOUDTRAIL_001",
    "Threat Name": "Unencrypted CloudTrail Logs",
    "Source": "Storage Without Encryption",
    "Target": "AWS CloudTrail Trail",
    "Description": "CloudTrail logs that are not encrypted expose audit logs to unauthorized access, potentially compromising forensic investigations and compliance.",
    "Mitigation": "Ensure CloudTrail logs are encrypted at rest using AWS KMS CMKs to protect sensitive log data.",
    "Service": "AWS CloudTrail"
  },
  {
    "Threat ID": "CLOUDTRAIL_002",
    "Threat Name": "Unencrypted CloudTrail Logs",
    "Source": "Storage Without Encryption",
    "Target": "AWS CloudTrail",
    "Description": "CloudTrail logs that are not encrypted expose audit logs to unauthorized access, potentially compromising forensic investigations and compliance.",
    "Mitigation": "Ensure CloudTrail logs are encrypted at rest using AWS KMS CMKs to protect sensitive log data.",
    "Service": "AWS CloudTrail"
  },
  {
    "Threat ID": "CLOUDTRAIL_003",
    "Threat Name": "CloudTrail Log File Validation Disabled",
    "Source": "Tampering of Audit Logs",
    "Target": "AWS CloudTrail Trail",
    "Description": "CloudTrail logs without log file validation enabled can be tampered with, making it difficult to detect unauthorized changes.",
    "Mitigation": "Enable CloudTrail log file validation to ensure the integrity and authenticity of log data.",
    "Service": "AWS CloudTrail"
  },
  {
    "Threat ID": "CLOUDTRAIL_004",
    "Threat Name": "CloudTrail Log File Validation Disabled",
    "Source": "Tampering of Audit Logs",
    "Target": "AWS CloudTrail",
    "Description": "CloudTrail logs without log file validation enabled can be tampered with, making it difficult to detect unauthorized changes.",
    "Mitigation": "Enable CloudTrail log file validation to ensure the integrity and authenticity of log data.",
    "Service": "AWS CloudTrail"
  },
  {
    "Threat ID": "EKS_001",
    "Threat Name": "EKS Control Plane Logging Disabled",
    "Source": "Lack of Security Monitoring",
    "Target": "AWS EKS Cluster",
    "Description": "Amazon EKS clusters without control plane logging enabled lack visibility into API requests, authentication events, and security-related activities.",
    "Mitigation": "Enable Amazon EKS control plane logging for all log types to enhance observability and security monitoring.",
    "Service": "AWS EKS"
  },
  {
    "Threat ID": "EKS_002",
    "Threat Name": "EKS Public Endpoint Accessible from Anywhere",
    "Source": "Overly Permissive Network Access",
    "Target": "AWS EKS Cluster",
    "Description": "An Amazon EKS cluster with a public endpoint accessible to 0.0.0.0/0 increases the risk of unauthorized access and potential attacks.",
    "Mitigation": "Restrict public access to the EKS control plane endpoint by allowing access only from trusted IP addresses or private networking configurations.",
    "Service": "AWS EKS"
  },
  {
    "Threat ID": "EKS_003",
    "Threat Name": "EKS Public Endpoint Enabled",
    "Source": "Overly Permissive Network Access",
    "Target": "AWS EKS Cluster",
    "Description": "An Amazon EKS cluster with a public endpoint enabled increases the risk of unauthorized access and potential attacks.",
    "Mitigation": "Disable the public endpoint for EKS clusters and use private networking options such as VPC endpoints or bastion hosts for secure access.",
    "Service": "AWS EKS"
  },
  {
    "Threat ID": "IAM_010",
    "Threat Name": "IAM Policies Attached Directly to Users",
    "Source": "Complex Access Management",
    "Target": "AWS IAM Policy",
    "Description": "Attaching IAM policies directly to users instead of groups or roles increases the complexity of access management, making it difficult to enforce the principle of least privilege.",
    "Mitigation": "Ensure IAM policies are attached to groups or roles instead of individual users to simplify access management and reduce the risk of excessive privileges.",
    "Service": "AWS IAM"
  },
  {
    "Threat ID": "IAM_011",
    "Threat Name": "IAM Policies Attached Directly to Users",
    "Source": "Complex Access Management",
    "Target": "AWS IAM Policy Attachment",
    "Description": "Attaching IAM policies directly to users instead of groups or roles increases the complexity of access management, making it difficult to enforce the principle of least privilege.",
    "Mitigation": "Ensure IAM policies are attached to groups or roles instead of individual users to simplify access management and reduce the risk of excessive privileges.",
    "Service": "AWS IAM"
  },
  {
    "Threat ID": "IAM_012",
    "Threat Name": "IAM Policies Attached Directly to Users",
    "Source": "Complex Access Management",
    "Target": "AWS IAM User Policy",
    "Description": "Attaching IAM policies directly to users instead of groups or roles increases the complexity of access management, making it difficult to enforce the principle of least privilege.",
    "Mitigation": "Ensure IAM policies are attached to groups or roles instead of individual users to simplify access management and reduce the risk of excessive privileges.",
    "Service": "AWS IAM"
  },
  {
    "Threat ID": "IAM_013",
    "Threat Name": "IAM Policies Attached Directly to Users",
    "Source": "Complex Access Management",
    "Target": "AWS IAM User Policy Attachment",
    "Description": "Attaching IAM policies directly to users instead of groups or roles increases the complexity of access management, making it difficult to enforce the principle of least privilege.",
    "Mitigation": "Ensure IAM policies are attached to groups or roles instead of individual users to simplify access management and reduce the risk of excessive privileges.",
    "Service": "AWS IAM"
  },
  {
    "Threat ID": "AWS_001",
    "Threat Name": "Hardcoded AWS Access Keys",
    "Source": "Exposure of Credentials",
    "Target": "AWS Provider Configuration",
    "Description": "Hardcoded AWS access keys and secret keys in provider configurations expose sensitive credentials to unauthorized access, increasing the risk of account compromise.",
    "Mitigation": "Ensure AWS credentials are securely stored in environment variables or AWS Secrets Manager instead of hardcoding them in configuration files.",
    "Service": "AWS General"
  },
  {
    "Threat ID": "AWS_002",
    "Threat Name": "Hardcoded AWS Access Keys",
    "Source": "Exposure of Credentials",
    "Target": "AWS Serverless Provider Configuration",
    "Description": "Hardcoded AWS access keys and secret keys in serverless provider configurations expose sensitive credentials to unauthorized access, increasing the risk of account compromise.",
    "Mitigation": "Ensure AWS credentials are securely stored in environment variables or AWS Secrets Manager instead of hardcoding them in configuration files.",
    "Service": "AWS Serverless"
  },
  {
    "Threat ID": "EFS_001",
    "Threat Name": "Unencrypted EFS File System",
    "Source": "Storage Without Encryption",
    "Target": "AWS Elastic File System (EFS)",
    "Description": "EFS file systems that do not use encryption expose stored data to unauthorized access and potential data breaches.",
    "Mitigation": "Ensure AWS EFS encryption at rest is enabled using AWS KMS to protect sensitive data.",
    "Service": "AWS EFS"
  },
  {
    "Threat ID": "EFS_002",
    "Threat Name": "Unencrypted EFS File System",
    "Source": "Storage Without Encryption",
    "Target": "AWS Elastic File System (EFS)",
    "Description": "EFS file systems that do not use encryption expose stored data to unauthorized access and potential data breaches.",
    "Mitigation": "Ensure AWS EFS encryption at rest is enabled using AWS KMS to protect sensitive data.",
    "Service": "AWS EFS"
  },
  {
    "Threat ID": "KINESIS_001",
    "Threat Name": "Unencrypted Kinesis Stream",
    "Source": "Storage Without Encryption",
    "Target": "AWS Kinesis Stream",
    "Description": "Kinesis data streams that do not use encryption expose sensitive real-time data to unauthorized access and interception.",
    "Mitigation": "Enable server-side encryption using AWS KMS for Kinesis data streams to protect data at rest.",
    "Service": "AWS Kinesis"
  },
  {
    "Threat ID": "KINESIS_002",
    "Threat Name": "Unencrypted Kinesis Stream",
    "Source": "Storage Without Encryption",
    "Target": "AWS Kinesis Stream",
    "Description": "Kinesis data streams that do not use encryption expose sensitive real-time data to unauthorized access and interception.",
    "Mitigation": "Enable server-side encryption using AWS KMS for Kinesis data streams to protect data at rest.",
    "Service": "AWS Kinesis"
  },
  {
    "Threat ID": "NEPTUNE_001",
    "Threat Name": "Unencrypted Neptune Database Cluster Storage",
    "Source": "Storage Without Encryption",
    "Target": "AWS Neptune DB Cluster",
    "Description": "Neptune database clusters without encryption expose sensitive graph data to unauthorized access and potential data breaches.",
    "Mitigation": "Ensure Neptune database clusters use AWS KMS encryption to protect data at rest.",
    "Service": "AWS Neptune"
  },
  {
    "Threat ID": "NEPTUNE_002",
    "Threat Name": "Unencrypted Neptune Database Cluster Storage",
    "Source": "Storage Without Encryption",
    "Target": "AWS Neptune Cluster",
    "Description": "Neptune database clusters without encryption expose sensitive graph data to unauthorized access and potential data breaches.",
    "Mitigation": "Ensure Neptune database clusters use AWS KMS encryption to protect data at rest.",
    "Service": "AWS Neptune"
  },
  {
    "Threat ID": "LAMBDA_001",
    "Threat Name": "Hardcoded Secrets in Lambda Environment",
    "Source": "Exposure of Credentials",
    "Target": "AWS Lambda Function",
    "Description": "Hardcoded secrets in Lambda environment variables expose sensitive credentials to unauthorized access, increasing the risk of data leakage and compromise.",
    "Mitigation": "Ensure sensitive credentials are stored securely using AWS Secrets Manager or AWS Systems Manager Parameter Store instead of hardcoding them in environment variables.",
    "Service": "AWS Lambda"
  },
  {
    "Threat ID": "LAMBDA_002",
    "Threat Name": "Hardcoded Secrets in Serverless Lambda Environment",
    "Source": "Exposure of Credentials",
    "Target": "AWS Serverless Function",
    "Description": "Hardcoded secrets in Lambda environment variables expose sensitive credentials to unauthorized access, increasing the risk of data leakage and compromise.",
    "Mitigation": "Ensure sensitive credentials are stored securely using AWS Secrets Manager or AWS Systems Manager Parameter Store instead of hardcoding them in environment variables.",
    "Service": "AWS Lambda"
  },
  {
    "Threat ID": "LAMBDA_003",
    "Threat Name": "Hardcoded Secrets in Lambda Environment",
    "Source": "Exposure of Credentials",
    "Target": "AWS Lambda Function",
    "Description": "Hardcoded secrets in Lambda environment variables expose sensitive credentials to unauthorized access, increasing the risk of data leakage and compromise.",
    "Mitigation": "Ensure sensitive credentials are stored securely using AWS Secrets Manager or AWS Systems Manager Parameter Store instead of hardcoding them in environment variables.",
    "Service": "AWS Lambda"
  },
  {
    "Threat ID": "EC2_010",
    "Threat Name": "Hardcoded Secrets in EC2 User Data",
    "Source": "Exposure of Credentials",
    "Target": "AWS EC2 Instance",
    "Description": "EC2 user data scripts containing hardcoded secrets expose sensitive credentials to unauthorized access, increasing the risk of compromise.",
    "Mitigation": "Avoid storing sensitive information in EC2 user data. Use AWS Secrets Manager or AWS Systems Manager Parameter Store to securely manage secrets.",
    "Service": "AWS EC2"
  },
  {
    "Threat ID": "EC2_011",
    "Threat Name": "Hardcoded Secrets in EC2 User Data",
    "Source": "Exposure of Credentials",
    "Target": "AWS EC2 Instance",
    "Description": "EC2 user data scripts containing hardcoded secrets expose sensitive credentials to unauthorized access, increasing the risk of compromise.",
    "Mitigation": "Avoid storing sensitive information in EC2 user data. Use AWS Secrets Manager or AWS Systems Manager Parameter Store to securely manage secrets.",
    "Service": "AWS EC2"
  },
  {
    "Threat ID": "EC2_012",
    "Threat Name": "Hardcoded Secrets in EC2 User Data",
    "Source": "Exposure of Credentials",
    "Target": "AWS Launch Configuration",
    "Description": "EC2 launch configurations containing hardcoded secrets expose sensitive credentials to unauthorized access and potential compromise.",
    "Mitigation": "Ensure sensitive credentials are stored securely using AWS Secrets Manager or AWS Systems Manager Parameter Store instead of hardcoding them in launch configurations.",
    "Service": "AWS EC2"
  },
  {
    "Threat ID": "EC2_013",
    "Threat Name": "Hardcoded Secrets in EC2 User Data",
    "Source": "Exposure of Credentials",
    "Target": "AWS Launch Template",
    "Description": "EC2 launch templates containing hardcoded secrets expose sensitive credentials to unauthorized access and potential compromise.",
    "Mitigation": "Ensure sensitive credentials are stored securely using AWS Secrets Manager or AWS Systems Manager Parameter Store instead of hardcoding them in launch templates.",
    "Service": "AWS EC2"
  },
  {
    "Threat ID": "DAX_001",
    "Threat Name": "Unencrypted DAX Cluster",
    "Source": "Storage Without Encryption",
    "Target": "AWS DAX Cluster",
    "Description": "DAX clusters that do not use encryption at rest expose cached data to unauthorized access, increasing the risk of data leakage and compromise.",
    "Mitigation": "Enable encryption at rest for AWS DAX clusters using AWS KMS to protect sensitive data.",
    "Service": "AWS DAX"
  },
  {
    "Threat ID": "DAX_002",
    "Threat Name": "Unencrypted DAX Cluster",
    "Source": "Storage Without Encryption",
    "Target": "AWS DAX Cluster",
    "Description": "DAX clusters that do not use encryption at rest expose cached data to unauthorized access, increasing the risk of data leakage and compromise.",
    "Mitigation": "Enable encryption at rest for AWS DAX clusters using AWS KMS to protect sensitive data.",
    "Service": "AWS DAX"
  },
  {
    "Threat ID": "MQ_001",
    "Threat Name": "AWS MQ Broker Logging Disabled",
    "Source": "Lack of Security Monitoring",
    "Target": "AWS MQ Broker",
    "Description": "AWS MQ brokers with logging disabled reduce visibility into authentication attempts, access patterns, and security incidents, making it harder to detect anomalies.",
    "Mitigation": "Ensure logging is enabled for AWS MQ brokers to monitor access and detect unauthorized activity.",
    "Service": "AWS MQ"
  },
  {
    "Threat ID": "IAM_014",
    "Threat Name": "Overly Permissive IAM Policy Actions",
    "Source": "Insecure IAM Policy Configuration",
    "Target": "AWS IAM Policy Document",
    "Description": "IAM policies that use wildcard ('*') in the action statement grant excessive permissions, increasing the risk of privilege escalation and unauthorized access.",
    "Mitigation": "Ensure IAM policies specify only necessary permissions instead of using wildcard actions ('*') to enforce the principle of least privilege.",
    "Service": "AWS IAM"
  },
  {
    "Threat ID": "IAM_015",
    "Threat Name": "Overly Permissive IAM Policy Actions",
    "Source": "Insecure IAM Policy Configuration",
    "Target": "AWS Serverless IAM Policy",
    "Description": "IAM policies for serverless applications that use wildcard ('*') in the action statement grant excessive permissions, increasing the risk of privilege escalation and unauthorized access.",
    "Mitigation": "Ensure serverless IAM policies specify only required permissions instead of using wildcard actions ('*') to enforce the principle of least privilege.",
    "Service": "AWS Serverless"
  },
  {
    "Threat ID": "LAMBDA_004",
    "Threat Name": "X-Ray Tracing Disabled for Lambda",
    "Source": "Lack of Observability",
    "Target": "AWS Lambda Function",
    "Description": "Lambda functions without X-Ray tracing enabled lack visibility into performance, execution flows, and potential security issues.",
    "Mitigation": "Enable AWS X-Ray tracing for Lambda functions to enhance monitoring, debugging, and security analysis.",
    "Service": "AWS Lambda"
  },
  {
    "Threat ID": "ECR_003",
    "Threat Name": "ECR Image Tags Are Not Immutable",
    "Source": "Risk of Image Tampering",
    "Target": "AWS ECR Repository",
    "Description": "ECR repositories without immutable image tags allow images to be overwritten, leading to potential supply chain attacks and loss of integrity.",
    "Mitigation": "Enable image tag immutability in AWS ECR to prevent unintended or malicious overwrites of container images.",
    "Service": "AWS ECR"
  },
  {
    "Threat ID": "ECR_004",
    "Threat Name": "ECR Image Tags Are Not Immutable",
    "Source": "Risk of Image Tampering",
    "Target": "AWS ECR Repository",
    "Description": "ECR repositories without immutable image tags allow images to be overwritten, leading to potential supply chain attacks and loss of integrity.",
    "Mitigation": "Enable image tag immutability in AWS ECR to prevent unintended or malicious overwrites of container images.",
    "Service": "AWS ECR"
  },
  {
    "Threat ID": "S3_018",
    "Threat Name": "S3 Bucket Allows Public ACLs",
    "Source": "Misconfigured Access Control",
    "Target": "Amazon S3 Bucket",
    "Description": "S3 buckets that do not have block public ACLs enabled may allow unauthorized public access, leading to potential data exposure.",
    "Mitigation": "Enable the 'Block Public ACLs' setting on S3 buckets to prevent public access configurations.",
    "Service": "Amazon S3"
  },
  {
    "Threat ID": "S3_019",
    "Threat Name": "S3 Bucket Allows Public ACLs",
    "Source": "Misconfigured Access Control",
    "Target": "Amazon S3 Public Access Block",
    "Description": "S3 buckets without block public ACLs enabled can be misconfigured to allow unauthorized access, leading to data leaks.",
    "Mitigation": "Ensure S3 bucket public access is restricted by enabling 'Block Public ACLs' to prevent accidental public exposure.",
    "Service": "Amazon S3"
  },
  {
    "Threat ID": "S3_020",
    "Threat Name": "S3 Bucket Allows Public Policies",
    "Source": "Misconfigured Access Control",
    "Target": "Amazon S3 Bucket",
    "Description": "S3 buckets without 'Block Public Policy' enabled may allow unauthorized users to apply public policies, leading to unintended data exposure.",
    "Mitigation": "Enable the 'Block Public Policy' setting on S3 buckets to prevent users from applying public policies that expose data.",
    "Service": "Amazon S3"
  },
  {
    "Threat ID": "S3_021",
    "Threat Name": "S3 Bucket Allows Public Policies",
    "Source": "Misconfigured Access Control",
    "Target": "Amazon S3 Public Access Block",
    "Description": "S3 buckets without 'Block Public Policy' enabled may allow public policies that expose sensitive data.",
    "Mitigation": "Ensure 'Block Public Policy' is enabled in S3 public access block settings to prevent unintended data exposure.",
    "Service": "Amazon S3"
  },
  {
    "Threat ID": "S3_022",
    "Threat Name": "S3 Bucket Does Not Ignore Public ACLs",
    "Source": "Misconfigured Access Control",
    "Target": "Amazon S3 Bucket",
    "Description": "S3 buckets without 'Ignore Public ACLs' enabled may inherit public permissions from ACLs, leading to potential data exposure.",
    "Mitigation": "Enable the 'Ignore Public ACLs' setting on S3 buckets to prevent public ACLs from granting unintended access.",
    "Service": "Amazon S3"
  },
  {
    "Threat ID": "S3_023",
    "Threat Name": "S3 Bucket Does Not Ignore Public ACLs",
    "Source": "Misconfigured Access Control",
    "Target": "Amazon S3 Public Access Block",
    "Description": "S3 buckets that do not have 'Ignore Public ACLs' enabled may allow unauthorized users to gain access through ACL configurations.",
    "Mitigation": "Ensure 'Ignore Public ACLs' is enabled in S3 public access block settings to restrict public ACLs.",
    "Service": "Amazon S3"
  },
  {
    "Threat ID": "S3_024",
    "Threat Name": "S3 Bucket Does Not Restrict Public Access",
    "Source": "Misconfigured Access Control",
    "Target": "Amazon S3 Bucket",
    "Description": "S3 buckets without 'Restrict Public Buckets' enabled may allow public access to stored objects, leading to potential data leaks.",
    "Mitigation": "Enable the 'Restrict Public Buckets' setting on S3 buckets to prevent unauthorized access to bucket contents.",
    "Service": "Amazon S3"
  },
  {
    "Threat ID": "S3_025",
    "Threat Name": "S3 Bucket Does Not Restrict Public Buckets",
    "Source": "Misconfigured Access Control",
    "Target": "Amazon S3 Public Access Block",
    "Description": "S3 buckets without 'Restrict Public Buckets' enabled may allow unintended public access, increasing the risk of data exposure.",
    "Mitigation": "Enable the 'Restrict Public Buckets' setting in S3 public access block configurations to prevent unauthorized access.",
    "Service": "Amazon S3"
  },
  {
    "Threat ID": "S3_026",
    "Threat Name": "S3 Bucket Allows Public WRITE Access",
    "Source": "Misconfigured Access Control",
    "Target": "Amazon S3 Bucket",
    "Description": "S3 buckets that allow WRITE permissions to everyone could enable unauthorized users to upload or modify content, leading to data integrity issues and potential malware injection.",
    "Mitigation": "Ensure the S3 bucket does not allow public WRITE access by configuring bucket policies and ACLs appropriately.",
    "Service": "Amazon S3"
  },
  {
    "Threat ID": "S3_027",
    "Threat Name": "S3 Bucket Has Public WRITE Access ACL",
    "Source": "Misconfigured ACL Permissions",
    "Target": "Amazon S3 Bucket",
    "Description": "S3 buckets with ACLs that allow public WRITE access expose stored objects to unauthorized modifications, increasing the risk of data corruption or malicious uploads.",
    "Mitigation": "Ensure S3 bucket ACLs do not allow public WRITE access. Use IAM policies and bucket policies to enforce strict access control.",
    "Service": "Amazon S3"
  },
  {
    "Threat ID": "S3_028",
    "Threat Name": "S3 Bucket Has Public WRITE Access ACL",
    "Source": "Misconfigured ACL Permissions",
    "Target": "Amazon S3 Bucket ACL",
    "Description": "S3 bucket ACLs allowing public WRITE access can lead to unauthorized data modifications, posing a security risk.",
    "Mitigation": "Ensure S3 bucket ACLs do not allow public WRITE access. Restrict permissions using IAM policies and S3 bucket policies.",
    "Service": "Amazon S3"
  },
  {
    "Threat ID": "EKS_003",
    "Threat Name": "EKS Cluster Without Secrets Encryption",
    "Source": "Unprotected Sensitive Data",
    "Target": "AWS EKS Cluster",
    "Description": "EKS clusters without secrets encryption enabled store Kubernetes secrets in plaintext in etcd, increasing the risk of credential leaks and unauthorized access.",
    "Mitigation": "Enable secrets encryption in EKS clusters using AWS KMS to protect sensitive information stored in etcd.",
    "Service": "AWS EKS"
  },
  {
    "Threat ID": "EKS_004",
    "Threat Name": "EKS Cluster Without Secrets Encryption",
    "Source": "Unprotected Sensitive Data",
    "Target": "AWS EKS Cluster",
    "Description": "EKS clusters without secrets encryption enabled store Kubernetes secrets in plaintext in etcd, increasing the risk of credential leaks and unauthorized access.",
    "Mitigation": "Enable secrets encryption in EKS clusters using AWS KMS to protect sensitive information stored in etcd.",
    "Service": "AWS EKS"
  },
  {
    "Threat ID": "APIGW_001",
    "Threat Name": "Publicly Accessible API Gateway Methods",
    "Source": "Misconfigured Access Control",
    "Target": "AWS API Gateway Method",
    "Description": "API Gateway methods that allow open access to backend resources may expose sensitive data and increase the risk of unauthorized access or abuse.",
    "Mitigation": "Ensure API Gateway methods enforce authentication and authorization controls to restrict access to trusted users and services.",
    "Service": "AWS API Gateway"
  },
  {
    "Threat ID": "APIGW_002",
    "Threat Name": "Publicly Accessible API Gateway Methods",
    "Source": "Misconfigured Access Control",
    "Target": "AWS API Gateway Method",
    "Description": "API Gateway methods that allow open access to backend resources may expose sensitive data and increase the risk of unauthorized access or abuse.",
    "Mitigation": "Ensure API Gateway methods enforce authentication and authorization controls to restrict access to trusted users and services.",
    "Service": "AWS API Gateway"
  },
  {
    "Threat ID": "IAM_016",
    "Threat Name": "Overly Permissive IAM Role Assumption",
    "Source": "Misconfigured Trust Relationships",
    "Target": "AWS IAM Role",
    "Description": "IAM roles that allow assumption by any AWS service or principal increase the risk of unauthorized privilege escalation and misuse.",
    "Mitigation": "Ensure IAM roles specify only required trusted entities in the assume role policy to follow the principle of least privilege.",
    "Service": "AWS IAM"
  },
  {
    "Threat ID": "IAM_017",
    "Threat Name": "Overly Permissive IAM Role Assumption",
    "Source": "Misconfigured Trust Relationships",
    "Target": "AWS IAM Role",
    "Description": "IAM roles that allow assumption by any AWS service or principal increase the risk of unauthorized privilege escalation and misuse.",
    "Mitigation": "Ensure IAM roles specify only required trusted entities in the assume role policy to follow the principle of least privilege.",
    "Service": "AWS IAM"
  },
  {
    "Threat ID": "IAM_018",
    "Threat Name": "Overly Permissive IAM Role Assumption",
    "Source": "Misconfigured Trust Relationships",
    "Target": "AWS IAM Role",
    "Description": "IAM roles that allow assume role permissions across all services create a security risk by allowing unauthorized entities to assume elevated privileges.",
    "Mitigation": "Ensure IAM role assumption policies restrict access to specific trusted AWS services or principals following the principle of least privilege.",
    "Service": "AWS IAM"
  },
  {
    "Threat ID": "IAM_019",
    "Threat Name": "Overly Permissive IAM Role Assumption",
    "Source": "Misconfigured Trust Relationships",
    "Target": "AWS IAM Role",
    "Description": "IAM roles that allow assume role permissions across all services create a security risk by allowing unauthorized entities to assume elevated privileges.",
    "Mitigation": "Ensure IAM role assumption policies restrict access to specific trusted AWS services or principals following the principle of least privilege.",
    "Service": "AWS IAM"
  },
  {
    "Threat ID": "IAM_020",
    "Threat Name": "Overly Permissive IAM Policies in Groups",
    "Source": "Excessive Privileges",
    "Target": "AWS IAM Group",
    "Description": "IAM policies assigned to groups that allow full administrative privileges ('*-*') create security risks by granting excessive permissions.",
    "Mitigation": "Ensure IAM policies follow the principle of least privilege and avoid assigning full administrative access to IAM groups.",
    "Service": "AWS IAM"
  },
  {
    "Threat ID": "IAM_021",
    "Threat Name": "Overly Permissive IAM Policies",
    "Source": "Excessive Privileges",
    "Target": "AWS IAM Policy",
    "Description": "IAM policies that allow full administrative privileges ('*-*') create security risks by granting excessive permissions to users or roles.",
    "Mitigation": "Ensure IAM policies follow the principle of least privilege and avoid assigning full administrative access.",
    "Service": "AWS IAM"
  },
  {
    "Threat ID": "IAM_022",
    "Threat Name": "Overly Permissive IAM Policies in Roles",
    "Source": "Excessive Privileges",
    "Target": "AWS IAM Role",
    "Description": "IAM roles with policies that allow full administrative privileges ('*-*') expose the environment to privilege escalation and unauthorized actions.",
    "Mitigation": "Ensure IAM role policies restrict permissions based on necessity and avoid using wildcard actions ('*-*').",
    "Service": "AWS IAM"
  },
  {
    "Threat ID": "IAM_023",
    "Threat Name": "Overly Permissive IAM Policies Assigned to Users",
    "Source": "Excessive Privileges",
    "Target": "AWS IAM User",
    "Description": "IAM users with policies that allow full administrative privileges ('*-*') pose a significant security risk by granting excessive permissions.",
    "Mitigation": "Ensure IAM policies assigned to users follow the principle of least privilege and avoid granting full administrative access.",
    "Service": "AWS IAM"
  },
  {
    "Threat ID": "IAM_024",
    "Threat Name": "Overly Permissive IAM Policies in Groups",
    "Source": "Excessive Privileges",
    "Target": "AWS IAM Group Policy",
    "Description": "IAM group policies that allow full administrative privileges ('*-*') create security risks by granting excessive permissions to all group members.",
    "Mitigation": "Ensure IAM policies applied to groups follow the principle of least privilege and restrict access based on necessity.",
    "Service": "AWS IAM"
  },
  {
    "Threat ID": "IAM_025",
    "Threat Name": "Overly Permissive IAM Policies",
    "Source": "Excessive Privileges",
    "Target": "AWS IAM Policy",
    "Description": "IAM policies allowing full administrative privileges ('*-*') expose the AWS environment to privilege escalation and unauthorized actions.",
    "Mitigation": "Ensure IAM policies are configured to grant only necessary permissions and avoid using wildcard actions ('*-*').",
    "Service": "AWS IAM"
  },
  {
    "Threat ID": "IAM_026",
    "Threat Name": "Overly Permissive IAM Role Policies",
    "Source": "Excessive Privileges",
    "Target": "AWS IAM Role Policy",
    "Description": "IAM role policies that allow full administrative privileges ('*-*') expose the environment to privilege escalation and security threats.",
    "Mitigation": "Ensure IAM role policies follow the principle of least privilege by restricting permissions to only necessary actions.",
    "Service": "AWS IAM"
  },
  {
    "Threat ID": "IAM_027",
    "Threat Name": "Overly Permissive IAM User Policies",
    "Source": "Excessive Privileges",
    "Target": "AWS IAM User Policy",
    "Description": "IAM user policies granting full administrative privileges ('*-*') increase the risk of unauthorized access and privilege escalation.",
    "Mitigation": "Ensure IAM user policies enforce least privilege principles and restrict permissions based on user roles and responsibilities.",
    "Service": "AWS IAM"
  },
  {
    "Threat ID": "IAM_028",
    "Threat Name": "Overly Permissive IAM SSO Permission Set Policy",
    "Source": "Excessive Privileges",
    "Target": "AWS SSO Permission Set Inline Policy",
    "Description": "IAM permission set policies that allow full administrative privileges ('*-*') create security risks by granting excessive permissions to users accessing AWS accounts via SSO.",
    "Mitigation": "Ensure IAM SSO permission set policies enforce least privilege principles and do not use wildcard actions ('*-*').",
    "Service": "AWS IAM Identity Center (SSO)"
  },
  {
    "Threat ID": "IAM_029",
    "Threat Name": "Overly Permissive IAM Group Policies",
    "Source": "Misconfigured Access Control",
    "Target": "AWS IAM Group",
    "Description": "IAM group policies that allow wildcard ('*') actions grant excessive privileges, increasing the risk of unauthorized access and privilege escalation.",
    "Mitigation": "Ensure IAM group policies specify only necessary permissions instead of using wildcard actions ('*') to enforce least privilege.",
    "Service": "AWS IAM"
  },
  {
    "Threat ID": "IAM_030",
    "Threat Name": "Overly Permissive IAM Policies",
    "Source": "Misconfigured Access Control",
    "Target": "AWS IAM Policy",
    "Description": "IAM policies that allow wildcard ('*') actions grant excessive privileges, increasing the risk of privilege escalation and unauthorized access.",
    "Mitigation": "Ensure IAM policies specify only required actions and resources to enforce the principle of least privilege.",
    "Service": "AWS IAM"
  },
  {
    "Threat ID": "IAM_031",
    "Threat Name": "Overly Permissive IAM Role Policies",
    "Source": "Misconfigured Access Control",
    "Target": "AWS IAM Role",
    "Description": "IAM roles with policies that allow wildcard ('*') actions expose the environment to excessive privilege risks, leading to potential security breaches.",
    "Mitigation": "Ensure IAM role policies specify only necessary actions and restrict access to trusted entities.",
    "Service": "AWS IAM"
  },
  {
    "Threat ID": "IAM_032",
    "Threat Name": "Overly Permissive IAM User Policies",
    "Source": "Misconfigured Access Control",
    "Target": "AWS IAM User",
    "Description": "IAM users with policies that allow wildcard ('*') actions pose a security risk by granting unnecessary permissions that can lead to privilege escalation.",
    "Mitigation": "Ensure IAM user policies enforce least privilege principles and restrict permissions based on user roles and responsibilities.",
    "Service": "AWS IAM"
  },
  {
    "Threat ID": "IAM_033",
    "Threat Name": "Overly Permissive IAM Group Policy",
    "Source": "Misconfigured Access Control",
    "Target": "AWS IAM Group Policy",
    "Description": "IAM group policies that allow wildcard ('*') actions grant excessive privileges, increasing the risk of unauthorized access and privilege escalation.",
    "Mitigation": "Ensure IAM group policies specify only necessary permissions instead of using wildcard actions ('*') to enforce least privilege.",
    "Service": "AWS IAM"
  },
  {
    "Threat ID": "IAM_034",
    "Threat Name": "Overly Permissive IAM Policy",
    "Source": "Misconfigured Access Control",
    "Target": "AWS IAM Policy",
    "Description": "IAM policies that allow wildcard ('*') actions grant excessive privileges, increasing the risk of privilege escalation and unauthorized access.",
    "Mitigation": "Ensure IAM policies specify only required actions and resources to enforce the principle of least privilege.",
    "Service": "AWS IAM"
  },
  {
    "Threat ID": "IAM_035",
    "Threat Name": "Overly Permissive IAM Role Policy",
    "Source": "Misconfigured Access Control",
    "Target": "AWS IAM Role Policy",
    "Description": "IAM role policies that allow wildcard ('*') actions expose the environment to excessive privilege risks, leading to potential security breaches.",
    "Mitigation": "Ensure IAM role policies specify only necessary actions and restrict access to trusted entities.",
    "Service": "AWS IAM"
  },
  {
    "Threat ID": "IAM_036",
    "Threat Name": "Overly Permissive IAM User Policy",
    "Source": "Misconfigured Access Control",
    "Target": "AWS IAM User Policy",
    "Description": "IAM users with policies that allow wildcard ('*') actions pose a security risk by granting unnecessary permissions that can lead to privilege escalation.",
    "Mitigation": "Ensure IAM user policies enforce least privilege principles and restrict permissions based on user roles and responsibilities.",
    "Service": "AWS IAM"
  },
  {
    "Threat ID": "IAM_037",
    "Threat Name": "Overly Permissive IAM SSO Permission Set Policy",
    "Source": "Excessive Privileges",
    "Target": "AWS IAM SSO Permission Set Inline Policy",
    "Description": "IAM permission set policies that allow full administrative privileges ('*-*') create security risks by granting excessive permissions to users accessing AWS accounts via SSO.",
    "Mitigation": "Ensure IAM SSO permission set policies enforce least privilege principles and do not use wildcard actions ('*-*').",
    "Service": "AWS IAM Identity Center (SSO)"
  },
  {
    "Threat ID": "REDSHIFT_001",
    "Threat Name": "Unencrypted Redshift Cluster Storage",
    "Source": "Storage Without Encryption",
    "Target": "AWS Redshift Cluster",
    "Description": "Redshift clusters that do not use encryption at rest expose sensitive analytical data to unauthorized access and data breaches.",
    "Mitigation": "Ensure that Redshift clusters are configured with encryption enabled using AWS KMS to protect data at rest.",
    "Service": "AWS Redshift"
  },
  {
    "Threat ID": "REDSHIFT_002",
    "Threat Name": "Unencrypted Redshift Cluster Storage",
    "Source": "Storage Without Encryption",
    "Target": "AWS Redshift Cluster",
    "Description": "Redshift clusters that do not use encryption at rest expose sensitive analytical data to unauthorized access and data breaches.",
    "Mitigation": "Ensure that Redshift clusters are configured with encryption enabled using AWS KMS to protect data at rest.",
    "Service": "AWS Redshift"
  },
  {
    "Threat ID": "ECS_001",
    "Threat Name": "ECS Cluster Lacks Container Insights",
    "Source": "Lack of Observability",
    "Target": "AWS ECS Cluster",
    "Description": "ECS clusters without container insights enabled lack visibility into resource usage, performance metrics, and security anomalies.",
    "Mitigation": "Enable Amazon CloudWatch Container Insights for ECS clusters to improve monitoring and detect anomalies in containerized workloads.",
    "Service": "AWS ECS"
  },
  {
    "Threat ID": "ECS_002",
    "Threat Name": "ECS Cluster Lacks Container Insights",
    "Source": "Lack of Observability",
    "Target": "AWS ECS Cluster",
    "Description": "ECS clusters without container insights enabled lack visibility into resource usage, performance metrics, and security anomalies.",
    "Mitigation": "Enable Amazon CloudWatch Container Insights for ECS clusters to improve monitoring and detect anomalies in containerized workloads.",
    "Service": "AWS ECS"
  },
  {
    "Threat ID": "CLOUDWATCH_001",
    "Threat Name": "CloudWatch Log Group Without Retention Policy",
    "Source": "Lack of Log Management",
    "Target": "AWS CloudWatch Log Group",
    "Description": "CloudWatch log groups that do not specify a retention period may lead to unnecessary storage costs and loss of important logs due to accidental deletion.",
    "Mitigation": "Ensure that CloudWatch log groups specify retention days to retain logs as per compliance and operational needs.",
    "Service": "AWS CloudWatch"
  },
  {
    "Threat ID": "CLOUDWATCH_002",
    "Threat Name": "CloudWatch Log Group Without Retention Policy",
    "Source": "Lack of Log Management",
    "Target": "AWS CloudWatch Log Group",
    "Description": "CloudWatch log groups that do not specify a retention period may lead to unnecessary storage costs and loss of important logs due to accidental deletion.",
    "Mitigation": "Ensure that CloudWatch log groups specify retention days to retain logs as per compliance and operational needs.",
    "Service": "AWS CloudWatch"
  },
  {
    "Threat ID": "CLOUDTRAIL_005",
    "Threat Name": "CloudTrail Not Enabled in All Regions",
    "Source": "Lack of Security Monitoring",
    "Target": "AWS CloudTrail",
    "Description": "CloudTrail not enabled in all AWS regions increases the risk of missing security events in non-primary regions, potentially leading to undetected security breaches.",
    "Mitigation": "Ensure CloudTrail is enabled in all AWS regions to capture security-related events across the entire AWS account.",
    "Service": "AWS CloudTrail"
  },
  {
    "Threat ID": "CLOUDTRAIL_006",
    "Threat Name": "CloudTrail Not Enabled in All Regions",
    "Source": "Lack of Security Monitoring",
    "Target": "AWS CloudTrail",
    "Description": "CloudTrail not enabled in all AWS regions increases the risk of missing security events in non-primary regions, potentially leading to undetected security breaches.",
    "Mitigation": "Ensure CloudTrail is enabled in all AWS regions to capture security-related events across the entire AWS account.",
    "Service": "AWS CloudTrail"
  },
  {
    "Threat ID": "CLOUDFRONT_003",
    "Threat Name": "CloudFront Distribution Without WAF Protection",
    "Source": "Lack of Web Application Protection",
    "Target": "AWS CloudFront Distribution",
    "Description": "CloudFront distributions that do not have AWS WAF enabled are at higher risk of web application attacks such as SQL injection, cross-site scripting (XSS), and DDoS.",
    "Mitigation": "Ensure AWS WAF is enabled on CloudFront distributions to protect against common web threats.",
    "Service": "AWS CloudFront"
  },
  {
    "Threat ID": "CLOUDFRONT_004",
    "Threat Name": "CloudFront Distribution Without WAF Protection",
    "Source": "Lack of Web Application Protection",
    "Target": "AWS CloudFront Distribution",
    "Description": "CloudFront distributions that do not have AWS WAF enabled are at higher risk of web application attacks such as SQL injection, cross-site scripting (XSS), and DDoS.",
    "Mitigation": "Ensure AWS WAF is enabled on CloudFront distributions to protect against common web threats.",
    "Service": "AWS CloudFront"
  },
  {
    "Threat ID": "MQ_002",
    "Threat Name": "Amazon MQ Broker Publicly Accessible",
    "Source": "Misconfigured Network Access",
    "Target": "AWS Amazon MQ Broker",
    "Description": "Amazon MQ brokers that are publicly accessible increase the risk of unauthorized access, data leakage, and potential message interception.",
    "Mitigation": "Ensure Amazon MQ brokers are configured with private endpoints and security groups restrict access to only trusted networks.",
    "Service": "AWS Amazon MQ"
  },
  {
    "Threat ID": "MQ_003",
    "Threat Name": "Amazon MQ Broker Publicly Exposed",
    "Source": "Misconfigured Network Access",
    "Target": "AWS MQ Broker",
    "Description": "MQ brokers that are publicly exposed create a security risk by allowing unauthorized access to message queues and communication channels.",
    "Mitigation": "Ensure Amazon MQ brokers are not publicly exposed by configuring VPC endpoints and restricting access using security groups and IAM policies.",
    "Service": "AWS Amazon MQ"
  },
  {
    "Threat ID": "S3_029",
    "Threat Name": "S3 Bucket Allows Actions with Any Principal",
    "Source": "Misconfigured Bucket Policy",
    "Target": "Amazon S3 Bucket",
    "Description": "S3 bucket policies allowing actions for any principal ('*') create a risk of unauthorized access and potential data exposure.",
    "Mitigation": "Ensure S3 bucket policies restrict actions to specific principals, following the principle of least privilege.",
    "Service": "Amazon S3"
  },
  {
    "Threat ID": "S3_030",
    "Threat Name": "S3 Bucket Allows Actions with Any Principal",
    "Source": "Misconfigured Bucket Policy",
    "Target": "Amazon S3 Bucket Policy",
    "Description": "S3 bucket policies that do not restrict actions to specific principals allow unauthorized entities to access bucket contents.",
    "Mitigation": "Ensure S3 bucket policies define explicit IAM principals instead of using wildcard ('*') permissions.",
    "Service": "Amazon S3"
  },
  {
    "Threat ID": "REDSHIFT_003",
    "Threat Name": "Redshift Cluster Logging Disabled",
    "Source": "Lack of Security Monitoring",
    "Target": "AWS Redshift Cluster",
    "Description": "Redshift clusters without logging enabled lack visibility into access patterns, queries, and potential security incidents.",
    "Mitigation": "Ensure Amazon Redshift logging is enabled to capture audit logs for compliance and security monitoring.",
    "Service": "AWS Redshift"
  },
  {
    "Threat ID": "REDSHIFT_004",
    "Threat Name": "Redshift Cluster Logging Disabled",
    "Source": "Lack of Security Monitoring",
    "Target": "AWS Redshift Cluster",
    "Description": "Redshift clusters without logging enabled lack visibility into access patterns, queries, and potential security incidents.",
    "Mitigation": "Ensure Amazon Redshift logging is enabled to capture audit logs for compliance and security monitoring.",
    "Service": "AWS Redshift"
  },
  {
    "Threat ID": "SQS_001",
    "Threat Name": "Overly Permissive SQS Queue Policy",
    "Source": "Misconfigured Access Control",
    "Target": "AWS SQS Queue Policy",
    "Description": "SQS queue policies that allow all ('*') actions grant excessive permissions, increasing the risk of unauthorized access and abuse.",
    "Mitigation": "Ensure SQS queue policies specify only required actions and restrict access to trusted principals.",
    "Service": "AWS SQS"
  },
  {
    "Threat ID": "APIGW_003",
    "Threat Name": "API Gateway X-Ray Tracing Disabled",
    "Source": "Lack of Observability",
    "Target": "AWS API Gateway Stage",
    "Description": "API Gateway stages without X-Ray tracing enabled lack visibility into request flows and potential performance or security issues.",
    "Mitigation": "Enable AWS X-Ray tracing for API Gateway stages to improve observability and troubleshooting.",
    "Service": "AWS API Gateway"
  },
  {
    "Threat ID": "APIGW_004",
    "Threat Name": "API Gateway X-Ray Tracing Disabled",
    "Source": "Lack of Observability",
    "Target": "AWS Serverless API",
    "Description": "Serverless API Gateway instances without X-Ray tracing enabled lack visibility into request flows and potential performance or security issues.",
    "Mitigation": "Enable AWS X-Ray tracing for API Gateway instances to improve observability and troubleshooting.",
    "Service": "AWS API Gateway"
  },
  {
    "Threat ID": "APIGW_005",
    "Threat Name": "API Gateway X-Ray Tracing Disabled",
    "Source": "Lack of Observability",
    "Target": "AWS API Gateway Stage",
    "Description": "API Gateway stages without X-Ray tracing enabled lack visibility into request flows and potential performance or security issues.",
    "Mitigation": "Enable AWS X-Ray tracing for API Gateway stages to improve observability and troubleshooting.",
    "Service": "AWS API Gateway"
  },
  {
    "Threat ID": "DOCDB_001",
    "Threat Name": "Unencrypted DocumentDB Cluster",
    "Source": "Storage Without Encryption",
    "Target": "AWS DocumentDB Cluster",
    "Description": "DocumentDB clusters that do not use encryption at rest expose sensitive database contents to unauthorized access and potential data breaches.",
    "Mitigation": "Ensure AWS DocumentDB clusters are configured with encryption enabled using AWS KMS to protect data at rest.",
    "Service": "AWS DocumentDB"
  },
  {
    "Threat ID": "DOCDB_002",
    "Threat Name": "Unencrypted DocumentDB Cluster",
    "Source": "Storage Without Encryption",
    "Target": "AWS DocumentDB Cluster",
    "Description": "DocumentDB clusters that do not use encryption at rest expose sensitive database contents to unauthorized access and potential data breaches.",
    "Mitigation": "Ensure AWS DocumentDB clusters are configured with encryption enabled using AWS KMS to protect data at rest.",
    "Service": "AWS DocumentDB"
  },
  {
    "Threat ID": "GLOBALACCELERATOR_001",
    "Threat Name": "Global Accelerator Without Flow Logs",
    "Source": "Lack of Network Monitoring",
    "Target": "AWS Global Accelerator",
    "Description": "Global Accelerator instances without flow logs enabled lack visibility into traffic patterns, increasing the difficulty of detecting potential security threats.",
    "Mitigation": "Ensure AWS Global Accelerator flow logs are enabled to monitor traffic and detect potential anomalies.",
    "Service": "AWS Global Accelerator"
  },
  {
    "Threat ID": "APIGW_006",
    "Threat Name": "API Gateway Access Logging Disabled",
    "Source": "Lack of Security Monitoring",
    "Target": "AWS API Gateway Stage",
    "Description": "API Gateway stages without access logging enabled lack visibility into request details, making it difficult to track API usage and detect security threats.",
    "Mitigation": "Enable access logging for API Gateway stages to capture request and response data for security monitoring and troubleshooting.",
    "Service": "AWS API Gateway"
  },
  {
    "Threat ID": "APIGW_007",
    "Threat Name": "API Gateway Access Logging Disabled",
    "Source": "Lack of Security Monitoring",
    "Target": "AWS Serverless API",
    "Description": "Serverless API Gateway instances without access logging enabled lack visibility into API traffic, making it difficult to detect anomalies and security threats.",
    "Mitigation": "Ensure access logging is enabled for API Gateway instances to monitor request details and enhance security analysis.",
    "Service": "AWS API Gateway"
  },
  {
    "Threat ID": "APIGW_008",
    "Threat Name": "API Gateway Access Logging Disabled",
    "Source": "Lack of Security Monitoring",
    "Target": "AWS API Gateway Stage",
    "Description": "API Gateway stages without access logging enabled lack visibility into request details, making it difficult to track API usage and detect security threats.",
    "Mitigation": "Enable access logging for API Gateway stages to capture request and response data for security monitoring and troubleshooting.",
    "Service": "AWS API Gateway"
  },
  {
    "Threat ID": "APIGW_009",
    "Threat Name": "API Gateway Access Logging Disabled",
    "Source": "Lack of Security Monitoring",
    "Target": "AWS API Gateway V2 Stage",
    "Description": "API Gateway V2 stages without access logging enabled lack visibility into API traffic, making it difficult to detect anomalies and security threats.",
    "Mitigation": "Ensure access logging is enabled for API Gateway V2 stages to monitor request details and enhance security analysis.",
    "Service": "AWS API Gateway"
  },
  {
    "Threat ID": "ATHENA_001",
    "Threat Name": "Unencrypted Athena Database",
    "Source": "Storage Without Encryption",
    "Target": "AWS Athena Database",
    "Description": "Athena databases that do not use encryption at rest expose query results and metadata to unauthorized access and potential data breaches.",
    "Mitigation": "Ensure Athena databases are configured with encryption enabled using AWS KMS to protect data at rest.",
    "Service": "AWS Athena"
  },
  {
    "Threat ID": "CODEBUILD_001",
    "Threat Name": "CodeBuild Project Encryption Disabled",
    "Source": "Storage Without Encryption",
    "Target": "AWS CodeBuild Project",
    "Description": "CodeBuild projects without encryption enabled store artifacts and logs in an unprotected state, increasing the risk of data leaks.",
    "Mitigation": "Ensure AWS CodeBuild projects use encryption for storage and logs by enabling AWS KMS encryption.",
    "Service": "AWS CodeBuild"
  },
  {
    "Threat ID": "CODEBUILD_002",
    "Threat Name": "CodeBuild Project Encryption Disabled",
    "Source": "Storage Without Encryption",
    "Target": "AWS CodeBuild Project",
    "Description": "CodeBuild projects without encryption enabled store artifacts and logs in an unprotected state, increasing the risk of data leaks.",
    "Mitigation": "Ensure AWS CodeBuild projects use encryption for storage and logs by enabling AWS KMS encryption.",
    "Service": "AWS CodeBuild"
  },
  {
    "Threat ID": "EC2_014",
    "Threat Name": "Instance Metadata Service Version 1 Enabled",
    "Source": "Lack of Security Hardening",
    "Target": "AWS EC2 Launch Template",
    "Description": "Instances using Instance Metadata Service Version 1 (IMDSv1) are vulnerable to SSRF attacks, potentially exposing metadata and credentials to attackers.",
    "Mitigation": "Ensure that EC2 instances use IMDSv2 by disabling IMDSv1 and enforcing token-based authentication.",
    "Service": "AWS EC2"
  },
  {
    "Threat ID": "EC2_015",
    "Threat Name": "Instance Metadata Service Version 1 Enabled",
    "Source": "Lack of Security Hardening",
    "Target": "AWS EC2 Instance",
    "Description": "Instances using Instance Metadata Service Version 1 (IMDSv1) are vulnerable to SSRF attacks, potentially exposing metadata and credentials to attackers.",
    "Mitigation": "Ensure that EC2 instances use IMDSv2 by disabling IMDSv1 and enforcing token-based authentication.",
    "Service": "AWS EC2"
  },
  {
    "Threat ID": "EC2_016",
    "Threat Name": "Instance Metadata Service Version 1 Enabled",
    "Source": "Lack of Security Hardening",
    "Target": "AWS EC2 Launch Configuration",
    "Description": "Launch configurations that allow IMDSv1 expose instances to potential metadata and credential theft via SSRF attacks.",
    "Mitigation": "Ensure that launch configurations enforce IMDSv2 with session tokens enabled.",
    "Service": "AWS EC2"
  },
  {
    "Threat ID": "EC2_017",
    "Threat Name": "Instance Metadata Service Version 1 Enabled",
    "Source": "Lack of Security Hardening",
    "Target": "AWS EC2 Launch Template",
    "Description": "Launch templates using IMDSv1 increase the risk of SSRF-based attacks and potential unauthorized access to instance metadata.",
    "Mitigation": "Ensure that launch templates enforce the use of IMDSv2 with session authentication.",
    "Service": "AWS EC2"
  },
  {
    "Threat ID": "MSK_001",
    "Threat Name": "MSK Cluster Logging Disabled",
    "Source": "Lack of Security Monitoring",
    "Target": "AWS MSK Cluster",
    "Description": "Amazon MSK clusters without logging enabled lack visibility into access patterns and security incidents, making it difficult to detect unauthorized access or malicious activity.",
    "Mitigation": "Ensure that Amazon MSK logging is enabled to capture audit logs for security monitoring and compliance.",
    "Service": "AWS MSK"
  },
  {
    "Threat ID": "MSK_002",
    "Threat Name": "MSK Cluster Logging Disabled",
    "Source": "Lack of Security Monitoring",
    "Target": "AWS MSK Cluster",
    "Description": "Amazon MSK clusters without logging enabled lack visibility into access patterns and security incidents, making it difficult to detect unauthorized access or malicious activity.",
    "Mitigation": "Ensure that Amazon MSK logging is enabled to capture audit logs for security monitoring and compliance.",
    "Service": "AWS MSK"
  },
  {
    "Threat ID": "MSK_003",
    "Threat Name": "MSK Cluster Encryption Disabled",
    "Source": "Storage and Transmission Without Encryption",
    "Target": "AWS MSK Cluster",
    "Description": "Amazon MSK clusters without encryption at rest and in transit expose sensitive streaming data to unauthorized access and potential interception.",
    "Mitigation": "Ensure that Amazon MSK clusters have encryption enabled at rest using AWS KMS and encryption in transit using TLS to protect sensitive data.",
    "Service": "AWS MSK"
  },
  {
    "Threat ID": "MSK_004",
    "Threat Name": "MSK Cluster Encryption Disabled",
    "Source": "Storage and Transmission Without Encryption",
    "Target": "AWS MSK Cluster",
    "Description": "Amazon MSK clusters without encryption at rest and in transit expose sensitive streaming data to unauthorized access and potential interception.",
    "Mitigation": "Ensure that Amazon MSK clusters have encryption enabled at rest using AWS KMS and encryption in transit using TLS to protect sensitive data.",
    "Service": "AWS MSK"
  },
  {
    "Threat ID": "ATHENA_002",
    "Threat Name": "Athena Workgroup Allows Clients to Disable Encryption",
    "Source": "Unprotected Query Results",
    "Target": "AWS Athena Workgroup",
    "Description": "Athena workgroups that do not enforce encryption allow clients to store unencrypted query results, exposing sensitive data to unauthorized access.",
    "Mitigation": "Ensure Athena workgroups enforce encryption settings to prevent clients from disabling encryption when storing query results.",
    "Service": "AWS Athena"
  },
  {
    "Threat ID": "ATHENA_003",
    "Threat Name": "Athena Workgroup Allows Clients to Disable Encryption",
    "Source": "Unprotected Query Results",
    "Target": "AWS Athena Workgroup",
    "Description": "Athena workgroups that do not enforce encryption allow clients to store unencrypted query results, exposing sensitive data to unauthorized access.",
    "Mitigation": "Ensure Athena workgroups enforce encryption settings to prevent clients from disabling encryption when storing query results.",
    "Service": "AWS Athena"
  },
  {
    "Threat ID": "ELASTICSEARCH_001",
    "Threat Name": "Elasticsearch Domain Without HTTPS Enforcement",
    "Source": "Unencrypted Data Transmission",
    "Target": "AWS Elasticsearch Domain",
    "Description": "Elasticsearch domains that do not enforce HTTPS allow data to be transmitted in plaintext, increasing the risk of interception and unauthorized access.",
    "Mitigation": "Ensure that Elasticsearch domains enforce HTTPS to secure data in transit and prevent unauthorized access.",
    "Service": "AWS Elasticsearch"
  },
  {
    "Threat ID": "ELASTICSEARCH_002",
    "Threat Name": "Elasticsearch Domain Without HTTPS Enforcement",
    "Source": "Unencrypted Data Transmission",
    "Target": "AWS Elasticsearch Domain",
    "Description": "Elasticsearch domains that do not enforce HTTPS allow data to be transmitted in plaintext, increasing the risk of interception and unauthorized access.",
    "Mitigation": "Ensure that Elasticsearch domains enforce HTTPS to secure data in transit and prevent unauthorized access.",
    "Service": "AWS Elasticsearch"
  },
  {
    "Threat ID": "OPENSEARCH_001",
    "Threat Name": "OpenSearch Domain Without HTTPS Enforcement",
    "Source": "Unencrypted Data Transmission",
    "Target": "AWS OpenSearch Domain",
    "Description": "OpenSearch domains that do not enforce HTTPS allow data to be transmitted in plaintext, increasing the risk of interception and unauthorized access.",
    "Mitigation": "Ensure that OpenSearch domains enforce HTTPS to secure data in transit and prevent unauthorized access.",
    "Service": "AWS OpenSearch"
  },
  {
    "Threat ID": "ELASTICSEARCH_003",
    "Threat Name": "Elasticsearch Domain Logging Disabled",
    "Source": "Lack of Security Monitoring",
    "Target": "AWS Elasticsearch Domain",
    "Description": "Elasticsearch domains without logging enabled lack visibility into access patterns, search queries, and potential security incidents.",
    "Mitigation": "Ensure Elasticsearch logging is enabled to capture audit logs for security monitoring and compliance.",
    "Service": "AWS Elasticsearch"
  },
  {
    "Threat ID": "OPENSEARCH_002",
    "Threat Name": "OpenSearch Domain Logging Disabled",
    "Source": "Lack of Security Monitoring",
    "Target": "AWS OpenSearch Domain",
    "Description": "OpenSearch domains without logging enabled lack visibility into access patterns, search queries, and potential security incidents.",
    "Mitigation": "Ensure OpenSearch logging is enabled to capture audit logs for security monitoring and compliance.",
    "Service": "AWS OpenSearch"
  },
  {
    "Threat ID": "ELASTICSEARCH_004",
    "Threat Name": "Elasticsearch Domain Logging Disabled",
    "Source": "Lack of Security Monitoring",
    "Target": "AWS Elasticsearch Domain",
    "Description": "Elasticsearch domains without logging enabled lack visibility into access patterns, search queries, and potential security incidents.",
    "Mitigation": "Ensure Elasticsearch logging is enabled to capture audit logs for security monitoring and compliance.",
    "Service": "AWS Elasticsearch"
  },
  {
    "Threat ID": "OPENSEARCH_003",
    "Threat Name": "OpenSearch Domain Logging Disabled",
    "Source": "Lack of Security Monitoring",
    "Target": "AWS OpenSearch Domain",
    "Description": "OpenSearch domains without logging enabled lack visibility into access patterns, search queries, and potential security incidents.",
    "Mitigation": "Ensure OpenSearch logging is enabled to capture audit logs for security monitoring and compliance.",
    "Service": "AWS OpenSearch"
  },
  {
    "Threat ID": "DOCDB_003",
    "Threat Name": "DocumentDB Logging Disabled",
    "Source": "Lack of Security Monitoring",
    "Target": "AWS DocumentDB Cluster",
    "Description": "DocumentDB clusters without logging enabled lack visibility into database queries and access patterns, increasing the risk of undetected security incidents.",
    "Mitigation": "Ensure DocumentDB logging is enabled to capture audit logs for compliance and security monitoring.",
    "Service": "AWS DocumentDB"
  },
  {
    "Threat ID": "DOCDB_004",
    "Threat Name": "DocumentDB Logging Disabled",
    "Source": "Lack of Security Monitoring",
    "Target": "AWS DocumentDB Cluster",
    "Description": "DocumentDB clusters without logging enabled lack visibility into database queries and access patterns, increasing the risk of undetected security incidents.",
    "Mitigation": "Ensure DocumentDB logging is enabled to capture audit logs for compliance and security monitoring.",
    "Service": "AWS DocumentDB"
  },
  {
    "Threat ID": "CLOUDFRONT_005",
    "Threat Name": "CloudFront Distribution Without Access Logging",
    "Source": "Lack of Security Monitoring",
    "Target": "AWS CloudFront Distribution",
    "Description": "CloudFront distributions without access logging enabled lack visibility into content delivery access patterns, making it difficult to detect unauthorized access or abuse.",
    "Mitigation": "Enable AWS CloudFront access logging to capture detailed access logs for security monitoring and troubleshooting.",
    "Service": "AWS CloudFront"
  },
  {
    "Threat ID": "CLOUDFRONT_006",
    "Threat Name": "CloudFront Distribution Without Access Logging",
    "Source": "Lack of Security Monitoring",
    "Target": "AWS CloudFront Distribution",
    "Description": "CloudFront distributions without access logging enabled lack visibility into content delivery access patterns, making it difficult to detect unauthorized access or abuse.",
    "Mitigation": "Enable AWS CloudFront access logging to capture detailed access logs for security monitoring and troubleshooting.",
    "Service": "AWS CloudFront"
  },
  {
    "Threat ID": "REDSHIFT_005",
    "Threat Name": "Publicly Accessible Redshift Cluster",
    "Source": "Misconfigured Network Access",
    "Target": "AWS Redshift Cluster",
    "Description": "Redshift clusters that are publicly accessible increase the risk of unauthorized access, data exfiltration, and potential data breaches.",
    "Mitigation": "Ensure that Redshift clusters are configured to restrict public access by using VPC security groups and IAM policies.",
    "Service": "AWS Redshift"
  },
  {
    "Threat ID": "REDSHIFT_006",
    "Threat Name": "Publicly Accessible Redshift Cluster",
    "Source": "Misconfigured Network Access",
    "Target": "AWS Redshift Cluster",
    "Description": "Redshift clusters that are publicly accessible increase the risk of unauthorized access, data exfiltration, and potential data breaches.",
    "Mitigation": "Ensure that Redshift clusters are configured to restrict public access by using VPC security groups and IAM policies.",
    "Service": "AWS Redshift"
  },
  {
    "Threat ID": "EC2_018",
    "Threat Name": "EC2 Instance With Public IP",
    "Source": "Misconfigured Network Access",
    "Target": "AWS EC2 Instance",
    "Description": "EC2 instances assigned public IPs are at risk of exposure to unauthorized internet access, increasing the attack surface for exploitation.",
    "Mitigation": "Ensure EC2 instances do not have public IP addresses unless explicitly required for public-facing services. Use private subnets and AWS NAT Gateways for internet-bound traffic.",
    "Service": "AWS EC2"
  },
  {
    "Threat ID": "EC2_019",
    "Threat Name": "EC2 Instance With Public IP",
    "Source": "Misconfigured Network Access",
    "Target": "AWS EC2 Launch Template",
    "Description": "EC2 instances launched from a launch template with public IPs are at risk of unauthorized internet exposure, increasing the likelihood of compromise.",
    "Mitigation": "Ensure that EC2 launch templates do not configure public IP addresses unless explicitly required. Use private networking with appropriate security controls.",
    "Service": "AWS EC2"
  },
  {
    "Threat ID": "EC2_020",
    "Threat Name": "EC2 Instance With Public IP",
    "Source": "Misconfigured Network Access",
    "Target": "AWS EC2 Instance",
    "Description": "EC2 instances assigned public IPs are at risk of exposure to unauthorized internet access, increasing the attack surface for exploitation.",
    "Mitigation": "Ensure EC2 instances do not have public IP addresses unless explicitly required for public-facing services. Use private subnets and AWS NAT Gateways for internet-bound traffic.",
    "Service": "AWS EC2"
  },
  {
    "Threat ID": "EC2_021",
    "Threat Name": "EC2 Instance With Public IP",
    "Source": "Misconfigured Network Access",
    "Target": "AWS EC2 Instance (Terraform Configuration)",
    "Description": "Terraform configurations that provision EC2 instances with public IPs create a security risk by exposing instances to external networks.",
    "Mitigation": "Ensure Terraform configurations do not assign public IPs to EC2 instances unless necessary. Use private networking and security groups for secure access.",
    "Service": "AWS EC2"
  },
  {
    "Threat ID": "EC2_022",
    "Threat Name": "EC2 Instance With Public IP",
    "Source": "Misconfigured Network Access",
    "Target": "AWS EC2 Instance (JSON Configuration)",
    "Description": "JSON-based infrastructure configurations provisioning EC2 instances with public IPs pose a risk of unauthorized external exposure.",
    "Mitigation": "Ensure JSON configurations do not allow EC2 instances to be assigned public IPs unless explicitly required. Use private subnets and appropriate security controls.",
    "Service": "AWS EC2"
  },
  {
    "Threat ID": "EC2_023",
    "Threat Name": "EC2 Instance With Public IP",
    "Source": "Misconfigured Network Access",
    "Target": "AWS EC2 Instance (Nested Block Configuration)",
    "Description": "Nested configuration blocks that provision EC2 instances with public IPs increase the risk of exposure to unauthorized internet access.",
    "Mitigation": "Review and restrict nested configuration blocks from assigning public IPs to EC2 instances. Implement security best practices for networking.",
    "Service": "AWS EC2"
  },
  {
    "Threat ID": "EC2_024",
    "Threat Name": "EC2 Instance With Public IP",
    "Source": "Misconfigured Network Access",
    "Target": "AWS EC2 Instance (Multi-level Nested Configuration)",
    "Description": "Multi-level nested configurations provisioning EC2 instances with public IPs expose them to external threats, increasing the attack surface.",
    "Mitigation": "Ensure EC2 instances defined in deeply nested configurations do not receive public IPs unless explicitly required. Implement VPC security best practices.",
    "Service": "AWS EC2"
  },
  {
    "Threat ID": "EC2_025",
    "Threat Name": "EC2 Instance With Public IP",
    "Source": "Misconfigured Network Access",
    "Target": "AWS EC2 Instance (Nested Block Configuration)",
    "Description": "Nested configuration blocks that provision EC2 instances with public IPs increase the risk of exposure to unauthorized internet access.",
    "Mitigation": "Review and restrict nested configuration blocks from assigning public IPs to EC2 instances. Implement security best practices for networking.",
    "Service": "AWS EC2"
  },
  {
    "Threat ID": "EC2_026",
    "Threat Name": "EC2 Instance With Public IP",
    "Source": "Misconfigured Network Access",
    "Target": "AWS EC2 Instance (Deeply Nested Block Configuration)",
    "Description": "Multi-level nested configuration blocks provisioning EC2 instances with public IPs expose them to external threats, increasing the attack surface.",
    "Mitigation": "Ensure EC2 instances defined in deeply nested configurations do not receive public IPs unless explicitly required. Implement VPC security best practices.",
    "Service": "AWS EC2"
  },
  {
    "Threat ID": "EC2_027",
    "Threat Name": "EC2 Instance With Public IP",
    "Source": "Misconfigured Network Access",
    "Target": "AWS EC2 Instance (Deeply Nested Block Configuration)",
    "Description": "Multi-level nested configurations provisioning EC2 instances with public IPs expose them to external threats, increasing the attack surface.",
    "Mitigation": "Ensure EC2 instances defined in deeply nested configurations do not receive public IPs unless explicitly required. Implement VPC security best practices.",
    "Service": "AWS EC2"
  },
  {
    "Threat ID": "EC2_028",
    "Threat Name": "EC2 Instance With Public IP in Task Configuration",
    "Source": "Misconfigured Network Access",
    "Target": "AWS EC2 Instance (Task Definition)",
    "Description": "Task definitions that configure EC2 instances with public IPs expose them to unauthorized access, increasing the risk of data breaches and system compromise.",
    "Mitigation": "Ensure EC2 instances used within task definitions do not have public IPs assigned. Use private networking and security groups for secure communication.",
    "Service": "AWS EC2"
  },
  {
    "Threat ID": "EC2_029",
    "Threat Name": "EC2 Instance With Public IP in Task Configuration",
    "Source": "Misconfigured Network Access",
    "Target": "AWS EC2 Instance (Task Definition)",
    "Description": "Task definitions that configure EC2 instances with public IPs expose them to unauthorized access, increasing the risk of data breaches and system compromise.",
    "Mitigation": "Ensure EC2 instances used within task definitions do not have public IPs assigned. Use private networking and security groups for secure communication.",
    "Service": "AWS EC2"
  },
  {
    "Threat ID": "EC2_030",
    "Threat Name": "EC2 Instance With Public IP in Task Block",
    "Source": "Misconfigured Network Access",
    "Target": "AWS EC2 Instance (Task Block Configuration)",
    "Description": "Task block configurations provisioning EC2 instances with public IPs increase the risk of unauthorized internet exposure, leading to potential security breaches.",
    "Mitigation": "Ensure EC2 instances defined in task blocks do not have public IPs unless explicitly required. Use private networking and security groups for secure access.",
    "Service": "AWS EC2"
  },
  {
    "Threat ID": "EC2_031",
    "Threat Name": "EC2 Instance With Public IP in Task Block",
    "Source": "Misconfigured Network Access",
    "Target": "AWS EC2 Instance (Task Block Configuration)",
    "Description": "Task block configurations provisioning EC2 instances with public IPs expose them to external threats, increasing the attack surface.",
    "Mitigation": "Ensure EC2 instances defined in task blocks do not receive public IPs unless explicitly required. Implement VPC security best practices.",
    "Service": "AWS EC2"
  },
  {
    "Threat ID": "EC2_032",
    "Threat Name": "EC2 Instance With Public IP in Nested Task Block",
    "Source": "Misconfigured Network Access",
    "Target": "AWS EC2 Instance (Nested Task Block Configuration)",
    "Description": "Nested task block configurations provisioning EC2 instances with public IPs increase the risk of exposure to unauthorized internet access.",
    "Mitigation": "Review and restrict nested task block configurations from assigning public IPs to EC2 instances. Implement security best practices for networking.",
    "Service": "AWS EC2"
  },
  {
    "Threat ID": "EC2_033",
    "Threat Name": "EC2 Instance With Public IP in Deeply Nested Task Block",
    "Source": "Misconfigured Network Access",
    "Target": "AWS EC2 Instance (Deeply Nested Task Block Configuration)",
    "Description": "Multi-level nested task configurations provisioning EC2 instances with public IPs expose them to external threats, increasing the attack surface.",
    "Mitigation": "Ensure EC2 instances defined in deeply nested task configurations do not receive public IPs unless explicitly required. Implement VPC security best practices.",
    "Service": "AWS EC2"
  },
  {
    "Threat ID": "EC2_034",
    "Threat Name": "EC2 Instance With Public IP in Deeply Nested Task Configuration",
    "Source": "Misconfigured Network Access",
    "Target": "AWS EC2 Instance (Multi-Level Task Configuration)",
    "Description": "Multi-level nested configurations provisioning EC2 instances with public IPs expose them to external threats, increasing the attack surface.",
    "Mitigation": "Ensure EC2 instances in deeply nested task configurations do not receive public IPs unless explicitly required. Implement VPC security best practices.",
    "Service": "AWS EC2"
  },
  {
    "Threat ID": "EC2_035",
    "Threat Name": "EC2 Instance With Public IP in Deeply Nested Task Configuration",
    "Source": "Misconfigured Network Access",
    "Target": "AWS EC2 Instance (Multi-Level Task Configuration)",
    "Description": "Multi-level nested configurations provisioning EC2 instances with public IPs expose them to external threats, increasing the attack surface.",
    "Mitigation": "Ensure EC2 instances in deeply nested task configurations do not receive public IPs unless explicitly required. Implement VPC security best practices.",
    "Service": "AWS EC2"
  },
  {
    "Threat ID": "EC2_036",
    "Threat Name": "EC2 Instance With Public IP",
    "Source": "Misconfigured Network Access",
    "Target": "AWS EC2 Instance",
    "Description": "EC2 instances assigned public IPs are at risk of exposure to unauthorized internet access, increasing the attack surface for exploitation.",
    "Mitigation": "Ensure EC2 instances do not have public IP addresses unless explicitly required for public-facing services. Use private subnets and AWS NAT Gateways for internet-bound traffic.",
    "Service": "AWS EC2"
  },
  {
    "Threat ID": "EC2_037",
    "Threat Name": "EC2 Instance With Public IP",
    "Source": "Misconfigured Network Access",
    "Target": "AWS EC2 Launch Template",
    "Description": "EC2 instances launched from a launch template with public IPs are at risk of unauthorized internet exposure, increasing the likelihood of compromise.",
    "Mitigation": "Ensure that EC2 launch templates do not configure public IP addresses unless explicitly required. Use private networking with appropriate security controls.",
    "Service": "AWS EC2"
  },
  {
    "Threat ID": "DMS_001",
    "Threat Name": "Publicly Accessible DMS Replication Instance",
    "Source": "Misconfigured Network Access",
    "Target": "AWS DMS Replication Instance",
    "Description": "DMS replication instances that are publicly accessible increase the risk of unauthorized access to data replication processes, potentially leading to data breaches.",
    "Mitigation": "Ensure that DMS replication instances are deployed in private subnets and access is restricted through security groups and IAM policies.",
    "Service": "AWS Database Migration Service (DMS)"
  },
  {
    "Threat ID": "DMS_002",
    "Threat Name": "Publicly Accessible DMS Replication Instance",
    "Source": "Misconfigured Network Access",
    "Target": "AWS DMS Replication Instance",
    "Description": "DMS replication instances that are publicly accessible increase the risk of unauthorized access to data replication processes, potentially leading to data breaches.",
    "Mitigation": "Ensure that DMS replication instances are deployed in private subnets and access is restricted through security groups and IAM policies.",
    "Service": "AWS Database Migration Service (DMS)"
  },
  {
    "Threat ID": "DOCDB_005",
    "Threat Name": "DocumentDB TLS Disabled",
    "Source": "Unencrypted Data Transmission",
    "Target": "AWS DocumentDB Cluster Parameter Group",
    "Description": "DocumentDB clusters with TLS disabled allow unencrypted communication, exposing sensitive database traffic to interception and unauthorized access.",
    "Mitigation": "Ensure that TLS is enabled in DocumentDB cluster parameter groups to enforce secure connections for data protection.",
    "Service": "AWS DocumentDB"
  },
  {
    "Threat ID": "DOCDB_006",
    "Threat Name": "DocumentDB TLS Disabled",
    "Source": "Unencrypted Data Transmission",
    "Target": "AWS DocumentDB Cluster Parameter Group",
    "Description": "DocumentDB clusters with TLS disabled allow unencrypted communication, exposing sensitive database traffic to interception and unauthorized access.",
    "Mitigation": "Ensure that TLS is enabled in DocumentDB cluster parameter groups to enforce secure connections for data protection.",
    "Service": "AWS DocumentDB"
  },
  {
    "Threat ID": "ELB_003",
    "Threat Name": "ELBv2 Without Access Logging",
    "Source": "Lack of Security Monitoring",
    "Target": "AWS Elastic Load Balancing v2 (Application/Network Load Balancer)",
    "Description": "Elastic Load Balancers (ALB/NLB) without access logging enabled lack visibility into traffic patterns and security events, making it difficult to detect anomalies.",
    "Mitigation": "Enable access logging for ELBv2 instances to capture traffic logs for security monitoring and troubleshooting.",
    "Service": "AWS Elastic Load Balancing"
  },
  {
    "Threat ID": "ELB_004",
    "Threat Name": "ELBv2 Without Access Logging",
    "Source": "Lack of Security Monitoring",
    "Target": "AWS ALB (Application Load Balancer)",
    "Description": "ALBs without access logging enabled lack visibility into request patterns and potential security incidents, increasing the risk of undetected threats.",
    "Mitigation": "Ensure that ALB access logging is enabled and logs are stored securely in an Amazon S3 bucket.",
    "Service": "AWS Elastic Load Balancing"
  },
  {
    "Threat ID": "ELB_005",
    "Threat Name": "ELBv2 Without Access Logging",
    "Source": "Lack of Security Monitoring",
    "Target": "AWS Load Balancer",
    "Description": "Load Balancers without access logging enabled lack visibility into request patterns and potential security incidents, increasing the risk of undetected threats.",
    "Mitigation": "Ensure that access logging is enabled and logs are stored securely in an Amazon S3 bucket.",
    "Service": "AWS Elastic Load Balancing"
  },
  {
    "Threat ID": "ELB_006",
    "Threat Name": "ELB Without Access Logging",
    "Source": "Lack of Security Monitoring",
    "Target": "AWS Elastic Load Balancer",
    "Description": "Elastic Load Balancers without access logging enabled lack visibility into traffic patterns and security events, making it difficult to detect anomalies.",
    "Mitigation": "Enable access logging for ELB instances to capture traffic logs for security monitoring and troubleshooting.",
    "Service": "AWS Elastic Load Balancing"
  },
  {
    "Threat ID": "ELB_007",
    "Threat Name": "ELB Without Access Logging",
    "Source": "Lack of Security Monitoring",
    "Target": "AWS Classic Load Balancer",
    "Description": "Classic Load Balancers without access logging enabled lack visibility into request patterns and potential security incidents, increasing the risk of undetected threats.",
    "Mitigation": "Ensure that Classic Load Balancer access logging is enabled and logs are stored securely in an Amazon S3 bucket.",
    "Service": "AWS Elastic Load Balancing"
  },
  {
    "Threat ID": "S3_031",
    "Threat Name": "S3 Bucket Policy Locks Out All But Root User",
    "Source": "Misconfigured Access Control",
    "Target": "AWS S3 Bucket",
    "Description": "S3 bucket policies that lock out all users except the root account create an operational risk, requiring root account intervention for policy fixes.",
    "Mitigation": "Ensure that S3 bucket policies allow designated IAM users and roles appropriate access to avoid reliance on the root account.",
    "Service": "Amazon S3"
  },
  {
    "Threat ID": "S3_032",
    "Threat Name": "S3 Bucket Policy Locks Out All But Root User",
    "Source": "Misconfigured Access Control",
    "Target": "AWS S3 Bucket Policy",
    "Description": "S3 bucket policies that restrict access to only the root user may lead to lockout scenarios, requiring escalated privilege intervention to restore access.",
    "Mitigation": "Ensure S3 bucket policies allow appropriate IAM users and roles to manage bucket access securely.",
    "Service": "Amazon S3"
  },
  {
    "Threat ID": "GLUE_001",
    "Threat Name": "Glue Data Catalog Encryption Disabled",
    "Source": "Unencrypted Data Storage",
    "Target": "AWS Glue Data Catalog",
    "Description": "Glue Data Catalogs without encryption enabled store metadata in an unprotected state, increasing the risk of data leaks and compliance violations.",
    "Mitigation": "Ensure AWS Glue Data Catalog encryption is enabled using AWS KMS to protect metadata and ensure compliance with security policies.",
    "Service": "AWS Glue"
  },
  {
    "Threat ID": "GLUE_002",
    "Threat Name": "Glue Data Catalog Encryption Disabled",
    "Source": "Unencrypted Metadata Storage",
    "Target": "AWS Glue Data Catalog",
    "Description": "Glue Data Catalogs without encryption enabled store metadata in an unprotected state, increasing the risk of data leaks and compliance violations.",
    "Mitigation": "Ensure AWS Glue Data Catalog encryption is enabled using AWS KMS to protect metadata and ensure compliance with security policies.",
    "Service": "AWS Glue"
  },
  {
    "Threat ID": "APIGW_010",
    "Threat Name": "API Gateway V2 Access Logging Disabled",
    "Source": "Lack of Security Monitoring",
    "Target": "AWS API Gateway V2 Stage",
    "Description": "API Gateway V2 stages without access logging enabled lack visibility into request details, making it difficult to track API usage and detect security threats.",
    "Mitigation": "Enable access logging for API Gateway V2 stages to capture request and response data for security monitoring and troubleshooting.",
    "Service": "AWS API Gateway"
  },
  {
    "Threat ID": "APIGW_011",
    "Threat Name": "API Gateway V2 Access Logging Disabled",
    "Source": "Lack of Security Monitoring",
    "Target": "AWS Serverless HTTP API",
    "Description": "Serverless HTTP APIs without access logging enabled lack visibility into API traffic, making it difficult to detect anomalies and security threats.",
    "Mitigation": "Ensure access logging is enabled for API Gateway V2 instances to monitor request details and enhance security analysis.",
    "Service": "AWS API Gateway"
  },
  {
    "Threat ID": "AURORA_001",
    "Threat Name": "Unencrypted Aurora Database Cluster",
    "Source": "Unencrypted Data Storage",
    "Target": "AWS Aurora RDS Cluster",
    "Description": "Aurora database clusters that do not use encryption at rest expose sensitive database contents to unauthorized access and potential data breaches.",
    "Mitigation": "Ensure Aurora database clusters are configured with encryption enabled using AWS KMS to protect data at rest.",
    "Service": "AWS Aurora"
  },
  {
    "Threat ID": "AURORA_002",
    "Threat Name": "Unencrypted Aurora Database Cluster",
    "Source": "Unencrypted Data Storage",
    "Target": "AWS Aurora RDS Cluster",
    "Description": "Aurora database clusters that do not use encryption at rest expose sensitive database contents to unauthorized access and potential data breaches.",
    "Mitigation": "Ensure Aurora database clusters are configured with encryption enabled using AWS KMS to protect data at rest.",
    "Service": "AWS Aurora"
  },
  {
    "Threat ID": "ECS_001",
    "Threat Name": "ECS Task Definition Without EFS Encryption in Transit",
    "Source": "Unencrypted Data Transmission",
    "Target": "AWS ECS Task Definition",
    "Description": "ECS task definitions using EFS volumes without encryption in transit enabled expose data to potential interception during transmission.",
    "Mitigation": "Ensure encryption in transit is enabled for EFS volumes in ECS task definitions to protect data from unauthorized access.",
    "Service": "AWS ECS"
  },
  {
    "Threat ID": "ECS_002",
    "Threat Name": "ECS Task Definition Without EFS Encryption in Transit",
    "Source": "Unencrypted Data Transmission",
    "Target": "AWS ECS Task Definition",
    "Description": "ECS task definitions using EFS volumes without encryption in transit enabled expose data to potential interception during transmission.",
    "Mitigation": "Ensure encryption in transit is enabled for EFS volumes in ECS task definitions to protect data from unauthorized access.",
    "Service": "AWS ECS"
  },
  {
    "Threat ID": "SAGEMAKER_001",
    "Threat Name": "Unencrypted Sagemaker Endpoint Data",
    "Source": "Unencrypted Data Storage",
    "Target": "AWS Sagemaker Endpoint",
    "Description": "Sagemaker endpoints that do not use encryption at rest expose stored model data and inference results to unauthorized access and potential data breaches.",
    "Mitigation": "Ensure Sagemaker endpoints are configured with encryption at rest using AWS KMS to protect sensitive data.",
    "Service": "AWS Sagemaker"
  },
  {
    "Threat ID": "GLUE_003",
    "Threat Name": "Glue Security Configuration Encryption Disabled",
    "Source": "Unencrypted Metadata and Job Execution Data",
    "Target": "AWS Glue Security Configuration",
    "Description": "Glue jobs and metadata stored without encryption increase the risk of unauthorized access to sensitive ETL processing information.",
    "Mitigation": "Ensure Glue Security Configuration encryption is enabled using AWS KMS to secure job execution data and metadata.",
    "Service": "AWS Glue"
  },
  {
    "Threat ID": "GLUE_004",
    "Threat Name": "Glue Security Configuration Encryption Disabled",
    "Source": "Unencrypted Metadata and Job Execution Data",
    "Target": "AWS Glue Security Configuration",
    "Description": "Glue jobs and metadata stored without encryption increase the risk of unauthorized access to sensitive ETL processing information.",
    "Mitigation": "Ensure Glue Security Configuration encryption is enabled using AWS KMS to secure job execution data and metadata.",
    "Service": "AWS Glue"
  },
  {
    "Threat ID": "EKS_003",
    "Threat Name": "EKS Node Group Allows SSH Access from 0.0.0.0/0",
    "Source": "Misconfigured Network Access",
    "Target": "AWS EKS Node Group",
    "Description": "EKS node groups that allow SSH access from 0.0.0.0/0 expose instances to potential unauthorized access and brute-force attacks.",
    "Mitigation": "Ensure that security groups attached to EKS node groups restrict SSH access to known IP addresses or disable SSH access entirely.",
    "Service": "AWS EKS"
  },
  {
    "Threat ID": "EKS_004",
    "Threat Name": "EKS Node Group Allows SSH Access from 0.0.0.0/0",
    "Source": "Misconfigured Network Access",
    "Target": "AWS EKS Node Group",
    "Description": "EKS node groups that allow SSH access from 0.0.0.0/0 expose instances to potential unauthorized access and brute-force attacks.",
    "Mitigation": "Ensure that security groups attached to EKS node groups restrict SSH access to known IP addresses or disable SSH access entirely.",
    "Service": "AWS EKS"
  },
  {
    "Threat ID": "NEPTUNE_001",
    "Threat Name": "Neptune Logging Disabled",
    "Source": "Lack of Security Monitoring",
    "Target": "AWS Neptune Cluster",
    "Description": "Neptune clusters without logging enabled lack visibility into database queries and access patterns, increasing the risk of undetected security incidents.",
    "Mitigation": "Ensure AWS Neptune logging is enabled to capture audit logs for compliance and security monitoring.",
    "Service": "AWS Neptune"
  },
  {
    "Threat ID": "NEPTUNE_002",
    "Threat Name": "Neptune Logging Disabled",
    "Source": "Lack of Security Monitoring",
    "Target": "AWS Neptune Cluster",
    "Description": "Neptune clusters without logging enabled lack visibility into database queries and access patterns, increasing the risk of undetected security incidents.",
    "Mitigation": "Ensure AWS Neptune logging is enabled to capture audit logs for compliance and security monitoring.",
    "Service": "AWS Neptune"
  },
  {
    "Threat ID": "NEPTUNE_003",
    "Threat Name": "Publicly Accessible Neptune Cluster Instance",
    "Source": "Misconfigured Network Access",
    "Target": "AWS Neptune Cluster Instance",
    "Description": "Neptune cluster instances that are publicly accessible increase the risk of unauthorized access, data exfiltration, and potential data breaches.",
    "Mitigation": "Ensure that Neptune cluster instances are deployed in private subnets and access is restricted through security groups and IAM policies.",
    "Service": "AWS Neptune"
  },
  {
    "Threat ID": "ELB_008",
    "Threat Name": "Load Balancer Listener Using Insecure TLS Version",
    "Source": "Weak Encryption Standards",
    "Target": "AWS Elastic Load Balancer Listener",
    "Description": "Load balancer listeners using outdated TLS versions (earlier than TLS 1.2) expose communication to security vulnerabilities, including man-in-the-middle attacks.",
    "Mitigation": "Ensure that all load balancer listeners enforce TLS 1.2 or higher to maintain secure encrypted communications.",
    "Service": "AWS Elastic Load Balancing"
  },
  {
    "Threat ID": "ELB_009",
    "Threat Name": "Load Balancer Listener Using Insecure TLS Version",
    "Source": "Weak Encryption Standards",
    "Target": "AWS ALB Listener",
    "Description": "Application Load Balancers (ALB) using outdated TLS versions pose a security risk by allowing weak encryption that may be susceptible to attacks.",
    "Mitigation": "Ensure that ALB listeners enforce TLS 1.2 or higher to comply with best security practices.",
    "Service": "AWS Elastic Load Balancing"
  },
  {
    "Threat ID": "ELB_010",
    "Threat Name": "Load Balancer Using Insecure TLS Version",
    "Source": "Weak Encryption Standards",
    "Target": "AWS Load Balancer",
    "Description": "Load balancers that do not enforce at least TLS 1.2 expose applications to security vulnerabilities associated with weak cryptographic standards.",
    "Mitigation": "Ensure that all load balancers enforce TLS 1.2 or higher for secure encrypted communication.",
    "Service": "AWS Elastic Load Balancing"
  },
  {
    "Threat ID": "ELB_011",
    "Threat Name": "Load Balancer Listener Using Insecure TLS Version",
    "Source": "Weak Encryption Standards",
    "Target": "AWS Load Balancer Listener",
    "Description": "Load balancer listeners using outdated TLS versions pose a security risk by allowing insecure encryption, making traffic susceptible to compromise.",
    "Mitigation": "Ensure that all load balancer listeners enforce TLS 1.2 or higher for enhanced security.",
    "Service": "AWS Elastic Load Balancing"
  },
  {
    "Threat ID": "DOCDB_007",
    "Threat Name": "DocumentDB Audit Logging Disabled",
    "Source": "Lack of Security Monitoring",
    "Target": "AWS DocumentDB Cluster Parameter Group",
    "Description": "DocumentDB clusters without audit logs enabled lack visibility into database activity, making it difficult to detect unauthorized access or suspicious behavior.",
    "Mitigation": "Ensure that DocumentDB audit logging is enabled to capture database activity logs for compliance and security monitoring.",
    "Service": "AWS DocumentDB"
  },
  {
    "Threat ID": "DOCDB_008",
    "Threat Name": "DocumentDB Audit Logging Disabled",
    "Source": "Lack of Security Monitoring",
    "Target": "AWS DocumentDB Cluster Parameter Group",
    "Description": "DocumentDB clusters without audit logs enabled lack visibility into database activity, making it difficult to detect unauthorized access or suspicious behavior.",
    "Mitigation": "Ensure that DocumentDB audit logging is enabled to capture database activity logs for compliance and security monitoring.",
    "Service": "AWS DocumentDB"
  },
  {
    "Threat ID": "REDSHIFT_007",
    "Threat Name": "Redshift Cluster Without SSL",
    "Source": "Unencrypted Data Transmission",
    "Target": "AWS Redshift Cluster Parameter Group",
    "Description": "Redshift clusters that do not enforce SSL for client connections expose data in transit to potential interception and unauthorized access.",
    "Mitigation": "Ensure SSL is enabled for all Redshift connections to secure data in transit and prevent unauthorized eavesdropping.",
    "Service": "AWS Redshift"
  },
  {
    "Threat ID": "REDSHIFT_008",
    "Threat Name": "Redshift Cluster Without SSL",
    "Source": "Unencrypted Data Transmission",
    "Target": "AWS Redshift Cluster Parameter Group",
    "Description": "Redshift clusters that do not enforce SSL for client connections expose data in transit to potential interception and unauthorized access.",
    "Mitigation": "Ensure SSL is enabled for all Redshift connections to secure data in transit and prevent unauthorized eavesdropping.",
    "Service": "AWS Redshift"
  },
  {
    "Threat ID": "EBS_001",
    "Threat Name": "EBS Default Encryption Disabled",
    "Source": "Unencrypted Storage",
    "Target": "AWS Elastic Block Store (EBS)",
    "Description": "EBS volumes created without default encryption enabled may result in unprotected data at rest, increasing the risk of unauthorized access.",
    "Mitigation": "Enable default encryption for EBS to ensure all new volumes are automatically encrypted using AWS KMS.",
    "Service": "AWS EBS"
  },
  {
    "Threat ID": "IAM_001",
    "Threat Name": "IAM Policies Allow Credentials Exposure",
    "Source": "Overly Permissive IAM Policies",
    "Target": "AWS IAM Group",
    "Description": "IAM policies that allow credential exposure (such as listing or retrieving secret keys) increase the risk of accidental credential leaks and unauthorized access.",
    "Mitigation": "Review and restrict IAM policies to ensure they do not expose sensitive credentials. Use AWS Secrets Manager for managing credentials securely.",
    "Service": "AWS IAM"
  },
  {
    "Threat ID": "IAM_002",
    "Threat Name": "IAM Managed Policy Allows Credential Exposure",
    "Source": "Overly Permissive IAM Policies",
    "Target": "AWS IAM Managed Policy",
    "Description": "IAM managed policies that allow listing or retrieving credentials (such as access keys or passwords) increase the risk of unauthorized access and accidental credential leaks.",
    "Mitigation": "Review and restrict IAM managed policies to ensure they do not allow credential exposure. Use AWS Secrets Manager to securely store and manage credentials.",
    "Service": "AWS IAM"
  },
  {
    "Threat ID": "IAM_003",
    "Threat Name": "IAM Policy Allows Credential Exposure",
    "Source": "Overly Permissive IAM Policies",
    "Target": "AWS IAM Policy",
    "Description": "IAM policies that permit actions exposing sensitive credentials (such as retrieving secret keys) increase the risk of credential leaks and unauthorized access.",
    "Mitigation": "Ensure IAM policies do not allow actions that expose credentials. Use AWS IAM best practices to enforce least privilege principles.",
    "Service": "AWS IAM"
  },
  {
    "Threat ID": "IAM_004",
    "Threat Name": "IAM Role Policy Allows Credential Exposure",
    "Source": "Overly Permissive IAM Policies",
    "Target": "AWS IAM Role",
    "Description": "IAM roles with overly permissive policies that allow listing or retrieving credentials create security risks by exposing access keys or authentication secrets.",
    "Mitigation": "Restrict IAM role policies to prevent credential exposure and enforce secure role assumption mechanisms.",
    "Service": "AWS IAM"
  },
  {
    "Threat ID": "IAM_005",
    "Threat Name": "IAM User Policy Allows Credential Exposure",
    "Source": "Overly Permissive IAM Policies",
    "Target": "AWS IAM User",
    "Description": "IAM users with policies that allow credential exposure increase the risk of security breaches by potentially leaking access keys or passwords.",
    "Mitigation": "Review and limit IAM user permissions to prevent direct access to credentials. Implement multi-factor authentication (MFA) and enforce IAM best practices.",
    "Service": "AWS IAM"
  },
  {
    "Threat ID": "IAM_006",
    "Threat Name": "IAM Policy Document Allows Credential Exposure",
    "Source": "Overly Permissive IAM Policies",
    "Target": "AWS IAM Policy Document",
    "Description": "IAM policy documents that allow retrieving sensitive credentials create a security risk by enabling unauthorized access to secrets and authentication keys.",
    "Mitigation": "Ensure IAM policy documents do not include permissions that allow credential exposure. Use AWS IAM best practices to enforce least privilege.",
    "Service": "AWS IAM"
  },
  {
    "Threat ID": "IAM_007",
    "Threat Name": "IAM Group Policy Allows Data Exfiltration",
    "Source": "Overly Permissive IAM Policies",
    "Target": "AWS IAM Group",
    "Description": "IAM group policies that allow unrestricted data transfer actions (such as S3:GetObject, S3:ListBucket, DynamoDB:Scan, or SecretsManager:GetSecretValue) create a risk of data exfiltration.",
    "Mitigation": "Review and restrict IAM group policies to limit data access to only authorized users and services. Implement least privilege principles and monitor access logs.",
    "Service": "AWS IAM"
  },
  {
    "Threat ID": "IAM_008",
    "Threat Name": "IAM Managed Policy Allows Data Exfiltration",
    "Source": "Overly Permissive IAM Policies",
    "Target": "AWS IAM Managed Policy",
    "Description": "IAM managed policies with broad permissions that allow external data transfer (such as unrestricted access to S3, RDS, or DynamoDB) increase the risk of data leaks.",
    "Mitigation": "Ensure IAM managed policies restrict data access based on business needs. Implement data classification and access monitoring mechanisms.",
    "Service": "AWS IAM"
  },
  {
    "Threat ID": "IAM_009",
    "Threat Name": "IAM Policy Allows Data Exfiltration",
    "Source": "Overly Permissive IAM Policies",
    "Target": "AWS IAM Policy",
    "Description": "IAM policies granting excessive data access permissions without proper restrictions can lead to unauthorized data exfiltration, potentially violating compliance requirements.",
    "Mitigation": "Restrict IAM policies to allow only necessary data access permissions. Use AWS CloudTrail and AWS Config to monitor data access activities.",
    "Service": "AWS IAM"
  },
  {
    "Threat ID": "IAM_010",
    "Threat Name": "IAM Role Policy Allows Data Exfiltration",
    "Source": "Overly Permissive IAM Policies",
    "Target": "AWS IAM Role",
    "Description": "IAM roles assigned broad data access permissions may enable unauthorized data exfiltration by applications or services with excessive privileges.",
    "Mitigation": "Limit IAM role policies to restrict access to sensitive data. Use AWS Identity Center to enforce role-based access control and monitor API calls.",
    "Service": "AWS IAM"
  },
  {
    "Threat ID": "IAM_011",
    "Threat Name": "IAM User Policy Allows Data Exfiltration",
    "Source": "Overly Permissive IAM Policies",
    "Target": "AWS IAM User",
    "Description": "IAM users with excessive permissions to read, download, or copy large amounts of sensitive data increase the risk of unauthorized data exfiltration.",
    "Mitigation": "Ensure IAM user policies enforce least privilege and restrict access to critical data. Implement AWS IAM Access Analyzer and data loss prevention (DLP) measures.",
    "Service": "AWS IAM"
  },
  {
    "Threat ID": "IAM_012",
    "Threat Name": "IAM Policy Document Allows Data Exfiltration",
    "Source": "Overly Permissive IAM Policies",
    "Target": "AWS IAM Policy Document",
    "Description": "IAM policy documents that allow unrestricted data access (such as full S3, RDS, or DynamoDB permissions) increase the risk of unauthorized data exfiltration.",
    "Mitigation": "Ensure IAM policy documents enforce least privilege by restricting data access to only necessary actions and resources.",
    "Service": "AWS IAM"
  },
  {
    "Threat ID": "IAM_013",
    "Threat Name": "IAM Group Allows Unconstrained Permissions Management",
    "Source": "Privilege Escalation Risk",
    "Target": "AWS IAM Group",
    "Description": "IAM groups that allow unrestricted permissions management may lead to privilege escalation by unauthorized users.",
    "Mitigation": "Ensure IAM group policies restrict permission changes to administrators and enforce approval workflows for policy modifications.",
    "Service": "AWS IAM"
  },
  {
    "Threat ID": "IAM_014",
    "Threat Name": "IAM Managed Policy Allows Unconstrained Permissions Management",
    "Source": "Privilege Escalation Risk",
    "Target": "AWS IAM Managed Policy",
    "Description": "IAM managed policies granting broad permissions management capabilities increase the risk of unauthorized access elevation.",
    "Mitigation": "Restrict IAM managed policies to limit permission changes only to authorized administrators and enforce least privilege.",
    "Service": "AWS IAM"
  },
  {
    "Threat ID": "IAM_015",
    "Threat Name": "IAM Policy Allows Unconstrained Permissions Management",
    "Source": "Privilege Escalation Risk",
    "Target": "AWS IAM Policy",
    "Description": "IAM policies allowing unrestricted permission modifications can enable unauthorized privilege escalation, leading to security risks.",
    "Mitigation": "Ensure IAM policies enforce scoped permissions for privilege management and prevent unauthorized changes.",
    "Service": "AWS IAM"
  },
  {
    "Threat ID": "IAM_016",
    "Threat Name": "IAM Role Allows Unconstrained Permissions Management",
    "Source": "Privilege Escalation Risk",
    "Target": "AWS IAM Role",
    "Description": "IAM roles with broad permissions management rights may allow unauthorized privilege escalation, increasing security risks.",
    "Mitigation": "Limit IAM role policies to restrict permission modifications and enforce approval-based access controls.",
    "Service": "AWS IAM"
  },
  {
    "Threat ID": "IAM_017",
    "Threat Name": "IAM User Allows Unconstrained Permissions Management",
    "Source": "Privilege Escalation Risk",
    "Target": "AWS IAM User",
    "Description": "IAM users with policies allowing unrestricted permissions management may escalate privileges, granting themselves or others excessive access.",
    "Mitigation": "Ensure IAM user policies enforce least privilege principles, restricting permissions management to administrators and using approval workflows.",
    "Service": "AWS IAM"
  },
  {
    "Threat ID": "IAM_018",
    "Threat Name": "IAM Policy Document Allows Unconstrained Permissions or Resource Exposure",
    "Source": "Excessive IAM Privileges",
    "Target": "AWS IAM Policy Document",
    "Description": "IAM policy documents with unconstrained permissions or resource exposure (e.g., allowing * actions on all resources) increase the risk of unauthorized privilege escalation and data breaches.",
    "Mitigation": "Ensure IAM policy documents enforce granular permissions with scoped resource access, avoiding wildcard (*) permissions where unnecessary.",
    "Service": "AWS IAM"
  },
  {
    "Threat ID": "IAM_019",
    "Threat Name": "IAM Group Allows Privilege Escalation",
    "Source": "Overly Permissive IAM Policies",
    "Target": "AWS IAM Group",
    "Description": "IAM groups allowing privilege escalation enable members to assign themselves higher permissions, leading to unauthorized access risks.",
    "Mitigation": "Restrict IAM group policies to prevent privilege escalation actions such as iam:AttachUserPolicy, iam:CreatePolicy, and iam:UpdateAssumeRolePolicy.",
    "Service": "AWS IAM"
  },
  {
    "Threat ID": "IAM_020",
    "Threat Name": "IAM Managed Policy Allows Privilege Escalation",
    "Source": "Overly Permissive IAM Policies",
    "Target": "AWS IAM Managed Policy",
    "Description": "IAM managed policies that allow unrestricted privilege escalation actions pose security risks by enabling unauthorized access and role assumption.",
    "Mitigation": "Ensure IAM managed policies follow the principle of least privilege, restricting actions such as iam:PassRole and iam:UpdateAssumeRolePolicy.",
    "Service": "AWS IAM"
  },
  {
    "Threat ID": "IAM_021",
    "Threat Name": "IAM Policy Allows Privilege Escalation",
    "Source": "Overly Permissive IAM Policies",
    "Target": "AWS IAM Policy",
    "Description": "IAM policies permitting privilege escalation actions (such as modifying role policies or creating new privileged roles) increase security risks.",
    "Mitigation": "Ensure IAM policies enforce strict role and policy management controls, restricting privilege escalation actions to designated administrators.",
    "Service": "AWS IAM"
  },
  {
    "Threat ID": "SSM_001",
    "Threat Name": "Session Manager Logs Not Enabled or Unencrypted",
    "Source": "Lack of Security Monitoring",
    "Target": "AWS Systems Manager (SSM) Session Manager",
    "Description": "Without logging enabled and encrypted, Session Manager activities are not captured securely, making it difficult to audit administrative actions and detect security incidents.",
    "Mitigation": "Ensure that Session Manager logs are enabled and encrypted using AWS CloudWatch and AWS KMS for compliance and security monitoring.",
    "Service": "AWS Systems Manager"
  },
  {
    "Threat ID": "EMR_002",
    "Threat Name": "EMR Cluster Without Kerberos Realm Set",
    "Source": "Weak Authentication Mechanism",
    "Target": "AWS EMR Cluster",
    "Description": "EMR clusters configured with Kerberos but without a specified Kerberos Realm may lack proper authentication enforcement, leading to potential unauthorized access.",
    "Mitigation": "Ensure that EMR clusters using Kerberos have a Kerberos Realm set to enforce authentication security.",
    "Service": "AWS EMR"
  },
  {
    "Threat ID": "LAMBDA_005",
    "Threat Name": "AWS Lambda Function Without Concurrency Limits",
    "Source": "Denial of Service (DoS) Risk",
    "Target": "AWS Lambda Function",
    "Description": "Lambda functions without function-level concurrency limits can experience excessive concurrent executions, leading to resource exhaustion and service disruptions.",
    "Mitigation": "Set a function-level concurrency limit for Lambda functions to prevent excessive execution and ensure controlled resource utilization.",
    "Service": "AWS Lambda"
  },
  {
    "Threat ID": "LAMBDA_006",
    "Threat Name": "AWS Serverless Function Without Concurrency Limits",
    "Source": "Denial of Service (DoS) Risk",
    "Target": "AWS Serverless Function",
    "Description": "Serverless functions without function-level concurrency limits can experience excessive concurrent executions, leading to increased costs and potential service disruptions.",
    "Mitigation": "Define a function-level concurrency limit for AWS Serverless functions to control execution rates and prevent resource exhaustion.",
    "Service": "AWS Lambda"
  },
  {
    "Threat ID": "LAMBDA_007",
    "Threat Name": "AWS Lambda Function Without Concurrency Limits",
    "Source": "Denial of Service (DoS) Risk",
    "Target": "AWS Lambda Function",
    "Description": "Lambda functions without function-level concurrency limits can experience excessive concurrent executions, leading to performance degradation and availability issues.",
    "Mitigation": "Configure function-level concurrency limits to ensure optimal execution performance and cost efficiency.",
    "Service": "AWS Lambda"
  },
  {
    "Threat ID": "LAMBDA_008",
    "Threat Name": "AWS Lambda Function Without Dead Letter Queue (DLQ)",
    "Source": "Unrecoverable Function Execution Failures",
    "Target": "AWS Lambda Function",
    "Description": "Lambda functions without a configured Dead Letter Queue (DLQ) may fail without logging errors, making troubleshooting difficult and leading to data loss or service disruptions.",
    "Mitigation": "Ensure that AWS Lambda functions are configured with a DLQ to capture failed execution events for debugging and reliability.",
    "Service": "AWS Lambda"
  },
  {
    "Threat ID": "LAMBDA_009",
    "Threat Name": "AWS Serverless Function Without Dead Letter Queue (DLQ)",
    "Source": "Unrecoverable Function Execution Failures",
    "Target": "AWS Serverless Function",
    "Description": "Serverless functions without a DLQ may fail silently, leading to lost events and reduced service reliability.",
    "Mitigation": "Configure a Dead Letter Queue (DLQ) for AWS Serverless functions to store failed execution events and facilitate troubleshooting.",
    "Service": "AWS Lambda"
  },
  {
    "Threat ID": "LAMBDA_010",
    "Threat Name": "AWS Lambda Function Without Dead Letter Queue (DLQ)",
    "Source": "Unrecoverable Function Execution Failures",
    "Target": "AWS Lambda Function",
    "Description": "Lambda functions without a Dead Letter Queue (DLQ) may fail without notification, causing potential data loss and debugging difficulties.",
    "Mitigation": "Ensure a DLQ is set up for all AWS Lambda functions to capture and log failed executions for later analysis.",
    "Service": "AWS Lambda"
  },
  {
    "Threat ID": "LAMBDA_011",
    "Threat Name": "AWS Lambda Function Not Configured Inside a VPC",
    "Source": "Improper Network Configuration",
    "Target": "AWS Lambda Function",
    "Description": "Lambda functions operating outside a VPC may not have secure private network access, increasing the risk of data exposure and unauthorized access.",
    "Mitigation": "Ensure Lambda functions are configured inside a VPC when accessing internal resources to enhance network security.",
    "Service": "AWS Lambda"
  },
  {
    "Threat ID": "LAMBDA_012",
    "Threat Name": "AWS Serverless Function Not Configured Inside a VPC",
    "Source": "Improper Network Configuration",
    "Target": "AWS Serverless Function",
    "Description": "Serverless functions running outside a VPC may lack secure communication with internal services, increasing security and compliance risks.",
    "Mitigation": "Configure serverless functions inside a VPC to ensure secure communication with internal resources and prevent unauthorized access.",
    "Service": "AWS Lambda"
  },
  {
    "Threat ID": "LAMBDA_013",
    "Threat Name": "AWS Lambda Function Not Configured Inside a VPC",
    "Source": "Improper Network Configuration",
    "Target": "AWS Lambda Function",
    "Description": "Lambda functions operating outside a VPC may lack secure private network access, increasing the risk of data exposure and unauthorized access to internal resources.",
    "Mitigation": "Ensure Lambda functions are configured inside a VPC when accessing internal AWS resources to enhance network security and limit exposure.",
    "Service": "AWS Lambda"
  },
  {
    "Threat ID": "RDS_004",
    "Threat Name": "Amazon RDS Enhanced Monitoring Not Enabled",
    "Source": "Lack of Performance and Security Monitoring",
    "Target": "AWS RDS Instance",
    "Description": "Amazon RDS instances without enhanced monitoring lack real-time performance metrics, making it difficult to detect issues such as CPU overload, slow queries, or unauthorized access.",
    "Mitigation": "Enable enhanced monitoring for Amazon RDS instances to capture real-time performance data and improve operational visibility.",
    "Service": "AWS RDS"
  },
  {
    "Threat ID": "RDS_005",
    "Threat Name": "Amazon RDS Enhanced Monitoring Not Enabled",
    "Source": "Lack of Performance and Security Monitoring",
    "Target": "AWS RDS Instance",
    "Description": "RDS clusters without enhanced monitoring lack insights into database performance metrics, potentially leading to undetected issues affecting availability and security.",
    "Mitigation": "Ensure enhanced monitoring is enabled for all Amazon RDS instances to gain deeper visibility into database performance and security events.",
    "Service": "AWS RDS"
  },
  {
    "Threat ID": "RDS_006",
    "Threat Name": "Amazon RDS Enhanced Monitoring Not Enabled",
    "Source": "Lack of Performance and Security Monitoring",
    "Target": "AWS RDS Cluster Instance",
    "Description": "RDS cluster instances without enhanced monitoring enabled may lead to difficulties in detecting security anomalies, excessive resource utilization, and unauthorized access attempts.",
    "Mitigation": "Enable enhanced monitoring for RDS cluster instances to collect performance data and enhance troubleshooting capabilities.",
    "Service": "AWS RDS"
  },
  {
    "Threat ID": "DYNAMODB_003",
    "Threat Name": "DynamoDB Table Not Encrypted with Customer Managed CMK",
    "Source": "Unencrypted Data Storage",
    "Target": "AWS DynamoDB Table",
    "Description": "DynamoDB tables not encrypted with a KMS Customer Managed Key (CMK) rely on default AWS-managed encryption, which limits control over key management and access policies.",
    "Mitigation": "Ensure DynamoDB tables are encrypted using a Customer Managed KMS Key (CMK) to enforce stronger access controls and meet compliance requirements.",
    "Service": "AWS DynamoDB"
  },
  {
    "Threat ID": "DDB_001",
    "Threat Name": "DynamoDB Table Not Encrypted with Customer Managed KMS Key",
    "Source": "Unencrypted Data Storage",
    "Target": "AWS DynamoDB Table",
    "Description": "DynamoDB tables that are not encrypted using a Customer Managed KMS Key (CMK) may be vulnerable to unauthorized access and data breaches.",
    "Mitigation": "Ensure that DynamoDB tables are encrypted using an AWS KMS Customer Managed Key (CMK) to enhance data security and compliance.",
    "Service": "AWS DynamoDB"
  },
  {
    "Threat ID": "APIGW_012",
    "Threat Name": "API Gateway Caching Not Enabled",
    "Source": "Performance and Security Risk",
    "Target": "AWS API Gateway Stage",
    "Description": "Without caching enabled, API Gateway calls may result in excessive load on backend services, increasing latency and potential security risks from repeated API calls.",
    "Mitigation": "Enable API Gateway caching to improve performance, reduce backend load, and minimize the risk of API abuse.",
    "Service": "AWS API Gateway"
  },
  {
    "Threat ID": "APIGW_013",
    "Threat Name": "API Gateway Caching Not Enabled",
    "Source": "Performance and Security Risk",
    "Target": "AWS Serverless API",
    "Description": "Without caching, API Gateway may process redundant requests, increasing operational costs and exposing APIs to denial-of-service (DoS) risks.",
    "Mitigation": "Enable caching for AWS Serverless API to improve response times and enhance API security.",
    "Service": "AWS API Gateway"
  },
  {
    "Threat ID": "APIGW_014",
    "Threat Name": "API Gateway Caching Not Enabled",
    "Source": "Performance and Security Risk",
    "Target": "AWS API Gateway Stage",
    "Description": "API Gateway without caching may expose backend services to unnecessary requests, leading to performance degradation and potential API exhaustion attacks.",
    "Mitigation": "Enable caching in API Gateway to optimize response times and reduce load on backend services.",
    "Service": "AWS API Gateway"
  },
  {
    "Threat ID": "CONFIG_001",
    "Threat Name": "AWS Config Not Enabled in All Regions",
    "Source": "Incomplete Security Visibility",
    "Target": "AWS Config Aggregator",
    "Description": "Without AWS Config enabled across all regions, organizations may miss critical configuration changes and security compliance violations.",
    "Mitigation": "Ensure AWS Config is enabled in all AWS regions to provide continuous monitoring and compliance visibility across cloud resources.",
    "Service": "AWS Config"
  },
  {
    "Threat ID": "SAGEMAKER_003",
    "Threat Name": "SageMaker Notebook Instance with Direct Internet Access Enabled",
    "Source": "Unrestricted Network Access",
    "Target": "AWS SageMaker Notebook Instance",
    "Description": "Amazon SageMaker Notebook instances with direct internet access enabled expose the environment to potential external threats and unauthorized access.",
    "Mitigation": "Ensure that direct internet access is disabled for SageMaker Notebook instances by configuring them to use VPC-only mode.",
    "Service": "AWS SageMaker"
  },
  {
    "Threat ID": "VPC_006",
    "Threat Name": "VPC Endpoint Service Not Configured for Manual Acceptance",
    "Source": "Unauthorized VPC Endpoint Connections",
    "Target": "AWS VPC Endpoint Service",
    "Description": "VPC Endpoint Services that do not require manual acceptance may allow unintended or unauthorized connections, leading to potential data exfiltration or network security risks.",
    "Mitigation": "Ensure that VPC Endpoint Services require manual acceptance before allowing connections to prevent unauthorized access.",
    "Service": "AWS VPC"
  },
  {
    "Threat ID": "VPC_007",
    "Threat Name": "VPC Endpoint Service Not Configured for Manual Acceptance",
    "Source": "Unauthorized VPC Endpoint Connections",
    "Target": "AWS VPC Endpoint Service",
    "Description": "A VPC Endpoint Service that automatically accepts connection requests could be exploited by unauthorized users or malicious actors.",
    "Mitigation": "Configure the VPC Endpoint Service to require manual acceptance of connection requests to enhance security.",
    "Service": "AWS VPC"
  },
  {
    "Threat ID": "CLOUDFORMATION_004",
    "Threat Name": "CloudFormation Stacks Not Sending Event Notifications",
    "Source": "Lack of Security Monitoring",
    "Target": "AWS CloudFormation Stack",
    "Description": "CloudFormation stacks that do not send event notifications to an SNS topic may prevent security teams from detecting stack changes and failures in a timely manner.",
    "Mitigation": "Ensure that CloudFormation stacks are configured to send event notifications to an SNS topic for improved monitoring and security alerting.",
    "Service": "AWS CloudFormation"
  },
  {
    "Threat ID": "EC2_008",
    "Threat Name": "EC2 Instance Without Detailed Monitoring Enabled",
    "Source": "Limited Performance and Security Visibility",
    "Target": "AWS EC2 Instance",
    "Description": "EC2 instances without detailed monitoring enabled may lack critical performance and security insights, increasing the risk of undetected incidents.",
    "Mitigation": "Enable detailed monitoring for EC2 instances to collect real-time performance metrics and improve visibility into potential issues.",
    "Service": "AWS EC2"
  },
  {
    "Threat ID": "ELB_005",
    "Threat Name": "Elastic Load Balancer Not Using ACM SSL Certificates",
    "Source": "Improper Certificate Management",
    "Target": "AWS Elastic Load Balancer",
    "Description": "Elastic Load Balancers (ELB) that do not use SSL certificates provided by AWS Certificate Manager (ACM) may rely on expired or insecure certificates, increasing the risk of man-in-the-middle (MITM) attacks.",
    "Mitigation": "Ensure that Elastic Load Balancers (ELBs) use SSL certificates issued and managed by AWS Certificate Manager (ACM) for secure and automated certificate renewal.",
    "Service": "AWS Elastic Load Balancing"
  },
  {
    "Threat ID": "RDS_006",
    "Threat Name": "Amazon RDS Logs Not Enabled",
    "Source": "Lack of Security and Performance Monitoring",
    "Target": "AWS RDS Instance",
    "Description": "Without log collection enabled, Amazon RDS instances lack visibility into database activities, which can make security auditing and performance troubleshooting difficult.",
    "Mitigation": "Ensure that logging is enabled for Amazon RDS instances, including error logs, slow query logs, and general logs, to improve monitoring and compliance.",
    "Service": "AWS RDS"
  },
  {
    "Threat ID": "VPC_008",
    "Threat Name": "VPC Subnets Assigning Public IPs by Default",
    "Source": "Unrestricted Network Access",
    "Target": "AWS VPC Subnet",
    "Description": "VPC subnets that assign public IPs by default increase the risk of exposing instances to the public internet, making them vulnerable to attacks.",
    "Mitigation": "Ensure that VPC subnets do not assign public IP addresses by default unless explicitly required for public-facing applications.",
    "Service": "AWS VPC"
  },
  {
    "Threat ID": "ALB_003",
    "Threat Name": "Application Load Balancer Not Dropping HTTP Headers",
    "Source": "Potential Information Disclosure",
    "Target": "AWS Application Load Balancer",
    "Description": "Application Load Balancers (ALBs) that do not drop HTTP headers may inadvertently expose internal server information, increasing the risk of reconnaissance attacks.",
    "Mitigation": "Ensure that ALBs are configured to drop unnecessary HTTP headers to prevent information disclosure.",
    "Service": "AWS Elastic Load Balancing"
  },
  {
    "Threat ID": "ALB_004",
    "Threat Name": "Application Load Balancer Not Dropping HTTP Headers",
    "Source": "Potential Information Disclosure",
    "Target": "AWS Application Load Balancer",
    "Description": "Application Load Balancers (ALBs) that do not drop HTTP headers may expose sensitive metadata, increasing the risk of information leaks.",
    "Mitigation": "Enable ALB settings to drop unnecessary HTTP headers and reduce exposure to fingerprinting attacks.",
    "Service": "AWS Elastic Load Balancing"
  },
  {
    "Threat ID": "ALB_005",
    "Threat Name": "Application Load Balancer Not Dropping HTTP Headers",
    "Source": "Potential Information Disclosure",
    "Target": "AWS Application Load Balancer",
    "Description": "ALBs that do not drop unnecessary HTTP headers may expose internal server information, making them vulnerable to reconnaissance attacks and potential exploits.",
    "Mitigation": "Ensure that ALBs are configured to drop unnecessary HTTP headers to prevent information disclosure and mitigate security risks.",
    "Service": "AWS Elastic Load Balancing"
  },
  {
    "Threat ID": "RDS_007",
    "Threat Name": "Amazon RDS Instances Without Backup Policy",
    "Source": "Risk of Data Loss",
    "Target": "AWS RDS Instance",
    "Description": "RDS instances without an automated backup policy may suffer data loss in case of accidental deletions, infrastructure failures, or security breaches.",
    "Mitigation": "Ensure that RDS instances have automated backups enabled with an appropriate retention period for disaster recovery and compliance.",
    "Service": "AWS RDS"
  },
  {
    "Threat ID": "RDS_008",
    "Threat Name": "Amazon RDS Cluster Without Backup Policy",
    "Source": "Risk of Data Loss",
    "Target": "AWS RDS Cluster",
    "Description": "RDS clusters without a backup policy may lead to permanent data loss in case of failures or accidental modifications.",
    "Mitigation": "Ensure that RDS clusters have an automated backup policy enabled with proper retention settings to maintain recoverability.",
    "Service": "AWS RDS"
  },
  {
    "Threat ID": "ELASTICACHE_003",
    "Threat Name": "Amazon ElastiCache Redis Cluster Without Automatic Backups",
    "Source": "Risk of Data Loss",
    "Target": "AWS ElastiCache Redis Cluster",
    "Description": "ElastiCache Redis clusters without automatic backups enabled are vulnerable to data loss in case of node failures or configuration errors.",
    "Mitigation": "Enable automatic backups for ElastiCache Redis clusters to ensure data recoverability and reduce downtime in case of failures.",
    "Service": "AWS ElastiCache"
  },
  {
    "Threat ID": "EC2_009",
    "Threat Name": "EC2 Instance Not EBS Optimized",
    "Source": "Suboptimal Performance and High Latency",
    "Target": "AWS EC2 Instance",
    "Description": "EC2 instances that are not EBS-optimized may suffer from suboptimal performance, increased disk latency, and potential I/O throttling.",
    "Mitigation": "Ensure that EC2 instances are EBS-optimized for improved disk performance and lower I/O contention, especially for high-throughput workloads.",
    "Service": "AWS EC2"
  },
  {
    "Threat ID": "EC2_010",
    "Threat Name": "EC2 Instance Not EBS Optimized",
    "Source": "Suboptimal Performance and High Latency",
    "Target": "AWS EC2 Instance",
    "Description": "EC2 instances that are not EBS-optimized may suffer from suboptimal performance, increased disk latency, and potential I/O throttling, impacting application responsiveness and efficiency.",
    "Mitigation": "Ensure that EC2 instances are EBS-optimized for improved disk performance and lower I/O contention, especially for high-throughput and latency-sensitive workloads.",
    "Service": "AWS EC2"
  },
  {
    "Threat ID": "EC2_011",
    "Threat Name": "EC2 Instance Not EBS Optimized",
    "Source": "Suboptimal Performance and High Latency",
    "Target": "AWS EC2 Instance (Terraform Configuration)",
    "Description": "EC2 instances provisioned through Terraform that are not configured to be EBS-optimized may suffer from disk performance degradation, leading to application slowness and higher infrastructure costs.",
    "Mitigation": "Ensure Terraform configurations explicitly enable EBS optimization for EC2 instances to maintain optimal disk throughput and avoid unnecessary performance bottlenecks.",
    "Service": "AWS EC2"
  },
  {
    "Threat ID": "EC2_012",
    "Threat Name": "EC2 Instance Not EBS Optimized",
    "Source": "Suboptimal Performance and High Latency",
    "Target": "AWS EC2 Instance (CloudFormation Configuration)",
    "Description": "EC2 instances deployed using AWS CloudFormation that are not set to be EBS-optimized may result in inefficient resource utilization and slower disk operations.",
    "Mitigation": "Ensure CloudFormation templates enable EBS optimization for EC2 instances to prevent performance degradation and ensure consistent storage performance.",
    "Service": "AWS EC2"
  },
  {
    "Threat ID": "EC2_013",
    "Threat Name": "EC2 Instance Not EBS Optimized",
    "Source": "Suboptimal Performance and High Latency",
    "Target": "AWS EC2 Instance (Configuration Blocks)",
    "Description": "EC2 instances within deeply nested configuration blocks that are not EBS-optimized may inadvertently lead to degraded performance and I/O bottlenecks.",
    "Mitigation": "Review all nested configuration blocks and ensure that EBS optimization is explicitly enabled for EC2 instances.",
    "Service": "AWS EC2"
  },
  {
    "Threat ID": "EC2_014",
    "Threat Name": "EC2 Instance Not EBS Optimized",
    "Source": "Suboptimal Performance and High Latency",
    "Target": "AWS EC2 Instance (Infrastructure as Code Configuration)",
    "Description": "EC2 instances configured via Infrastructure as Code (IaC) frameworks that do not enforce EBS optimization may lead to inefficient resource allocation and unpredictable performance issues.",
    "Mitigation": "Ensure that Infrastructure as Code (Terraform, CloudFormation, etc.) explicitly enables EBS optimization for all EC2 instances deployed.",
    "Service": "AWS EC2"
  },
  {
    "Threat ID": "EC2_015",
    "Threat Name": "EC2 Instance Not EBS Optimized",
    "Source": "Suboptimal Performance and High Latency",
    "Target": "AWS EC2 Instance",
    "Description": "EC2 instances that are not EBS-optimized may experience degraded disk performance, increased latency, and I/O throttling, affecting workload efficiency.",
    "Mitigation": "Ensure that all EC2 instances are EBS-optimized to maximize disk throughput and prevent performance degradation.",
    "Service": "AWS EC2"
  },
  {
    "Threat ID": "ECR_004",
    "Threat Name": "ECR Repositories Not Encrypted Using KMS",
    "Source": "Unencrypted Image Storage",
    "Target": "AWS Elastic Container Registry (ECR)",
    "Description": "ECR repositories that are not encrypted using AWS KMS may store sensitive container images without proper protection, increasing the risk of unauthorized access.",
    "Mitigation": "Enable AWS KMS encryption for ECR repositories to protect stored container images from unauthorized access and comply with security best practices.",
    "Service": "AWS ECR"
  },
  {
    "Threat ID": "ES_007",
    "Threat Name": "Elasticsearch Cluster Not Configured Inside a VPC",
    "Source": "Unrestricted Network Access",
    "Target": "AWS Elasticsearch Service",
    "Description": "Elasticsearch clusters that are not deployed within a VPC may be exposed to the public internet, increasing the risk of data breaches and unauthorized access.",
    "Mitigation": "Ensure that all Elasticsearch clusters are deployed inside a VPC to restrict network access and enhance security.",
    "Service": "AWS Elasticsearch"
  },
  {
    "Threat ID": "ELB_006",
    "Threat Name": "ELB Without Cross-Zone Load Balancing",
    "Source": "Load Imbalance and Performance Degradation",
    "Target": "AWS Elastic Load Balancer (ELB)",
    "Description": "ELBs that do not have cross-zone load balancing enabled may experience uneven traffic distribution, leading to inefficient resource utilization and potential service disruptions.",
    "Mitigation": "Enable cross-zone load balancing on ELBs to ensure even traffic distribution and improve application availability.",
    "Service": "AWS Elastic Load Balancing"
  },
  {
    "Threat ID": "RDS_009",
    "Threat Name": "RDS Cluster Without Deletion Protection",
    "Source": "Risk of Accidental Deletion",
    "Target": "AWS RDS Cluster",
    "Description": "RDS clusters that do not have deletion protection enabled may be accidentally deleted, resulting in data loss and service disruption.",
    "Mitigation": "Enable deletion protection on all critical RDS clusters to prevent accidental deletions and ensure data availability.",
    "Service": "AWS RDS"
  },
  {
    "Threat ID": "RDS_010",
    "Threat Name": "RDS Global Clusters Not Encrypted",
    "Source": "Unencrypted Data Storage",
    "Target": "AWS RDS Global Cluster",
    "Description": "RDS global clusters that are not encrypted may store sensitive data without adequate protection, increasing the risk of unauthorized access.",
    "Mitigation": "Ensure that all RDS global clusters are encrypted using AWS KMS to enhance data security and compliance.",
    "Service": "AWS RDS"
  },
  {
    "Threat ID": "REDSHIFT_003",
    "Threat Name": "Redshift Cluster Not Configured to Allow Version Upgrades",
    "Source": "Outdated and Vulnerable Database Instances",
    "Target": "AWS Redshift Cluster",
    "Description": "Redshift clusters that do not allow automatic version upgrades may remain on outdated versions, exposing them to security vulnerabilities and missing performance improvements.",
    "Mitigation": "Ensure that Redshift clusters are configured to allow version upgrades by default to maintain security and performance updates.",
    "Service": "AWS Redshift"
  },
  {
    "Threat ID": "REDSHIFT_004",
    "Threat Name": "Redshift Cluster Not Encrypted Using KMS",
    "Source": "Unencrypted Data Storage",
    "Target": "AWS Redshift Cluster",
    "Description": "Redshift clusters that are not encrypted with AWS KMS may store sensitive data without adequate protection, increasing the risk of unauthorized access and data breaches.",
    "Mitigation": "Ensure that Redshift clusters are encrypted using AWS KMS to enhance data security and regulatory compliance.",
    "Service": "AWS Redshift"
  },
  {
    "Threat ID": "S3_015",
    "Threat Name": "S3 Bucket Without Lock Configuration Enabled",
    "Source": "Data Tampering and Accidental Deletion",
    "Target": "Amazon S3 Bucket",
    "Description": "S3 buckets that do not have object lock configuration enabled may be susceptible to accidental deletions or unauthorized modifications, leading to data integrity issues.",
    "Mitigation": "Enable object lock configuration on S3 buckets to prevent accidental deletions and ensure compliance with retention policies.",
    "Service": "Amazon S3"
  },
  {
    "Threat ID": "S3_016",
    "Threat Name": "S3 Bucket Without Cross-Region Replication Enabled",
    "Source": "Data Availability and Disaster Recovery Risk",
    "Target": "Amazon S3 Bucket",
    "Description": "S3 buckets without cross-region replication may face data loss risks in case of regional failures, limiting data redundancy and availability.",
    "Mitigation": "Enable cross-region replication (CRR) on S3 buckets to enhance data redundancy and disaster recovery preparedness.",
    "Service": "Amazon S3"
  },
  {
    "Threat ID": "S3_017",
    "Threat Name": "S3 Buckets Not Encrypted with KMS by Default",
    "Source": "Unencrypted Data Storage",
    "Target": "Amazon S3 Bucket",
    "Description": "S3 buckets that are not encrypted using AWS KMS by default may store sensitive data without adequate protection, increasing the risk of unauthorized access.",
    "Mitigation": "Ensure that S3 buckets are encrypted using AWS KMS as the default encryption method to enhance security and compliance.",
    "Service": "Amazon S3"
  },
  {
    "Threat ID": "RDS_011",
    "Threat Name": "RDS Database Cluster Snapshot Not Encrypted",
    "Source": "Unprotected Backup Data",
    "Target": "AWS RDS Database Cluster",
    "Description": "Unencrypted RDS database cluster snapshots may expose sensitive data to unauthorized access, increasing the risk of data breaches.",
    "Mitigation": "Ensure that all RDS database cluster snapshots are encrypted using AWS KMS to enhance data protection and compliance.",
    "Service": "AWS RDS"
  },
  {
    "Threat ID": "CODEBUILD_002",
    "Threat Name": "AWS CodeBuild Project Not Encrypted Using CMK",
    "Source": "Unencrypted Build Artifacts",
    "Target": "AWS CodeBuild Project",
    "Description": "CodeBuild projects that do not use AWS KMS Customer Managed Keys (CMKs) may store build artifacts without adequate encryption, increasing security risks.",
    "Mitigation": "Ensure that AWS CodeBuild projects are encrypted using AWS KMS CMK to protect build artifacts and maintain security compliance.",
    "Service": "AWS CodeBuild"
  },
  {
    "Threat ID": "VPC_009",
    "Threat Name": "Default VPC is Provisioned",
    "Source": "Misconfigured Network Security",
    "Target": "AWS VPC",
    "Description": "Provisioning a default VPC without customization can lead to security risks, such as unnecessary internet access, lack of proper segmentation, and potential exposure of resources.",
    "Mitigation": "Avoid provisioning default VPCs and instead create custom VPCs with properly defined security groups, subnets, and route tables.",
    "Service": "AWS VPC"
  },
  {
    "Threat ID": "SECRETSMANAGER_003",
    "Threat Name": "Secrets Manager Secret Not Encrypted Using KMS CMK",
    "Source": "Unprotected Sensitive Data",
    "Target": "AWS Secrets Manager",
    "Description": "Secrets stored in AWS Secrets Manager without encryption using AWS KMS CMK may be at risk of unauthorized access or leakage.",
    "Mitigation": "Ensure that all secrets in AWS Secrets Manager are encrypted using AWS KMS CMK to enhance security and compliance.",
    "Service": "AWS Secrets Manager"
  },
  {
    "Threat ID": "ALB_006",
    "Threat Name": "Load Balancer Without Deletion Protection",
    "Source": "Risk of Accidental Deletion",
    "Target": "AWS Application Load Balancer",
    "Description": "Load balancers without deletion protection enabled may be accidentally deleted, leading to downtime and service disruption.",
    "Mitigation": "Enable deletion protection for all critical load balancers to prevent accidental deletions and maintain service availability.",
    "Service": "AWS Elastic Load Balancing"
  },
  {
    "Threat ID": "LB_007",
    "Threat Name": "Network/Gateway Load Balancer Without Cross-Zone Load Balancing",
    "Source": "Load Imbalance and Performance Issues",
    "Target": "AWS Network/Gateway Load Balancer",
    "Description": "Network or Gateway Load Balancers that do not have cross-zone load balancing enabled may experience inefficient traffic distribution, causing performance issues and uneven load handling.",
    "Mitigation": "Ensure that cross-zone load balancing is enabled for Network and Gateway Load Balancers to optimize traffic distribution across multiple availability zones.",
    "Service": "AWS Elastic Load Balancing"
  },
  {
    "Threat ID": "AUTOSCALING_002",
    "Threat Name": "Autoscaling Groups Without Tags for Launch Configurations",
    "Source": "Lack of Resource Organization and Access Control",
    "Target": "AWS Auto Scaling Group",
    "Description": "Auto Scaling groups that do not supply tags to launch configurations may lack proper resource tracking, cost allocation, and access control enforcement.",
    "Mitigation": "Ensure that all Auto Scaling groups apply relevant tags to launch configurations for better resource management and compliance.",
    "Service": "AWS Auto Scaling"
  },
  {
    "Threat ID": "REDSHIFT_005",
    "Threat Name": "Redshift Cluster Deployed Outside of a VPC",
    "Source": "Unrestricted Network Access",
    "Target": "AWS Redshift Cluster",
    "Description": "Redshift clusters that are not deployed within a VPC may be publicly accessible, increasing the risk of unauthorized access and data breaches.",
    "Mitigation": "Ensure that all Redshift clusters are deployed within a VPC to enforce network security controls and limit unauthorized access.",
    "Service": "AWS Redshift"
  },
  {
    "Threat ID": "WORKSPACES_003",
    "Threat Name": "Workspace User Volumes Not Encrypted",
    "Source": "Unprotected Data at Rest",
    "Target": "AWS WorkSpaces User Volumes",
    "Description": "User volumes in AWS WorkSpaces that are not encrypted may store sensitive data in an unprotected state, increasing the risk of unauthorized access and data breaches.",
    "Mitigation": "Ensure that all AWS WorkSpaces user volumes are encrypted using AWS KMS to protect data at rest.",
    "Service": "AWS WorkSpaces"
  },
  {
    "Threat ID": "WORKSPACES_004",
    "Threat Name": "Workspace Root Volumes Not Encrypted",
    "Source": "Unprotected Data at Rest",
    "Target": "AWS WorkSpaces Root Volumes",
    "Description": "Root volumes in AWS WorkSpaces that are not encrypted may store critical system and user data in an unprotected state, increasing the risk of unauthorized access.",
    "Mitigation": "Ensure that all AWS WorkSpaces root volumes are encrypted using AWS KMS to secure system data.",
    "Service": "AWS WorkSpaces"
  },
  {
    "Threat ID": "RDS_012",
    "Threat Name": "RDS Instances Without Multi-AZ Enabled",
    "Source": "Single Point of Failure",
    "Target": "AWS RDS Instance",
    "Description": "RDS instances that do not have Multi-AZ enabled are at risk of downtime and data unavailability in case of an infrastructure failure in a single availability zone.",
    "Mitigation": "Ensure that Multi-AZ is enabled for all critical RDS instances to enhance availability and fault tolerance.",
    "Service": "AWS RDS"
  },
  {
    "Threat ID": "LOGS_003",
    "Threat Name": "CloudWatch Log Group Not Encrypted Using KMS",
    "Source": "Unencrypted Log Storage",
    "Target": "AWS CloudWatch Log Group",
    "Description": "CloudWatch log groups that are not encrypted using AWS KMS may store sensitive log data without adequate protection, increasing the risk of unauthorized access.",
    "Mitigation": "Ensure that all CloudWatch log groups are encrypted using AWS KMS to protect log data and comply with security best practices.",
    "Service": "AWS CloudWatch"
  },
  {
    "Threat ID": "ATHENA_002",
    "Threat Name": "Athena Workgroup Not Encrypted",
    "Source": "Unencrypted Query Results",
    "Target": "AWS Athena Workgroup",
    "Description": "Athena workgroups that do not use encryption may store query results in an unprotected format, increasing the risk of data leakage and unauthorized access.",
    "Mitigation": "Ensure that AWS Athena workgroups are configured with encryption using AWS KMS to secure query results and prevent unauthorized access.",
    "Service": "AWS Athena"
  },
  {
    "Threat ID": "TIMESTREAM_001",
    "Threat Name": "Timestream Database Not Encrypted with KMS",
    "Source": "Unencrypted Data at Rest",
    "Target": "AWS Timestream Database",
    "Description": "Timestream databases that are not encrypted using AWS KMS may store sensitive time-series data without adequate protection, increasing the risk of unauthorized access.",
    "Mitigation": "Ensure that AWS Timestream databases are encrypted using AWS KMS CMK to enhance data security and compliance.",
    "Service": "AWS Timestream"
  },
  {
    "Threat ID": "RDS_013",
    "Threat Name": "RDS Database Without IAM Authentication",
    "Source": "Weak Authentication Mechanisms",
    "Target": "AWS RDS Database",
    "Description": "RDS databases that do not have IAM authentication enabled rely solely on static credentials, increasing the risk of unauthorized access and credential mismanagement.",
    "Mitigation": "Ensure that IAM authentication is enabled for RDS databases to improve access control and reduce reliance on static credentials.",
    "Service": "AWS RDS"
  },
  {
    "Threat ID": "RDS_014",
    "Threat Name": "RDS Cluster Without IAM Authentication Enabled",
    "Source": "Weak Authentication Mechanisms",
    "Target": "AWS RDS Cluster",
    "Description": "RDS clusters that do not have IAM authentication enabled rely solely on static credentials, increasing the risk of unauthorized access and credential mismanagement.",
    "Mitigation": "Enable IAM authentication for RDS clusters to improve access control and reduce reliance on static credentials.",
    "Service": "AWS RDS"
  },
  {
    "Threat ID": "ECR_005",
    "Threat Name": "ECR Image Scanning on Push Not Enabled",
    "Source": "Undetected Vulnerabilities in Container Images",
    "Target": "AWS Elastic Container Registry (ECR)",
    "Description": "ECR repositories without image scanning on push enabled may allow vulnerable container images to be stored and deployed without security assessments.",
    "Mitigation": "Ensure that ECR repositories have image scanning on push enabled to detect and remediate vulnerabilities before container images are used.",
    "Service": "AWS ECR"
  },
  {
    "Threat ID": "TRANSFER_001",
    "Threat Name": "AWS Transfer Server Exposed Publicly",
    "Source": "Unauthorized Data Access",
    "Target": "AWS Transfer Server",
    "Description": "AWS Transfer servers that are publicly accessible may expose sensitive files to unauthorized users, increasing the risk of data breaches.",
    "Mitigation": "Ensure that AWS Transfer servers are configured to restrict access to specific IP addresses and require authentication mechanisms to prevent unauthorized access.",
    "Service": "AWS Transfer"
  },
  {
    "Threat ID": "DYNAMODB_003",
    "Threat Name": "DynamoDB Global Table Point-in-Time Recovery Not Enabled",
    "Source": "Risk of Data Loss",
    "Target": "AWS DynamoDB Global Table",
    "Description": "DynamoDB global tables without point-in-time recovery enabled may be unable to restore lost or corrupted data, leading to business disruptions.",
    "Mitigation": "Ensure that point-in-time recovery is enabled for all DynamoDB global tables to provide data recovery options in case of accidental deletions or corruption.",
    "Service": "AWS DynamoDB"
  },
  {
    "Threat ID": "BACKUP_002",
    "Threat Name": "AWS Backup Vault Not Encrypted with KMS CMK",
    "Source": "Unprotected Backup Data",
    "Target": "AWS Backup Vault",
    "Description": "AWS Backup vaults that are not encrypted using AWS KMS CMK may store sensitive backup data in an unprotected state, increasing the risk of unauthorized access.",
    "Mitigation": "Ensure that AWS Backup vaults are encrypted at rest using AWS KMS CMK to protect backup data from unauthorized access and compliance violations.",
    "Service": "AWS Backup"
  },
  {
    "Threat ID": "GLACIER_001",
    "Threat Name": "Glacier Vault Access Policy is Public",
    "Source": "Unauthorized Data Access",
    "Target": "AWS Glacier Vault",
    "Description": "Glacier vaults with public access policies may expose archived data to unauthorized entities, leading to potential data breaches.",
    "Mitigation": "Ensure that Glacier Vault access policies restrict access to specific AWS services or principals and do not allow public access.",
    "Service": "AWS Glacier"
  },
  {
    "Threat ID": "SQS_005",
    "Threat Name": "SQS Queue Policy is Public",
    "Source": "Unauthorized Message Access",
    "Target": "AWS Simple Queue Service (SQS) Queue",
    "Description": "SQS queue policies that allow public access may expose messages to unauthorized users, leading to potential data leaks or misuse.",
    "Mitigation": "Ensure that SQS queue policies allow access only to specific AWS services or principals to prevent unauthorized access.",
    "Service": "AWS SQS"
  },
  {
    "Threat ID": "SNS_004",
    "Threat Name": "SNS Topic Policy is Public",
    "Source": "Unauthorized Message Publishing",
    "Target": "AWS Simple Notification Service (SNS) Topic",
    "Description": "SNS topic policies that allow public access may enable unauthorized message publishing or subscription, leading to security risks.",
    "Mitigation": "Ensure that SNS topic policies restrict access to authorized AWS services or principals to prevent misuse.",
    "Service": "AWS SNS"
  },
  {
    "Threat ID": "QLDB_002",
    "Threat Name": "QLDB Ledger Permissions Mode Not Set to STANDARD",
    "Source": "Insecure Ledger Access Control",
    "Target": "AWS Quantum Ledger Database (QLDB)",
    "Description": "QLDB ledgers with improper permissions mode may allow unauthorized modifications, compromising data integrity.",
    "Mitigation": "Ensure that QLDB ledger permissions mode is set to STANDARD to enforce fine-grained access control.",
    "Service": "AWS QLDB"
  },
  {
    "Threat ID": "EMR_003",
    "Threat Name": "EMR Cluster Security Configuration Not Using SSE-KMS",
    "Source": "Unencrypted Data at Rest",
    "Target": "AWS EMR Cluster",
    "Description": "EMR clusters without Server-Side Encryption (SSE-KMS) may store sensitive data in an unencrypted format, increasing security risks.",
    "Mitigation": "Ensure that EMR clusters use SSE-KMS for encrypting data at rest to enhance security and compliance.",
    "Service": "AWS EMR"
  },
  {
    "Threat ID": "QLDB_003",
    "Threat Name": "QLDB Ledger Deletion Protection Not Enabled",
    "Source": "Risk of Accidental Deletion",
    "Target": "AWS Quantum Ledger Database (QLDB)",
    "Description": "QLDB ledgers without deletion protection enabled may be accidentally deleted, leading to data loss and operational disruptions.",
    "Mitigation": "Ensure that deletion protection is enabled for all QLDB ledgers to prevent accidental deletions.",
    "Service": "AWS QLDB"
  },
  {
    "Threat ID": "LAMBDA_006",
    "Threat Name": "Lambda Function Environment Variables Not Encrypted",
    "Source": "Exposure of Sensitive Configuration Data",
    "Target": "AWS Lambda Function",
    "Description": "Lambda functions that do not encrypt environment variables may expose sensitive configuration data, such as API keys or database credentials, leading to security vulnerabilities.",
    "Mitigation": "Ensure that Lambda environment variables are encrypted using AWS KMS to prevent unauthorized access.",
    "Service": "AWS Lambda"
  },
  {
    "Threat ID": "LAMBDA_007",
    "Threat Name": "Lambda Function Environment Variables Not Encrypted",
    "Source": "Exposure of Sensitive Configuration Data",
    "Target": "AWS Lambda Function",
    "Description": "Lambda functions that do not encrypt environment variables may expose sensitive configuration data, such as API keys or database credentials, leading to security vulnerabilities.",
    "Mitigation": "Ensure that Lambda environment variables are encrypted using AWS KMS to prevent unauthorized access.",
    "Service": "AWS Lambda"
  },
  {
    "Threat ID": "CLOUDFRONT_003",
    "Threat Name": "CloudFront Distribution Using Insecure TLS Version",
    "Source": "Weak Transport Encryption",
    "Target": "AWS CloudFront Distribution",
    "Description": "CloudFront distributions using TLS versions below 1.2 may be vulnerable to security weaknesses and attacks, such as protocol downgrade attacks.",
    "Mitigation": "Ensure that CloudFront distributions use TLS v1.2 or higher for secure transport encryption.",
    "Service": "AWS CloudFront"
  },
  {
    "Threat ID": "WAF_004",
    "Threat Name": "AWS WAF Web ACL Without Associated Rules",
    "Source": "Lack of Web Application Protection",
    "Target": "AWS Web Application Firewall (WAF) Web ACL",
    "Description": "WAF Web ACLs without associated rules do not provide protection against web application threats, leaving applications vulnerable to attacks such as SQL injection and XSS.",
    "Mitigation": "Ensure that WAF Web ACLs have properly configured rules to detect and mitigate web threats.",
    "Service": "AWS WAF"
  },
  {
    "Threat ID": "WAF_005",
    "Threat Name": "AWS WAF Web ACL Logging Not Enabled",
    "Source": "Lack of Visibility into Web Application Traffic",
    "Target": "AWS Web Application Firewall (WAF) Web ACL",
    "Description": "WAF Web ACLs without logging enabled prevent security teams from monitoring and analyzing web traffic for malicious activities.",
    "Mitigation": "Ensure that logging is enabled for WAF Web ACLs to provide visibility into web application traffic and detect potential threats.",
    "Service": "AWS WAF"
  },
  {
    "Threat ID": "KINESIS_002",
    "Threat Name": "Kinesis Video Stream Not Encrypted Using KMS CMK",
    "Source": "Unencrypted Media Data at Rest",
    "Target": "AWS Kinesis Video Stream",
    "Description": "Kinesis Video Streams that are not encrypted using AWS KMS CMK may store sensitive video data without adequate protection, increasing the risk of unauthorized access.",
    "Mitigation": "Ensure that Kinesis Video Streams are encrypted using AWS KMS CMK to enhance security and compliance.",
    "Service": "AWS Kinesis Video Streams"
  },
  {
    "Threat ID": "FSX_001",
    "Threat Name": "FSx ONTAP File System Not Encrypted with KMS",
    "Source": "Unencrypted File Storage",
    "Target": "AWS FSx ONTAP File System",
    "Description": "FSx ONTAP file systems that are not encrypted using AWS KMS CMK may store sensitive data without adequate protection, increasing the risk of unauthorized access.",
    "Mitigation": "Ensure that FSx ONTAP file systems are encrypted using AWS KMS CMK to enhance data security and compliance.",
    "Service": "AWS FSx"
  },
  {
    "Threat ID": "FSX_002",
    "Threat Name": "FSx Windows File System Not Encrypted with KMS",
    "Source": "Unencrypted File Storage",
    "Target": "AWS FSx Windows File System",
    "Description": "FSx Windows file systems that are not encrypted using AWS KMS CMK may store sensitive data without protection, increasing the risk of unauthorized access.",
    "Mitigation": "Ensure that FSx Windows file systems are encrypted using AWS KMS CMK to enhance security and compliance.",
    "Service": "AWS FSx"
  },
  {
    "Threat ID": "IMAGEBUILDER_001",
    "Threat Name": "Image Builder Component Not Encrypted with KMS",
    "Source": "Unprotected Image Components",
    "Target": "AWS Image Builder Component",
    "Description": "Image Builder components that are not encrypted using AWS KMS CMK may be vulnerable to unauthorized access and modification.",
    "Mitigation": "Ensure that all Image Builder components are encrypted using AWS KMS CMK to maintain security and prevent unauthorized modifications.",
    "Service": "AWS Image Builder"
  },
  {
    "Threat ID": "S3_015",
    "Threat Name": "S3 Object Copy Not Encrypted with KMS",
    "Source": "Unencrypted Data Transfer",
    "Target": "AWS S3 Object",
    "Description": "S3 objects copied without KMS encryption may be stored in an unprotected manner, increasing the risk of unauthorized access.",
    "Mitigation": "Ensure that S3 object copies are encrypted using AWS KMS CMK to protect data during transfer and storage.",
    "Service": "Amazon S3"
  },
  {
    "Threat ID": "DOCDB_004",
    "Threat Name": "DocumentDB Not Encrypted with KMS",
    "Source": "Unprotected Database Storage",
    "Target": "AWS DocumentDB Cluster",
    "Description": "DocumentDB clusters that are not encrypted using AWS KMS CMK may store sensitive data in an unprotected format, increasing security risks.",
    "Mitigation": "Ensure that DocumentDB clusters are encrypted using AWS KMS CMK to enhance security and compliance.",
    "Service": "AWS DocumentDB"
  },
  {
    "Threat ID": "EBS_003",
    "Threat Name": "EBS Snapshot Copy Not Encrypted with KMS",
    "Source": "Unprotected Backup Data",
    "Target": "AWS EBS Snapshot",
    "Description": "EBS snapshot copies that are not encrypted using AWS KMS CMK may store sensitive data without protection, increasing the risk of unauthorized access.",
    "Mitigation": "Ensure that all EBS snapshot copies are encrypted using AWS KMS CMK to prevent data exposure.",
    "Service": "AWS EBS"
  },
  {
    "Threat ID": "EFS_002",
    "Threat Name": "EFS File System Not Encrypted with KMS",
    "Source": "Unencrypted File Storage",
    "Target": "AWS EFS File System",
    "Description": "EFS file systems that are not encrypted using AWS KMS CMK may store sensitive data in an unprotected state, increasing security risks.",
    "Mitigation": "Ensure that AWS EFS file systems are encrypted using AWS KMS CMK to enhance security and compliance.",
    "Service": "AWS EFS"
  },
  {
    "Threat ID": "KINESIS_003",
    "Threat Name": "Kinesis Stream Not Encrypted with KMS",
    "Source": "Unprotected Data Streaming",
    "Target": "AWS Kinesis Stream",
    "Description": "Kinesis streams that are not encrypted using AWS KMS CMK may store sensitive streaming data without protection, increasing the risk of data exposure.",
    "Mitigation": "Ensure that AWS Kinesis streams are encrypted using AWS KMS CMK to maintain data security.",
    "Service": "AWS Kinesis"
  },
  {
    "Threat ID": "S3_016",
    "Threat Name": "S3 Bucket Object Not Encrypted with KMS",
    "Source": "Unprotected Storage",
    "Target": "AWS S3 Bucket Object",
    "Description": "S3 bucket objects that are not encrypted using AWS KMS CMK may be vulnerable to unauthorized access and data breaches.",
    "Mitigation": "Ensure that all S3 bucket objects are encrypted using AWS KMS CMK to enhance security and compliance.",
    "Service": "Amazon S3"
  },
  {
    "Threat ID": "SAGEMAKER_002",
    "Threat Name": "SageMaker Domain and Notebook Instance Not Encrypted with KMS",
    "Source": "Unprotected Machine Learning Data",
    "Target": "AWS SageMaker Domain and Notebook Instance",
    "Description": "SageMaker domains and notebook instances that are not encrypted using AWS KMS CMK may store sensitive machine learning data in an unprotected manner, increasing security risks.",
    "Mitigation": "Ensure that AWS SageMaker domains and notebook instances are encrypted using AWS KMS CMK to enhance security and compliance.",
    "Service": "AWS SageMaker"
  },
  {
    "Threat ID": "SAGEMAKER_003",
    "Threat Name": "SageMaker Domain and Notebook Instance Not Encrypted with KMS",
    "Source": "Unprotected Machine Learning Data",
    "Target": "AWS SageMaker",
    "Description": "SageMaker domains and notebook instances that are not encrypted using AWS KMS CMK may store sensitive machine learning data in an unprotected manner, increasing security risks.",
    "Mitigation": "Ensure that AWS SageMaker domains and notebook instances are encrypted using AWS KMS CMK to enhance security and compliance.",
    "Service": "AWS SageMaker"
  },
  {
    "Threat ID": "EBS_004",
    "Threat Name": "EBS Volume Not Encrypted with KMS",
    "Source": "Unprotected Data Storage",
    "Target": "AWS Elastic Block Store (EBS)",
    "Description": "EBS volumes that are not encrypted using AWS KMS CMK may store sensitive data in an unprotected state, increasing security risks.",
    "Mitigation": "Ensure that AWS EBS volumes are encrypted using AWS KMS CMK to prevent unauthorized access and enhance data protection.",
    "Service": "AWS EBS"
  },
  {
    "Threat ID": "FSX_003",
    "Threat Name": "FSx Lustre File System Not Encrypted with KMS",
    "Source": "Unprotected High-Performance Storage",
    "Target": "AWS FSx Lustre File System",
    "Description": "FSx Lustre file systems that are not encrypted using AWS KMS CMK may expose high-performance file storage to unauthorized access.",
    "Mitigation": "Ensure that AWS FSx Lustre file systems are encrypted using AWS KMS CMK to maintain data confidentiality and security.",
    "Service": "AWS FSx Lustre"
  },
  {
    "Threat ID": "ELASTICACHE_005",
    "Threat Name": "ElastiCache Replication Group Not Encrypted with KMS",
    "Source": "Unprotected In-Memory Data",
    "Target": "AWS ElastiCache",
    "Description": "ElastiCache replication groups that are not encrypted using AWS KMS CMK may store sensitive data in an unprotected state, increasing security risks.",
    "Mitigation": "Ensure that AWS ElastiCache replication groups are encrypted using AWS KMS CMK to protect in-memory data.",
    "Service": "AWS ElastiCache"
  },
  {
    "Threat ID": "WAF_006",
    "Threat Name": "AWS WAF Does Not Prevent Log4j2 Exploits",
    "Source": "Remote Code Execution (CVE-2021-44228)",
    "Target": "AWS WAF",
    "Description": "Without appropriate WAF rules, applications may be vulnerable to the Log4j2 vulnerability (Log4Shell), leading to remote code execution and security compromise.",
    "Mitigation": "Ensure AWS WAF rules are configured to block requests containing patterns related to Log4j2 exploits to mitigate Log4Shell vulnerabilities.",
    "Service": "AWS WAF"
  },
  {
    "Threat ID": "APPSYNC_001",
    "Threat Name": "AWS AppSync Logging Not Enabled",
    "Source": "Lack of Visibility into API Requests",
    "Target": "AWS AppSync",
    "Description": "AppSync APIs without logging enabled may limit the ability to monitor and analyze API requests for security threats and debugging purposes.",
    "Mitigation": "Ensure AWS AppSync has logging enabled to provide visibility into API requests and enhance security monitoring.",
    "Service": "AWS AppSync"
  },
  {
    "Threat ID": "APPSYNC_002",
    "Threat Name": "AppSync GraphQL API Field-Level Logs Not Enabled",
    "Source": "Lack of Visibility into API Operations",
    "Target": "AWS AppSync GraphQL API",
    "Description": "AppSync GraphQL APIs without field-level logging may limit the ability to track and analyze API requests, making it difficult to detect security incidents or debug issues.",
    "Mitigation": "Ensure AppSync GraphQL APIs have field-level logs enabled to enhance visibility and security monitoring.",
    "Service": "AWS AppSync"
  },
  {
    "Threat ID": "GLUE_006",
    "Threat Name": "Glue Components Without Security Configuration",
    "Source": "Unsecured Data Processing",
    "Target": "AWS Glue Crawler, Glue DevEndpoint, Glue Job",
    "Description": "Glue components without an associated security configuration may process sensitive data in an unprotected manner, increasing the risk of data exposure.",
    "Mitigation": "Ensure that all AWS Glue components, including Crawlers, DevEndpoints, and Jobs, have security configurations associated with them.",
    "Service": "AWS Glue"
  },
  {
    "Threat ID": "ELASTICACHE_006",
    "Threat Name": "ElastiCache Security Group Resources Exist",
    "Source": "Unsecured In-Memory Data Access",
    "Target": "AWS ElastiCache Security Group",
    "Description": "ElastiCache security groups may be improperly configured, allowing unauthorized access to in-memory data stores.",
    "Mitigation": "Ensure that no AWS ElastiCache security group resources exist, and instead use VPC security groups for access control.",
    "Service": "AWS ElastiCache"
  },
  {
    "Threat ID": "MQ_003",
    "Threat Name": "Amazon MQ Broker Audit Logging Not Enabled",
    "Source": "Lack of Monitoring and Compliance",
    "Target": "AWS AmazonMQ Broker",
    "Description": "MQ brokers without audit logging enabled lack visibility into messaging activities, which can hinder compliance and forensic investigations.",
    "Mitigation": "Ensure that AWS AmazonMQ Broker audit logging is enabled to capture messaging activity for security and compliance purposes.",
    "Service": "AWS AmazonMQ"
  },
  {
    "Threat ID": "MQ_004",
    "Threat Name": "Amazon MQ Broker Audit Logging Not Enabled",
    "Source": "Lack of Monitoring and Compliance",
    "Target": "AWS MQ Broker",
    "Description": "MQ brokers without audit logging enabled lack visibility into messaging activities, making it difficult to detect security incidents and comply with regulatory requirements.",
    "Mitigation": "Ensure that AWS MQ Broker audit logging is enabled to capture messaging activity for security and compliance purposes.",
    "Service": "AWS MQ"
  },
  {
    "Threat ID": "DBSEC_001",
    "Threat Name": "AWS DB Security Group Resources Exist",
    "Source": "Misconfigured Access Controls",
    "Target": "AWS DB Security Group",
    "Description": "AWS DB security groups may be improperly configured, allowing unauthorized access to databases.",
    "Mitigation": "Ensure that no AWS DB security group resources exist, and use VPC security groups instead for managing database access.",
    "Service": "AWS RDS"
  },
  {
    "Threat ID": "IMAGEBUILDER_002",
    "Threat Name": "Image Builder Distribution Configuration Does Not Encrypt AMIs",
    "Source": "Unencrypted AMI Storage",
    "Target": "AWS Image Builder Distribution Configuration",
    "Description": "Image Builder Distribution Configurations that do not encrypt AMIs using AWS KMS CMK may store sensitive data in an unprotected state, increasing security risks.",
    "Mitigation": "Ensure that Image Builder Distribution Configuration encrypts AMIs using AWS KMS CMK.",
    "Service": "AWS Image Builder"
  },
  {
    "Threat ID": "IMAGEBUILDER_003",
    "Threat Name": "Image Recipe EBS Disks Not Encrypted with CMK",
    "Source": "Unprotected Disk Storage",
    "Target": "AWS Image Builder Image Recipe",
    "Description": "Image Recipe EBS disks that are not encrypted using AWS KMS CMK may be vulnerable to unauthorized access and data exposure.",
    "Mitigation": "Ensure that Image Recipe EBS disks are encrypted with AWS KMS CMK to enhance data security.",
    "Service": "AWS Image Builder"
  },
  {
    "Threat ID": "MEMORYDB_001",
    "Threat Name": "MemoryDB Not Encrypted at Rest",
    "Source": "Unprotected In-Memory Data",
    "Target": "AWS MemoryDB Cluster",
    "Description": "MemoryDB clusters that are not encrypted at rest using AWS KMS CMKs may store sensitive data in an unprotected manner, increasing the risk of unauthorized access.",
    "Mitigation": "Ensure that MemoryDB is encrypted at rest using AWS KMS CMKs.",
    "Service": "AWS MemoryDB"
  },
  {
    "Threat ID": "MEMORYDB_002",
    "Threat Name": "MemoryDB Data Not Encrypted in Transit",
    "Source": "Unprotected Data Transmission",
    "Target": "AWS MemoryDB Cluster",
    "Description": "MemoryDB clusters that do not encrypt data in transit may expose sensitive information during communication between nodes, increasing security risks.",
    "Mitigation": "Ensure MemoryDB data is encrypted in transit to protect data integrity and confidentiality.",
    "Service": "AWS MemoryDB"
  },
  {
    "Threat ID": "FSX_004",
    "Threat Name": "FSx OpenZFS File System Not Encrypted with KMS",
    "Source": "Unprotected File Storage",
    "Target": "AWS FSx OpenZFS File System",
    "Description": "FSx OpenZFS file systems that are not encrypted using AWS KMS CMK may expose sensitive data to unauthorized access.",
    "Mitigation": "Ensure that AWS FSx OpenZFS file systems are encrypted using AWS KMS CMK to maintain data confidentiality and security.",
    "Service": "AWS FSx"
  },
  {
    "Threat ID": "AMI_001",
    "Threat Name": "Amazon Machine Images (AMIs) Not Encrypted with KMS",
    "Source": "Unprotected Virtual Machine Images",
    "Target": "AWS AMI",
    "Description": "Amazon Machine Images (AMIs) that are not encrypted using AWS KMS CMKs may store sensitive data without adequate protection, increasing security risks.",
    "Mitigation": "Ensure that AMIs are encrypted using AWS KMS CMKs to prevent unauthorized access.",
    "Service": "AWS AMI"
  },
  {
    "Threat ID": "AMI_002",
    "Threat Name": "AMI Launch Permissions Not Restricted",
    "Source": "Unrestricted Image Access",
    "Target": "AWS AMI Launch Permission",
    "Description": "AMI launch permissions that are not properly restricted may allow unauthorized accounts to use the AMI, potentially leading to data exposure and misuse.",
    "Mitigation": "Ensure AMI launch permissions are limited to only authorized AWS accounts.",
    "Service": "AWS AMI"
  },
  {
    "Threat ID": "APIGW_002",
    "Threat Name": "API Gateway Domain Uses Outdated Security Policy",
    "Source": "Weak Transport Security",
    "Target": "AWS API Gateway Domain",
    "Description": "API Gateway domains that use outdated security policies may expose applications to known vulnerabilities and weaken HTTPS encryption.",
    "Mitigation": "Ensure API Gateway Domain uses a modern security policy to enforce strong encryption and security standards.",
    "Service": "AWS API Gateway"
  },
  {
    "Threat ID": "MQ_005",
    "Threat Name": "MQ Broker Minor Version Updates Not Enabled",
    "Source": "Outdated Software Version",
    "Target": "AWS MQ Broker",
    "Description": "Without automatic minor version updates, AWS MQ Broker may run outdated software, exposing the system to security vulnerabilities and performance issues.",
    "Mitigation": "Ensure that AWS MQ Broker minor version updates are enabled to receive the latest security patches and enhancements.",
    "Service": "AWS MQ"
  },
  {
    "Threat ID": "MQ_006",
    "Threat Name": "MQ Broker Version Not Up-to-Date",
    "Source": "Outdated Software",
    "Target": "AWS MQ Broker",
    "Description": "Running an outdated version of AWS MQ Broker increases the risk of security vulnerabilities and reduces system stability.",
    "Mitigation": "Ensure AWS MQ Broker is updated to the latest version to benefit from security patches and new features.",
    "Service": "AWS MQ"
  },
  {
    "Threat ID": "MQ_007",
    "Threat Name": "MQ Broker Configuration Using an Outdated Version",
    "Source": "Weak Configuration Management",
    "Target": "AWS MQ Configuration",
    "Description": "Using an outdated configuration version for MQ Broker may result in security weaknesses and deprecated features that can introduce vulnerabilities.",
    "Mitigation": "Ensure AWS MQ Broker configuration is updated to align with the latest supported version.",
    "Service": "AWS MQ"
  },
  {
    "Threat ID": "MQ_008",
    "Threat Name": "MQ Broker Not Encrypted with KMS CMK",
    "Source": "Unprotected Messaging Data",
    "Target": "AWS MQ Broker",
    "Description": "An MQ Broker that is not encrypted with AWS KMS CMK may expose sensitive messaging data to unauthorized access.",
    "Mitigation": "Ensure MQ Broker is encrypted using AWS KMS CMK for secure message storage and transmission.",
    "Service": "AWS MQ"
  },
  {
    "Threat ID": "BATCH_001",
    "Threat Name": "AWS Batch Job Defines a Privileged Container",
    "Source": "Containerized Privilege Escalation",
    "Target": "AWS Batch Job Definition",
    "Description": "A privileged container in AWS Batch may have excessive permissions, increasing the risk of privilege escalation attacks.",
    "Mitigation": "Ensure AWS Batch job definitions do not define privileged containers to maintain least privilege security principles.",
    "Service": "AWS Batch"
  },
  {
    "Threat ID": "RDS_006",
    "Threat Name": "RDS Not Using a Modern CA Certificate",
    "Source": "Weak Certificate Security",
    "Target": "AWS RDS",
    "Description": "An outdated CA certificate on an RDS instance may expose connections to potential security vulnerabilities and man-in-the-middle attacks.",
    "Mitigation": "Ensure RDS instances use a modern CA certificate for secure database connections.",
    "Service": "AWS RDS"
  },
  {
    "Threat ID": "DMS_003",
    "Threat Name": "DMS Replication Instance Not Encrypted with KMS CMK",
    "Source": "Unprotected Data Replication",
    "Target": "AWS DMS Replication Instance",
    "Description": "A DMS replication instance that is not encrypted with AWS KMS CMK may expose sensitive data during migration or replication.",
    "Mitigation": "Ensure AWS DMS replication instances are encrypted using AWS KMS CMK for secure data replication.",
    "Service": "AWS DMS"
  },
  {
    "Threat ID": "ELB_005",
    "Threat Name": "ELB Policy Uses Insecure Protocols",
    "Source": "Weak Transport Security",
    "Target": "AWS Load Balancer Policy",
    "Description": "An ELB policy that allows insecure protocols may expose applications to data interception, man-in-the-middle attacks, and protocol vulnerabilities.",
    "Mitigation": "Ensure that AWS ELB policies use only secure protocols such as TLS 1.2 or higher.",
    "Service": "AWS Elastic Load Balancer"
  },
  {
    "Threat ID": "APPSYNC_003",
    "Threat Name": "AppSync API Cache Not Encrypted at Rest",
    "Source": "Unprotected API Cache Storage",
    "Target": "AWS AppSync API Cache",
    "Description": "AppSync API caches that are not encrypted at rest may store sensitive API data in an unprotected state.",
    "Mitigation": "Ensure that AWS AppSync API Cache is encrypted at rest to prevent unauthorized access to cached API responses.",
    "Service": "AWS AppSync"
  },
  {
    "Threat ID": "APPSYNC_004",
    "Threat Name": "AppSync API Cache Not Encrypted in Transit",
    "Source": "Unprotected API Data Transmission",
    "Target": "AWS AppSync API Cache",
    "Description": "AppSync API caches that are not encrypted in transit may expose API data to interception during transmission.",
    "Mitigation": "Ensure that AWS AppSync API Cache is encrypted in transit to protect data confidentiality.",
    "Service": "AWS AppSync"
  },
  {
    "Threat ID": "CF_001",
    "Threat Name": "CloudFront Distribution Not Enabled",
    "Source": "Disabled Content Delivery",
    "Target": "AWS CloudFront Distribution",
    "Description": "If CloudFront distribution is not enabled, applications relying on CDN services may suffer from performance degradation and security weaknesses.",
    "Mitigation": "Ensure CloudFront distribution is enabled to enhance security and performance of content delivery.",
    "Service": "AWS CloudFront"
  },
  {
    "Threat ID": "API_001",
    "Threat Name": "API Gateway Deployment Lacking Create Before Destroy",
    "Source": "Deployment Misconfiguration",
    "Target": "AWS API Gateway Deployment",
    "Description": "Without 'create before destroy' enabled, API deployments may experience downtime and incomplete rollouts leading to broken integrations.",
    "Mitigation": "Ensure API Gateway deployments follow 'create before destroy' principles to maintain high availability.",
    "Service": "AWS API Gateway"
  },
  {
    "Threat ID": "CS_001",
    "Threat Name": "CloudSearch Not Using Latest TLS",
    "Source": "Weak Transport Security",
    "Target": "AWS CloudSearch",
    "Description": "Running AWS CloudSearch with an outdated TLS version increases the risk of data interception and security vulnerabilities.",
    "Mitigation": "Ensure AWS CloudSearch is configured to use the latest TLS version to secure data in transit.",
    "Service": "AWS CloudSearch"
  },
  {
    "Threat ID": "CP_001",
    "Threat Name": "CodePipeline Artifact Store Not Using KMS CMK",
    "Source": "Unencrypted Artifacts",
    "Target": "AWS CodePipeline",
    "Description": "Artifacts stored in AWS CodePipeline without encryption may expose application code and sensitive data.",
    "Mitigation": "Ensure AWS CodePipeline artifact store is encrypted using a KMS CMK.",
    "Service": "AWS CodePipeline"
  },
  {
    "Threat ID": "CS_002",
    "Threat Name": "CloudSearch Not Using HTTPS",
    "Source": "Unprotected Communication",
    "Target": "AWS CloudSearch",
    "Description": "If CloudSearch does not enforce HTTPS, data transmitted over the network can be intercepted by attackers.",
    "Mitigation": "Ensure AWS CloudSearch enforces HTTPS connections for secure data transmission.",
    "Service": "AWS CloudSearch"
  },
  {
    "Threat ID": "CA_001",
    "Threat Name": "CodeArtifact Domain Not Encrypted with KMS CMK",
    "Source": "Unprotected Package Storage",
    "Target": "AWS CodeArtifact",
    "Description": "If CodeArtifact domains are not encrypted, they may expose software packages and dependencies to unauthorized access.",
    "Mitigation": "Ensure AWS CodeArtifact Domain is encrypted using KMS CMK to secure package repositories.",
    "Service": "AWS CodeArtifact"
  },
  {
    "Threat ID": "DMS_004",
    "Threat Name": "DMS Replication Instance Not Receiving Minor Upgrades Automatically",
    "Source": "Outdated Software Components",
    "Target": "AWS DMS Replication Instance",
    "Description": "If minor upgrades are not enabled, the AWS DMS replication instance may run outdated software, increasing security risks.",
    "Mitigation": "Ensure AWS DMS replication instances are set to receive automatic minor upgrades.",
    "Service": "AWS DMS"
  },
  {
    "Threat ID": "ECS_001",
    "Threat Name": "ECS Cluster Does Not Enable Logging for ECS Exec",
    "Source": "Lack of Command Execution Auditing",
    "Target": "AWS ECS Cluster",
    "Description": "Without ECS Exec logging, administrators may lack visibility into commands executed on ECS containers, leading to auditing and security gaps.",
    "Mitigation": "Ensure ECS Cluster logging is enabled for ECS Exec to capture execution details.",
    "Service": "AWS ECS"
  },
  {
    "Threat ID": "ECS_002",
    "Threat Name": "ECS Cluster Logging and Client-Container Communication Not Using CMK",
    "Source": "Unencrypted Logs and Communication",
    "Target": "AWS ECS Cluster",
    "Description": "If ECS logs and client-to-container communication are not encrypted with KMS CMK, they may be vulnerable to unauthorized access.",
    "Mitigation": "Ensure ECS Cluster logging is enabled and client-to-container communication is encrypted using KMS CMK.",
    "Service": "AWS ECS"
  },
  {
    "Threat ID": "API_002",
    "Threat Name": "API Gateway Method Settings Not Caching Responses",
    "Source": "Performance Degradation and Excessive API Calls",
    "Target": "AWS API Gateway Method Settings",
    "Description": "If API Gateway does not enable response caching, it may lead to increased API request latency and higher costs.",
    "Mitigation": "Ensure API Gateway method settings enable caching to improve API performance and reduce redundant requests.",
    "Service": "AWS API Gateway"
  },
  {
    "Threat ID": "DB_001",
    "Threat Name": "DB Instance Not Receiving Minor Upgrades Automatically",
    "Source": "Outdated Software Components",
    "Target": "AWS DB Instance",
    "Description": "If minor upgrades are not enabled, the database instance may run outdated software, increasing security risks and missing important patches.",
    "Mitigation": "Ensure DB instances get all minor upgrades automatically to keep the software updated and secure.",
    "Service": "AWS RDS"
  },
  {
    "Threat ID": "DB_002",
    "Threat Name": "RDS Cluster Instance Not Receiving Minor Upgrades",
    "Source": "Outdated Database Engine",
    "Target": "AWS RDS Cluster Instance",
    "Description": "Without automatic minor upgrades, RDS cluster instances may run outdated database engines, increasing the risk of vulnerabilities.",
    "Mitigation": "Enable automatic minor version upgrades for RDS cluster instances to ensure they remain secure.",
    "Service": "AWS RDS"
  },
  {
    "Threat ID": "KMS_001",
    "Threat Name": "KMS Key Not Enabled",
    "Source": "Unprotected Encryption Keys",
    "Target": "AWS KMS Key",
    "Description": "If the KMS key is not enabled, encrypted data may become inaccessible, leading to security compliance issues.",
    "Mitigation": "Ensure that AWS KMS keys are enabled to facilitate secure encryption and decryption operations.",
    "Service": "AWS KMS"
  },
  {
    "Threat ID": "ES_001",
    "Threat Name": "Elasticsearch Domain Using Outdated TLS Policy",
    "Source": "Weak Transport Security",
    "Target": "AWS Elasticsearch Domain",
    "Description": "Using an outdated TLS policy on an Elasticsearch domain increases the risk of insecure data transmission and cryptographic vulnerabilities.",
    "Mitigation": "Verify that Elasticsearch domains use up-to-date TLS policies to ensure secure communication.",
    "Service": "AWS Elasticsearch"
  },
  {
    "Threat ID": "OS_001",
    "Threat Name": "OpenSearch Domain Using Outdated TLS Policy",
    "Source": "Weak Encryption Standards",
    "Target": "AWS OpenSearch Domain",
    "Description": "Running OpenSearch with an outdated TLS policy may expose sensitive data to interception and compromise.",
    "Mitigation": "Ensure OpenSearch domains are configured with the latest TLS policy to protect data in transit.",
    "Service": "AWS OpenSearch"
  },
  {
    "Threat ID": "NACL_001",
    "Threat Name": "NACL Allows Ingress from 0.0.0.0:0 to Port 21",
    "Source": "Unrestricted Network Access",
    "Target": "AWS Network ACL",
    "Description": "Allowing unrestricted inbound access to port 21 (FTP) from all IP addresses may lead to unauthorized access or FTP-based attacks.",
    "Mitigation": "Ensure Network ACLs do not allow ingress from 0.0.0.0/0 to port 21 to prevent security risks.",
    "Service": "AWS VPC"
  },
  {
    "Threat ID": "NACL_002",
    "Threat Name": "NACL Allows Ingress from 0.0.0.0:0 to Port 20",
    "Source": "Unrestricted Network Access",
    "Target": "AWS Network ACL",
    "Description": "Allowing unrestricted inbound access to port 20 (FTP Data) from all IP addresses may expose the system to unauthorized data transfers.",
    "Mitigation": "Ensure Network ACLs do not allow ingress from 0.0.0.0/0 to port 20 to protect against unauthorized FTP data access.",
    "Service": "AWS VPC"
  },
  {
    "Threat ID": "NACL_003",
    "Threat Name": "NACL Allows Ingress from 0.0.0.0:0 to Port 3389",
    "Source": "Unrestricted RDP Access",
    "Target": "AWS Network ACL",
    "Description": "Allowing unrestricted inbound access to port 3389 (RDP) exposes remote administration to potential unauthorized access and brute-force attacks.",
    "Mitigation": "Ensure Network ACLs do not allow ingress from 0.0.0.0/0 to port 3389 to prevent unauthorized remote access.",
    "Service": "AWS VPC"
  },
  {
    "Threat ID": "NACL_004",
    "Threat Name": "Unrestricted SSH Access via NACL",
    "Source": "Unrestricted Network Access",
    "Target": "AWS Network ACL",
    "Description": "Allowing unrestricted inbound access to port 22 (SSH) from all IP addresses exposes the system to unauthorized remote access and brute-force attacks.",
    "Mitigation": "Ensure Network ACLs do not allow ingress from 0.0.0.0/0 to port 22 to prevent unauthorized SSH access.",
    "Service": "AWS VPC"
  },
  {
    "Threat ID": "ACM_001",
    "Threat Name": "ACM Certificate Lifecycle Misconfiguration",
    "Source": "Improper Certificate Management",
    "Target": "AWS ACM Certificate",
    "Description": "Failing to implement a 'create before destroy' mechanism for ACM certificates may lead to service downtime during certificate renewals.",
    "Mitigation": "Ensure that ACM certificates are replaced using a 'create before destroy' mechanism to prevent service interruptions.",
    "Service": "AWS ACM"
  },
  {
    "Threat ID": "ACM_002",
    "Threat Name": "ACM Certificate Logging Not Configured",
    "Source": "Lack of Security Auditing",
    "Target": "AWS ACM Certificate",
    "Description": "If logging preferences are not configured for ACM certificates, security incidents related to certificate use may go undetected.",
    "Mitigation": "Verify logging preferences for ACM certificates and ensure logs are stored securely for auditing and compliance.",
    "Service": "AWS ACM"
  },
  {
    "Threat ID": "AMI_001",
    "Threat Name": "Unencrypted Copied AMIs",
    "Source": "Lack of Encryption",
    "Target": "AWS AMI Copy",
    "Description": "Failing to encrypt copied AMIs increases the risk of unauthorized access to machine images containing sensitive configurations.",
    "Mitigation": "Ensure that all copied AMIs are encrypted to protect sensitive data and comply with security best practices.",
    "Service": "AWS AMI"
  },
  {
    "Threat ID": "AMI_002",
    "Threat Name": "AMI Copy Operation Without CMK",
    "Source": "Weak Encryption Standards",
    "Target": "AWS AMI Copy",
    "Description": "Using default encryption mechanisms without a customer-managed key (CMK) may lead to security policy violations and unauthorized data access.",
    "Mitigation": "Ensure AMI copying operations use a CMK to enforce strong encryption and access control.",
    "Service": "AWS AMI"
  },
  {
    "Threat ID": "APIGW_001",
    "Threat Name": "API Gateway Lifecycle Misconfiguration",
    "Source": "Improper Deployment Management",
    "Target": "AWS API Gateway",
    "Description": "Not using a 'create before destroy' approach for API Gateway deployments can lead to service downtime during updates.",
    "Mitigation": "Ensure that API Gateway deployments follow a 'create before destroy' mechanism to prevent downtime.",
    "Service": "AWS API Gateway"
  },
  {
    "Threat ID": "GDT_001",
    "Threat Name": "GuardDuty Detector Not Enabled",
    "Source": "Lack of Threat Detection",
    "Target": "AWS GuardDuty Detector",
    "Description": "If GuardDuty is not enabled, AWS accounts may lack real-time threat detection and monitoring capabilities.",
    "Mitigation": "Ensure that GuardDuty detectors are enabled to provide continuous monitoring and anomaly detection.",
    "Service": "AWS GuardDuty"
  },
  {
    "Threat ID": "DAX_001",
    "Threat Name": "DAX Cluster Not Using TLS",
    "Source": "Unencrypted Data Transmission",
    "Target": "AWS DAX Cluster",
    "Description": "If the DAX cluster endpoint is not using TLS, data transmission may be vulnerable to interception and tampering.",
    "Mitigation": "Ensure that DAX cluster endpoints are configured to use TLS for secure data transmission.",
    "Service": "AWS DAX"
  },
  {
    "Threat ID": "KFH_001",
    "Threat Name": "Unencrypted Kinesis Firehose Delivery Stream",
    "Source": "Unencrypted Data in Transit",
    "Target": "AWS Kinesis Firehose Delivery Stream",
    "Description": "If Kinesis Firehose delivery streams are not encrypted, sensitive data may be exposed to unauthorized access during transit or storage.",
    "Mitigation": "Ensure that Kinesis Firehose Delivery Streams are encrypted with CMK to provide strong data protection.",
    "Service": "Amazon Kinesis Firehose"
  },
  {
    "Threat ID": "MWAA_001",
    "Threat Name": "MWAA Environment Lacking Scheduler Logs",
    "Source": "Lack of Security Auditing",
    "Target": "AWS Managed Workflows for Apache Airflow (MWAA)",
    "Description": "If scheduler logs are not enabled, potential security incidents and workflow failures may not be properly logged for auditing and troubleshooting.",
    "Mitigation": "Ensure MWAA environment has scheduler logs enabled to support monitoring and security auditing.",
    "Service": "AWS MWAA"
  },
  {
    "Threat ID": "MWAA_002",
    "Threat Name": "MWAA Environment Lacking Worker Logs",
    "Source": "Lack of Security Auditing",
    "Target": "AWS Managed Workflows for Apache Airflow (MWAA)",
    "Description": "If worker logs are not enabled, debugging and tracking security events for worker nodes becomes difficult, leading to unmonitored security incidents.",
    "Mitigation": "Ensure MWAA environment has worker logs enabled to facilitate debugging and security monitoring.",
    "Service": "AWS MWAA"
  },
  {
    "Threat ID": "MWAA_003",
    "Threat Name": "MWAA Environment Lacking Webserver Logs",
    "Source": "Lack of Security Auditing",
    "Target": "AWS Managed Workflows for Apache Airflow (MWAA)",
    "Description": "Without webserver logs, security-related events such as unauthorized access attempts may not be detected.",
    "Mitigation": "Ensure MWAA environment has webserver logs enabled to track security and operational activities.",
    "Service": "AWS MWAA"
  },
  {
    "Threat ID": "RDS_005",
    "Threat Name": "Unencrypted Replicated RDS Backups",
    "Source": "Lack of Data Encryption",
    "Target": "AWS RDS Backup Replication",
    "Description": "Failing to encrypt replicated RDS backups increases the risk of unauthorized data access during backup storage and transfers.",
    "Mitigation": "Ensure replicated backups are encrypted at rest using KMS CMKs to protect data integrity and confidentiality.",
    "Service": "Amazon RDS"
  },
  {
    "Threat ID": "RDS_006",
    "Threat Name": "Unencrypted RDS Cluster Activity Stream",
    "Source": "Lack of Security Logging Protection",
    "Target": "AWS RDS Cluster Activity Stream",
    "Description": "If RDS cluster activity streams are not encrypted, logs containing sensitive database operations could be accessed by unauthorized entities.",
    "Mitigation": "Ensure RDS Cluster activity streams are encrypted using KMS CMKs to maintain secure audit logs.",
    "Service": "Amazon RDS"
  },
  {
    "Threat ID": "ES_001",
    "Threat Name": "Unencrypted Elasticsearch Data",
    "Source": "Unprotected Stored Data",
    "Target": "Amazon Elasticsearch Service",
    "Description": "Failing to encrypt data stored in Elasticsearch exposes sensitive information to unauthorized access.",
    "Mitigation": "Ensure all data stored in Elasticsearch is encrypted with a CMK to protect against data breaches.",
    "Service": "Amazon Elasticsearch"
  },
  {
    "Threat ID": "OS_001",
    "Threat Name": "Unencrypted OpenSearch Data",
    "Source": "Unprotected Stored Data",
    "Target": "Amazon OpenSearch Service",
    "Description": "If OpenSearch data is not encrypted, unauthorized parties could access and manipulate stored information.",
    "Mitigation": "Ensure all data stored in OpenSearch is encrypted with a CMK to ensure data security.",
    "Service": "Amazon OpenSearch"
  },
  {
    "Threat ID": "ES_002",
    "Threat Name": "Elasticsearch Using Default Security Group",
    "Source": "Improper Network Security Configuration",
    "Target": "Amazon Elasticsearch Service",
    "Description": "Using the default security group for Elasticsearch may allow unintended access, increasing exposure to unauthorized data retrieval.",
    "Mitigation": "Ensure that Elasticsearch is not using the default Security Group and instead uses a properly restricted security group.",
    "Service": "Amazon Elasticsearch"
  },
  {
    "Threat ID": "OS_002",
    "Threat Name": "Elasticsearch Using Default Security Group",
    "Source": "Improper Network Security Configuration",
    "Target": "Amazon OpenSearch Domain",
    "Description": "Using the default security group for OpenSearch may allow unintended access, increasing exposure to unauthorized data retrieval.",
    "Mitigation": "Ensure that OpenSearch is not using the default Security Group and instead uses a properly restricted security group.",
    "Service": "Amazon OpenSearch"
  },
  {
    "Threat ID": "ECS_001",
    "Threat Name": "Execution Role ARN and Task Role ARN Overlap",
    "Source": "Privilege Escalation Risk",
    "Target": "Amazon ECS Task Definition",
    "Description": "If the Execution Role ARN and the Task Role ARN are the same in ECS Task definitions, it increases the risk of privilege escalation and unintended permissions.",
    "Mitigation": "Ensure that the Execution Role ARN and the Task Role ARN are different in ECS Task definitions to enforce the principle of least privilege.",
    "Service": "Amazon ECS"
  },
  {
    "Threat ID": "RDS_007",
    "Threat Name": "Vulnerable PostgreSQL Log_fdw Extension",
    "Source": "Known Security Vulnerability",
    "Target": "Amazon RDS PostgreSQL Instance",
    "Description": "If PostgreSQL instances use a vulnerable version with the log_fdw extension, they may be susceptible to security exploits.",
    "Mitigation": "Ensure that RDS PostgreSQL instances use a non-vulnerable version with the log_fdw extension as per AWS security bulletin AWS-2022-004.",
    "Service": "Amazon RDS"
  },
  {
    "Threat ID": "RDS_008",
    "Threat Name": "Vulnerable PostgreSQL Log_fdw Extension",
    "Source": "Known Security Vulnerability",
    "Target": "Amazon RDS Cluster",
    "Description": "If PostgreSQL instances in RDS clusters use a vulnerable version with the log_fdw extension, they may be susceptible to security exploits.",
    "Mitigation": "Ensure that RDS PostgreSQL instances in clusters use a non-vulnerable version with the log_fdw extension as per AWS security bulletin AWS-2022-004.",
    "Service": "Amazon RDS"
  },
  {
    "Threat ID": "CT_001",
    "Threat Name": "CloudTrail Logging Not Enabled",
    "Source": "Lack of Security Auditing",
    "Target": "AWS CloudTrail",
    "Description": "If CloudTrail logging is not enabled, user and API activities may not be recorded, leading to a lack of security auditing.",
    "Mitigation": "Ensure CloudTrail logging is enabled to monitor AWS account activities.",
    "Service": "AWS CloudTrail"
  },
  {
    "Threat ID": "CT_002",
    "Threat Name": "CloudTrail Lacking SNS Notification",
    "Source": "Delayed Incident Response",
    "Target": "AWS CloudTrail",
    "Description": "If CloudTrail does not define an SNS Topic, security teams may not receive alerts on critical AWS API activity changes.",
    "Mitigation": "Ensure CloudTrail defines an SNS Topic to send security event notifications to administrators.",
    "Service": "AWS CloudTrail"
  },
  {
    "Threat ID": "DLM_001",
    "Threat Name": "Unencrypted Cross-Region DLM Events",
    "Source": "Unprotected Data Transfer",
    "Target": "AWS DLM Lifecycle Policy",
    "Description": "If DLM cross-region events are not encrypted, sensitive lifecycle management data may be exposed during transit.",
    "Mitigation": "Ensure DLM cross-region events are encrypted using a Customer Managed Key (CMK).",
    "Service": "AWS DLM"
  },
  {
    "Threat ID": "DLM_002",
    "Threat Name": "Unencrypted Cross-Region DLM Schedules",
    "Source": "Unprotected Data Transfer",
    "Target": "AWS DLM Lifecycle Policy",
    "Description": "If DLM cross-region schedules are not encrypted, lifecycle policy details may be at risk of unauthorized access.",
    "Mitigation": "Ensure DLM cross-region schedules are encrypted using a Customer Managed Key (CMK).",
    "Service": "AWS DLM"
  },
  {
    "Threat ID": "CC_001",
    "Threat Name": "Insufficient CodeCommit Approval Rules",
    "Source": "Lack of Change Control",
    "Target": "AWS CodeCommit Repository",
    "Description": "If CodeCommit branch changes do not require at least 2 approvals, unauthorized changes may be introduced without proper review.",
    "Mitigation": "Ensure CodeCommit branch changes have at least 2 approvals before merging to maintain proper code review processes.",
    "Service": "AWS CodeCommit"
  },
  {
    "Threat ID": "LM_002",
    "Threat Name": "Unprotected Lambda Function URLs",
    "Source": "Publicly Accessible API",
    "Target": "AWS Lambda Function URL",
    "Description": "If Lambda function URLs have an AuthType set to None, unauthorized users can invoke the function, leading to potential security breaches.",
    "Mitigation": "Ensure that Lambda function URLs AuthType is set to AWS_IAM or another authentication method to prevent unauthorized access.",
    "Service": "AWS Lambda"
  },
  {
    "Threat ID": "CF_003",
    "Threat Name": "CloudFront Missing Strict Transport Security",
    "Source": "Weak Transport Layer Security",
    "Target": "Amazon CloudFront Distribution",
    "Description": "If CloudFront response header policies do not enforce Strict Transport Security (HSTS), users may be vulnerable to downgrade attacks and MITM risks.",
    "Mitigation": "Ensure CloudFront response header policy enforces Strict Transport Security (HSTS) to protect against protocol downgrades and eavesdropping.",
    "Service": "Amazon CloudFront"
  },
  {
    "Threat ID": "SG_004",
    "Threat Name": "Open Ingress to Port 80",
    "Source": "Unrestricted Access",
    "Target": "Amazon EC2 Security Group",
    "Description": "If security groups allow ingress from 0.0.0.0/0 to port 80, web services become publicly accessible, increasing the risk of unauthorized access.",
    "Mitigation": "Ensure no security groups allow ingress from 0.0.0.0/0 to port 80 unless explicitly required and properly secured.",
    "Service": "Amazon EC2"
  },
  {
    "Threat ID": "SG_005",
    "Threat Name": "Open Ingress to Port 80",
    "Source": "Unrestricted Access",
    "Target": "Amazon Security Group",
    "Description": "Allowing ingress from 0.0.0.0/0 to port 80 in a security group exposes web servers to the public internet, leading to potential attacks.",
    "Mitigation": "Restrict port 80 access to trusted IP ranges or use a Web Application Firewall (WAF) for additional security.",
    "Service": "AWS Security Groups"
  },
  {
    "Threat ID": "ALB_006",
    "Threat Name": "Missing Health Checks in Target Group",
    "Source": "Unreliable Service Availability",
    "Target": "AWS Application Load Balancer Target Group",
    "Description": "If HTTP/HTTPS Target Groups do not define health checks, traffic may be routed to unhealthy instances, leading to application downtime or degraded performance.",
    "Mitigation": "Ensure that HTTP/HTTPS Target Groups define health checks to monitor instance health and route traffic only to healthy instances.",
    "Service": "AWS Application Load Balancer"
  },
  {
    "Threat ID": "LB_001",
    "Threat Name": "Missing Health Checks in Load Balancer Target Group",
    "Source": "Unmonitored Service Availability",
    "Target": "AWS Load Balancer Target Group",
    "Description": "If HTTP/HTTPS target groups do not define health checks, traffic may be routed to unhealthy instances, causing application downtime or degraded performance.",
    "Mitigation": "Ensure HTTP/HTTPS target groups define health checks to monitor instance health and route traffic only to healthy instances.",
    "Service": "AWS Load Balancer"
  },
  {
    "Threat ID": "KI_002",
    "Threat Name": "Kendra Index Lacks CMK Encryption",
    "Source": "Unencrypted Data at Rest",
    "Target": "AWS Kendra Index",
    "Description": "If the Kendra index does not use CMK for server-side encryption, sensitive information may be exposed in case of a security breach.",
    "Mitigation": "Ensure Kendra index server-side encryption is enabled using a customer-managed KMS key (CMK).",
    "Service": "AWS Kendra"
  },
  {
    "Threat ID": "AF_003",
    "Threat Name": "Unencrypted AppFlow Data Transfer",
    "Source": "Unprotected Data in Transit",
    "Target": "AWS AppFlow",
    "Description": "If AppFlow flow does not use a CMK for encryption, sensitive data transfers may be exposed to unauthorized access.",
    "Mitigation": "Ensure AppFlow flow is encrypted using a customer-managed KMS key (CMK).",
    "Service": "AWS AppFlow"
  },
  {
    "Threat ID": "AF_004",
    "Threat Name": "Unsecured AppFlow Connector Profile",
    "Source": "Unprotected Integration",
    "Target": "AWS AppFlow Connector Profile",
    "Description": "If AppFlow connector profile does not use a CMK, data integrations may be vulnerable to unauthorized access.",
    "Mitigation": "Ensure AppFlow connector profile is encrypted using a customer-managed KMS key (CMK).",
    "Service": "AWS AppFlow"
  },
  {
    "Threat ID": "KS_005",
    "Threat Name": "Unencrypted Keyspaces Table",
    "Source": "Data Exposure Risk",
    "Target": "AWS Keyspaces Table",
    "Description": "If Keyspaces table does not use a CMK for encryption, stored data may be accessible by unauthorized entities.",
    "Mitigation": "Ensure Keyspaces table is encrypted using a customer-managed KMS key (CMK).",
    "Service": "AWS Keyspaces"
  },
  {
    "Threat ID": "DB_006",
    "Threat Name": "Unencrypted Database Snapshot Copy",
    "Source": "Unprotected Data Backup",
    "Target": "AWS RDS Snapshot Copy",
    "Description": "If database snapshot copies are not encrypted using a CMK, sensitive backup data may be vulnerable to unauthorized access.",
    "Mitigation": "Ensure database snapshot copies are encrypted using a customer-managed KMS key (CMK).",
    "Service": "AWS RDS"
  },
  {
    "Threat ID": "CP_007",
    "Threat Name": "Comprehend Entity Recognizer Model Lacks Encryption",
    "Source": "Unprotected Machine Learning Models",
    "Target": "AWS Comprehend Entity Recognizer",
    "Description": "If the Comprehend Entity Recognizer model is not encrypted using KMS CMK, model data may be at risk of exposure.",
    "Mitigation": "Ensure Comprehend Entity Recognizer model is encrypted using a customer-managed KMS key (CMK).",
    "Service": "AWS Comprehend"
  },
  {
    "Threat ID": "CP_008",
    "Threat Name": "Comprehend Entity Recognizer Volume Lacks Encryption",
    "Source": "Unprotected Storage",
    "Target": "AWS Comprehend Entity Recognizer",
    "Description": "If Comprehend Entity Recognizer volume storage is not encrypted using KMS CMK, sensitive information may be exposed.",
    "Mitigation": "Ensure Comprehend Entity Recognizer volume is encrypted using a customer-managed KMS key (CMK).",
    "Service": "AWS Comprehend"
  },
  {
    "Threat ID": "CC_009",
    "Threat Name": "Connect Instance Kinesis Video Stream Storage Lacks Encryption",
    "Source": "Unencrypted Streaming Data",
    "Target": "AWS Connect Instance Storage Config",
    "Description": "If Connect Instance Kinesis Video Stream storage is not encrypted with CMK, sensitive video data may be exposed to unauthorized access.",
    "Mitigation": "Ensure Connect Instance Kinesis Video Stream Storage Config is encrypted using a customer-managed KMS key (CMK).",
    "Service": "AWS Connect"
  },
  {
    "Threat ID": "CC_010",
    "Threat Name": "Connect Instance S3 Storage Lacks Encryption",
    "Source": "Unprotected Storage",
    "Target": "AWS Connect Instance Storage Config",
    "Description": "If Connect Instance S3 Storage Config does not use CMK encryption, sensitive data stored in S3 may be accessible by unauthorized entities.",
    "Mitigation": "Ensure Connect Instance S3 Storage Config is encrypted using a customer-managed KMS key (CMK).",
    "Service": "AWS Connect"
  },
  {
    "Threat ID": "DDB_001",
    "Threat Name": "Unencrypted DynamoDB Table Replica",
    "Source": "Unprotected Data Replication",
    "Target": "AWS DynamoDB Table Replica",
    "Description": "If a DynamoDB table replica is not encrypted using a customer-managed CMK, replicated data may be vulnerable to unauthorized access.",
    "Mitigation": "Ensure DynamoDB table replicas are encrypted using a customer-managed KMS key (CMK).",
    "Service": "AWS DynamoDB"
  },
  {
    "Threat ID": "LMB_002",
    "Threat Name": "Unvalidated AWS Lambda Code Signing",
    "Source": "Code Integrity Risks",
    "Target": "AWS Lambda Function",
    "Description": "If AWS Lambda function does not validate code-signing, unauthorized or tampered code may be executed, leading to potential security breaches.",
    "Mitigation": "Ensure AWS Lambda functions are configured to validate code-signing using AWS Signer.",
    "Service": "AWS Lambda"
  },
  {
    "Threat ID": "IAM_003",
    "Threat Name": "IAM User Access Instead of SSO",
    "Source": "Weak Access Management",
    "Target": "AWS IAM Users",
    "Description": "Using AWS IAM users instead of SSO for access control increases the risk of unmanaged user credentials and privilege escalation.",
    "Mitigation": "Ensure access is controlled through SSO and not AWS IAM-defined users to enforce centralized access management.",
    "Service": "AWS IAM"
  },
  {
    "Threat ID": "IAM_004",
    "Threat Name": "Overuse of AWS AdministratorAccess Policy",
    "Source": "Excessive Privileges",
    "Target": "AWS IAM Roles, Users, and Groups",
    "Description": "If AWS roles, users, and groups use the AdministratorAccess policy, they may have unrestricted permissions, increasing the attack surface for privilege escalation.",
    "Mitigation": "Disallow IAM roles, users, and groups from using the AWS AdministratorAccess policy by implementing least privilege principles.",
    "Service": "AWS IAM"
  },
  {
    "Threat ID": "IAM_005",
    "Threat Name": "IAM Policy Grants Unrestricted AdministratorAccess",
    "Source": "Excessive Permissions",
    "Target": "AWS IAM Policy",
    "Description": "If an IAM policy grants the AWS AdministratorAccess permission, it could lead to unintended privilege escalation and potential security breaches.",
    "Mitigation": "Ensure IAM policies do not use the AWS AdministratorAccess policy and instead follow the principle of least privilege.",
    "Service": "AWS IAM"
  },
  {
    "Threat ID": "IAM_006",
    "Threat Name": "IAM Role Policy Attachment Grants AdministratorAccess",
    "Source": "Privilege Escalation Risk",
    "Target": "AWS IAM Role Policy Attachment",
    "Description": "If IAM role policy attachments allow AdministratorAccess, users assuming these roles may obtain excessive privileges.",
    "Mitigation": "Disallow IAM role policy attachments that include the AWS AdministratorAccess policy.",
    "Service": "AWS IAM"
  },
  {
    "Threat ID": "IAM_007",
    "Threat Name": "IAM User Policy Attachment Grants AdministratorAccess",
    "Source": "Privilege Escalation",
    "Target": "AWS IAM User Policy Attachment",
    "Description": "If IAM users are directly attached to the AdministratorAccess policy, it may lead to unintentional privilege escalation and security risks.",
    "Mitigation": "Ensure IAM users do not have the AWS AdministratorAccess policy attached and follow least privilege principles.",
    "Service": "AWS IAM"
  },
  {
    "Threat ID": "IAM_008",
    "Threat Name": "IAM Group Policy Attachment Grants AdministratorAccess",
    "Source": "Excessive Privileges",
    "Target": "AWS IAM Group Policy Attachment",
    "Description": "If an IAM group is attached to the AWS AdministratorAccess policy, all users in the group may gain unrestricted access to AWS services.",
    "Mitigation": "Disallow IAM group policy attachments using the AWS AdministratorAccess policy and enforce role-based access control.",
    "Service": "AWS IAM"
  },
  {
    "Threat ID": "IAM_009",
    "Threat Name": "AWS SSO Managed Policy Grants AdministratorAccess",
    "Source": "Privilege Misuse",
    "Target": "AWS SSO Managed Policy Attachment",
    "Description": "If AWS SSO managed policies allow AdministratorAccess, it may grant excessive permissions to users beyond their required access levels.",
    "Mitigation": "Ensure AWS SSO managed policies do not use AdministratorAccess and enforce role-based least privilege access.",
    "Service": "AWS IAM"
  },
  {
    "Threat ID": "APIGW_001",
    "Threat Name": "API Gateway Data Trace Enabled",
    "Source": "Excessive Logging",
    "Target": "AWS API Gateway",
    "Description": "Enabling Data Trace in API Gateway Method Settings may log sensitive request and response data, increasing exposure risks.",
    "Mitigation": "Ensure Data Trace is disabled in API Gateway Method Settings unless necessary for debugging in non-production environments.",
    "Service": "AWS API Gateway"
  },
  {
    "Threat ID": "SG_002",
    "Threat Name": "Overly Permissive Security Group Rules",
    "Source": "Unrestricted Network Access",
    "Target": "AWS Security Groups",
    "Description": "Allowing ingress from 0.0.0.0/0 to port -1 effectively allows unrestricted access to all ports, increasing the attack surface.",
    "Mitigation": "Ensure security groups do not allow ingress from 0.0.0.0/0 to port -1. Restrict access to necessary IP ranges only.",
    "Service": "AWS Security Group"
  },
  {
    "Threat ID": "SG_003",
    "Threat Name": "VPC Security Group Ingress Rule Allows All Traffic",
    "Source": "Unrestricted Network Access",
    "Target": "AWS VPC Security Group",
    "Description": "Security group ingress rules allowing 0.0.0.0/0 to port -1 can expose resources to public access, increasing security risks.",
    "Mitigation": "Restrict ingress rules to necessary IP ranges and ports to minimize exposure.",
    "Service": "AWS VPC Security Group"
  },
  {
    "Threat ID": "MDB_004",
    "Threat Name": "Unencrypted MemoryDB Snapshot",
    "Source": "Data Exposure",
    "Target": "AWS MemoryDB Snapshot",
    "Description": "If a MemoryDB snapshot is not encrypted with a customer-managed KMS key (CMK), stored data could be accessed by unauthorized entities.",
    "Mitigation": "Ensure MemoryDB snapshots are encrypted using a customer-managed KMS key.",
    "Service": "AWS MemoryDB"
  },
  {
    "Threat ID": "NEPT_005",
    "Threat Name": "Unencrypted Neptune Cluster Snapshot",
    "Source": "Data Exposure",
    "Target": "AWS Neptune Snapshot",
    "Description": "If Neptune snapshots are not encrypted, sensitive graph database information may be exposed.",
    "Mitigation": "Ensure Neptune snapshots are encrypted using a customer-managed KMS key.",
    "Service": "AWS Neptune"
  },
  {
    "Threat ID": "RS_006",
    "Threat Name": "Unencrypted RedShift Snapshot Copy",
    "Source": "Data Leakage",
    "Target": "AWS RedShift Snapshot Copy",
    "Description": "If RedShift snapshot copies are not encrypted, sensitive data may be accessible in transit or at rest.",
    "Mitigation": "Ensure RedShift snapshot copies are encrypted using a customer-managed KMS key.",
    "Service": "AWS RedShift"
  },
  {
    "Threat ID": "RS_007",
    "Threat Name": "Unencrypted RedShift Serverless Namespace",
    "Source": "Data Breach",
    "Target": "AWS RedShift Serverless Namespace",
    "Description": "If a RedShift Serverless namespace is not encrypted using KMS, stored data may be accessed by unauthorized users.",
    "Mitigation": "Ensure RedShift Serverless namespace is encrypted using a customer-managed KMS key (CMK).",
    "Service": "AWS RedShift"
  },
  {
    "Threat ID": "IAM_008",
    "Threat Name": "IAM Policy Allows ALL or Any AWS Principal Access",
    "Source": "Excessive Permissions",
    "Target": "AWS IAM Policy",
    "Description": "IAM policies that allow 'ALL' or 'any' AWS principal to access a resource can lead to privilege escalation or unintended access.",
    "Mitigation": "Ensure IAM policies restrict access only to specific AWS principals that require access to the resource.",
    "Service": "AWS IAM"
  },
  {
    "Threat ID": "SFN_001",
    "Threat Name": "State Machine Without X-Ray Tracing",
    "Source": "Lack of Observability",
    "Target": "AWS Step Functions",
    "Description": "Without X-Ray tracing enabled, monitoring and debugging the execution flow of AWS Step Functions state machines becomes difficult, increasing the risk of undetected failures.",
    "Mitigation": "Enable X-Ray tracing for AWS Step Functions state machines to improve observability and debugging capabilities.",
    "Service": "AWS Step Functions"
  },
  {
    "Threat ID": "SFN_002",
    "Threat Name": "State Machine Execution History Logging Disabled",
    "Source": "Lack of Auditing",
    "Target": "AWS Step Functions",
    "Description": "Disabling execution history logging may prevent administrators from identifying and analyzing failures or unauthorized executions.",
    "Mitigation": "Ensure that execution history logging is enabled for AWS Step Functions to maintain an audit trail of executions.",
    "Service": "AWS Step Functions"
  },
  {
    "Threat ID": "IAM_003",
    "Threat Name": "IAM Policies Allow Privilege Escalation",
    "Source": "Excessive Permissions",
    "Target": "AWS IAM",
    "Description": "IAM policies that allow privilege escalation can enable unauthorized users to gain higher access privileges, leading to security risks.",
    "Mitigation": "Ensure IAM policies do not grant excessive permissions that could allow privilege escalation. Use least privilege principles.",
    "Service": "AWS IAM"
  },
  {
    "Threat ID": "IAM_004",
    "Threat Name": "IAM Policies Allow Credentials Exposure",
    "Source": "Improper Access Control",
    "Target": "AWS IAM",
    "Description": "IAM policies that allow credentials exposure can lead to unauthorized access to AWS resources.",
    "Mitigation": "Ensure IAM policies restrict access to sensitive credentials and follow best practices for secure credential management.",
    "Service": "AWS IAM"
  },
  {
    "Threat ID": "IAM_001",
    "Threat Name": "IAM Policy Allows Credentials Exposure",
    "Source": "Misconfigured IAM Policies",
    "Target": "AWS IAM User Policy",
    "Description": "IAM policies that expose credentials may allow unauthorized access to AWS resources, leading to security breaches.",
    "Mitigation": "Ensure IAM policies restrict access to credentials and enforce secure authentication mechanisms.",
    "Service": "AWS IAM"
  },
  {
    "Threat ID": "IAM_002",
    "Threat Name": "IAM Policy Allows Credentials Exposure",
    "Source": "Misconfigured IAM Policies",
    "Target": "AWS IAM SSO Permission Set",
    "Description": "SSO inline permission sets exposing credentials can result in unauthorized access and privilege escalation risks.",
    "Mitigation": "Ensure IAM SSO permission set policies enforce proper access controls and do not expose sensitive credentials.",
    "Service": "AWS IAM"
  },
  {
    "Threat ID": "IAM_003",
    "Threat Name": "IAM Policy Allows Data Exfiltration",
    "Source": "Excessive IAM Permissions",
    "Target": "AWS IAM Group Policy",
    "Description": "IAM group policies that allow excessive permissions can enable unauthorized data exfiltration, leading to compliance violations and data breaches.",
    "Mitigation": "Review and restrict IAM group policies to limit access to sensitive data and enforce least privilege principles.",
    "Service": "AWS IAM"
  },
  {
    "Threat ID": "IAM_004",
    "Threat Name": "IAM Policy Allows Data Exfiltration",
    "Source": "Excessive IAM Permissions",
    "Target": "AWS IAM Role Policy",
    "Description": "IAM role policies granting excessive permissions may allow unauthorized data exfiltration.",
    "Mitigation": "Ensure IAM roles follow least privilege principles and restrict data access appropriately.",
    "Service": "AWS IAM"
  },
  {
    "Threat ID": "IAM_005",
    "Threat Name": "IAM Policy Allows Data Exfiltration",
    "Source": "Excessive IAM Permissions",
    "Target": "AWS IAM User Policy",
    "Description": "IAM user policies permitting broad data access can facilitate unauthorized data exfiltration.",
    "Mitigation": "Enforce strong access controls and regularly audit IAM user policies to minimize data exfiltration risks.",
    "Service": "AWS IAM"
  },
  {
    "Threat ID": "IAM_006",
    "Threat Name": "IAM Policy Allows Data Exfiltration",
    "Source": "Excessive IAM Permissions",
    "Target": "AWS IAM SSO Permission Set",
    "Description": "IAM SSO permission sets granting excessive permissions could enable data exfiltration or unauthorized data access.",
    "Mitigation": "Review IAM SSO permission sets to enforce least privilege and prevent unauthorized data access.",
    "Service": "AWS IAM"
  },
  {
    "Threat ID": "IAM_007",
    "Threat Name": "IAM Policy Allows Unrestricted Permissions Management",
    "Source": "Lack of Constraints in IAM Policies",
    "Target": "AWS IAM Group Policy",
    "Description": "IAM group policies allowing unrestricted permissions management can lead to privilege escalation and security misconfigurations.",
    "Mitigation": "Restrict IAM group policies to limit permissions management actions and apply least privilege principles.",
    "Service": "AWS IAM"
  },
  {
    "Threat ID": "IAM_008",
    "Threat Name": "IAM Policy Allows Unrestricted Permissions Management",
    "Source": "Lack of Constraints in IAM Policies",
    "Target": "AWS IAM Role Policy",
    "Description": "IAM role policies permitting unrestricted permissions management can allow users to escalate privileges or modify security settings.",
    "Mitigation": "Ensure IAM role policies apply permission boundaries and restrict permissions management actions.",
    "Service": "AWS IAM"
  },
  {
    "Threat ID": "IAM_009",
    "Threat Name": "IAM Policy Allows Unrestricted Permissions Management",
    "Source": "Misconfigured IAM Policies",
    "Target": "AWS IAM User Policy",
    "Description": "IAM policies that allow unrestricted permissions management can lead to privilege escalation and security misconfigurations.",
    "Mitigation": "Restrict IAM policies to enforce granular permissions and apply least privilege principles.",
    "Service": "AWS IAM"
  },
  {
    "Threat ID": "IAM_010",
    "Threat Name": "IAM Policy Allows Unrestricted Permissions Management",
    "Source": "Misconfigured IAM Policies",
    "Target": "AWS IAM SSO Permission Set",
    "Description": "SSO permission sets with unrestricted permissions management can allow unauthorized changes to security policies.",
    "Mitigation": "Ensure IAM SSO permission set policies enforce proper access controls and permission boundaries.",
    "Service": "AWS IAM"
  },
  {
    "Threat ID": "IAM_011",
    "Threat Name": "IAM Policy Allows Unrestricted Write Access",
    "Source": "Excessive IAM Permissions",
    "Target": "AWS IAM Group Policy",
    "Description": "IAM group policies that permit unrestricted write access can lead to unauthorized modifications and security risks.",
    "Mitigation": "Limit IAM group policy permissions and enforce least privilege principles.",
    "Service": "AWS IAM"
  },
  {
    "Threat ID": "IAM_012",
    "Threat Name": "IAM Policy Allows Unrestricted Write Access",
    "Source": "Excessive IAM Permissions",
    "Target": "AWS IAM Role Policy",
    "Description": "IAM role policies with broad write access can allow unauthorized users to modify critical configurations.",
    "Mitigation": "Enforce strict access controls and define fine-grained IAM permissions.",
    "Service": "AWS IAM"
  },
  {
    "Threat ID": "IAM_013",
    "Threat Name": "IAM Policy Allows Unrestricted Write Access",
    "Source": "Excessive IAM Permissions",
    "Target": "AWS IAM User Policy",
    "Description": "IAM user policies that allow unrestricted write access may lead to unauthorized changes to AWS resources.",
    "Mitigation": "Apply fine-grained IAM permissions and enforce policy constraints.",
    "Service": "AWS IAM"
  },
  {
    "Threat ID": "IAM_014",
    "Threat Name": "IAM Policy Allows Unrestricted Write Access",
    "Source": "Excessive IAM Permissions",
    "Target": "AWS IAM SSO Permission Set",
    "Description": "IAM SSO permission sets allowing unrestricted write access could lead to unauthorized system modifications.",
    "Mitigation": "Review and restrict IAM SSO permission sets to enforce least privilege.",
    "Service": "AWS IAM"
  },
  {
    "Threat ID": "MSK_001",
    "Threat Name": "MSK Cluster Exposed to Public Access",
    "Source": "Improper Network Configuration",
    "Target": "Amazon MSK Cluster",
    "Description": "MSK cluster nodes that are not private may be accessible from the internet, increasing the risk of unauthorized access and data breaches.",
    "Mitigation": "Ensure MSK nodes are deployed in private subnets and restrict access through security groups.",
    "Service": "Amazon MSK"
  },
  {
    "Threat ID": "DocDB_001",
    "Threat Name": "Unencrypted DocumentDB Global Cluster",
    "Source": "Lack of Encryption",
    "Target": "Amazon DocumentDB Global Cluster",
    "Description": "DocumentDB global clusters that are not encrypted at rest may lead to data exposure and compliance violations.",
    "Mitigation": "Ensure encryption at rest is enabled for DocumentDB global clusters using AWS KMS.",
    "Service": "Amazon DocumentDB"
  },
  {
    "Threat ID": "DB_001",
    "Threat Name": "Lack of Deletion Protection for Database Instances",
    "Source": "Misconfigured Database Settings",
    "Target": "AWS Database Instance",
    "Description": "AWS database instances without deletion protection enabled can be accidentally or maliciously deleted, resulting in data loss.",
    "Mitigation": "Enable deletion protection on AWS database instances to prevent accidental or unauthorized deletions.",
    "Service": "Amazon RDS"
  },
  {
    "Threat ID": "CloudTrail_002",
    "Threat Name": "Unencrypted CloudTrail Event Data Store",
    "Source": "Lack of Encryption",
    "Target": "AWS CloudTrail Event Data Store",
    "Description": "CloudTrail Event Data Stores that do not use Customer Managed Keys (CMKs) may lead to unauthorized access and data exposure.",
    "Mitigation": "Ensure CloudTrail Event Data Store uses CMK encryption to protect log data.",
    "Service": "AWS CloudTrail"
  },
  {
    "Threat ID": "DataSync_003",
    "Threat Name": "Exposed Secrets in DataSync Location Object Storage",
    "Source": "Improper Storage Configuration",
    "Target": "AWS DataSync Location Object Storage",
    "Description": "Improperly configured DataSync Location Object Storage may expose sensitive credentials, leading to data leaks.",
    "Mitigation": "Ensure that DataSync Location Object Storage does not store or expose sensitive credentials in configurations.",
    "Service": "AWS DataSync"
  },
  {
    "Threat ID": "DMS_004",
    "Threat Name": "DMS Endpoint Without CMK Encryption",
    "Source": "Lack of Encryption",
    "Target": "AWS DMS Endpoint",
    "Description": "AWS DMS endpoints that do not use Customer Managed Keys (CMK) for encryption may expose sensitive migration data.",
    "Mitigation": "Ensure AWS DMS endpoints use CMKs to encrypt data in transit and at rest.",
    "Service": "AWS Database Migration Service"
  },
  {
    "Threat ID": "EventBridge_005",
    "Threat Name": "Unencrypted EventBridge Scheduler Schedule",
    "Source": "Lack of Encryption",
    "Target": "AWS EventBridge Scheduler Schedule",
    "Description": "AWS EventBridge Scheduler Schedules without CMK encryption may be vulnerable to unauthorized access and data exposure.",
    "Mitigation": "Ensure AWS EventBridge Scheduler Schedules use CMK encryption to protect scheduled event data.",
    "Service": "AWS EventBridge"
  },
  {
    "Threat ID": "DMS_006",
    "Threat Name": "Unencrypted DMS S3 Endpoint",
    "Source": "Lack of Encryption",
    "Target": "AWS DMS S3 Endpoint",
    "Description": "AWS DMS S3 endpoints that do not use CMK encryption may expose migration data to unauthorized access.",
    "Mitigation": "Ensure AWS DMS S3 endpoints are encrypted using Customer Managed Keys (CMKs).",
    "Service": "AWS Database Migration Service"
  },
  {
    "Threat ID": "S3_007",
    "Threat Name": "Unconfigured Lifecycle Policy for Failed Uploads",
    "Source": "Accumulation of Unused Data",
    "Target": "Amazon S3 Bucket",
    "Description": "S3 buckets without lifecycle configurations to abort failed uploads may accumulate unnecessary storage costs and expose stale data.",
    "Mitigation": "Ensure S3 lifecycle policies set a defined period for aborting failed uploads.",
    "Service": "Amazon S3"
  },
  {
    "Threat ID": "Lambda_008",
    "Threat Name": "Publicly Accessible AWS Lambda Function",
    "Source": "Improper Access Configuration",
    "Target": "AWS Lambda Function",
    "Description": "AWS Lambda functions that are publicly accessible may be invoked by unauthorized users, leading to potential abuse.",
    "Mitigation": "Restrict AWS Lambda permissions and use IAM policies to control function access.",
    "Service": "AWS Lambda"
  },
  {
    "Threat ID": "DB_009",
    "Threat Name": "Publicly Accessible DB Snapshots",
    "Source": "Improper Access Configuration",
    "Target": "AWS Database Snapshot",
    "Description": "Publicly accessible DB snapshots may expose sensitive data, leading to data breaches.",
    "Mitigation": "Ensure DB snapshots are private and restrict access to authorized AWS accounts only.",
    "Service": "Amazon RDS"
  },
  {
    "Threat ID": "SSM_010",
    "Threat Name": "Publicly Accessible SSM Documents",
    "Source": "Improper Access Configuration",
    "Target": "AWS SSM Document",
    "Description": "AWS SSM documents that are publicly accessible may expose sensitive system management configurations.",
    "Mitigation": "Restrict AWS SSM document permissions and ensure they are not publicly accessible.",
    "Service": "AWS Systems Manager"
  },
  {
    "Threat ID": "SECRETS_001",
    "Threat Name": "Stale Secrets in AWS Secrets Manager",
    "Source": "Lack of Secret Rotation",
    "Target": "AWS Secrets Manager Secret",
    "Description": "AWS Secrets Manager secrets that are not rotated within 90 days may become vulnerable to compromise due to prolonged exposure.",
    "Mitigation": "Ensure Secrets Manager secrets are configured for automatic rotation within 90 days.",
    "Service": "AWS Secrets Manager"
  },
  {
    "Threat ID": "CLOUDFRONT_002",
    "Threat Name": "Missing Default Root Object in CloudFront",
    "Source": "Misconfigured CDN Settings",
    "Target": "AWS CloudFront Distribution",
    "Description": "A CloudFront distribution without a default root object may result in a poor user experience or expose unintended content.",
    "Mitigation": "Ensure CloudFront distributions have a default root object configured.",
    "Service": "AWS CloudFront"
  },
  {
    "Threat ID": "SAGEMAKER_003",
    "Threat Name": "SageMaker Notebook Instance Launched in Default VPC",
    "Source": "Misconfigured Network Settings",
    "Target": "AWS SageMaker Notebook Instance",
    "Description": "SageMaker notebook instances launched in the default VPC may be accessible from outside the intended network boundary.",
    "Mitigation": "Ensure SageMaker notebook instances are launched in a custom VPC with proper security controls.",
    "Service": "AWS SageMaker"
  },
  {
    "Threat ID": "SAGEMAKER_004",
    "Threat Name": "Root Access to SageMaker Notebook Instances",
    "Source": "Excessive Privileges",
    "Target": "AWS SageMaker Notebook Instance",
    "Description": "Allowing users root access to SageMaker notebook instances may lead to unauthorized modifications and security risks.",
    "Mitigation": "Ensure SageMaker users do not have root access to notebook instances.",
    "Service": "AWS SageMaker"
  },
  {
    "Threat ID": "APIGW_005",
    "Threat Name": "Unencrypted API Gateway Caching",
    "Source": "Lack of Encryption",
    "Target": "AWS API Gateway",
    "Description": "API Gateway method settings with unencrypted caching may expose sensitive request and response data.",
    "Mitigation": "Ensure API Gateway method setting caching is configured to use encryption.",
    "Service": "AWS API Gateway"
  },
  {
    "Threat ID": "APIGW_006",
    "Threat Name": "API GatewayV2 Route Without Authorization",
    "Source": "Lack of Authentication",
    "Target": "AWS API GatewayV2",
    "Description": "API GatewayV2 routes that do not specify an authorization type may be accessed by unauthorized users.",
    "Mitigation": "Ensure API GatewayV2 routes specify an authorization type to restrict access.",
    "Service": "AWS API GatewayV2"
  },
  {
    "Threat ID": "CLOUDFRONT_007",
    "Threat Name": "CloudFront Distribution Without Origin Failover",
    "Source": "Single Point of Failure",
    "Target": "AWS CloudFront Distribution",
    "Description": "CloudFront distributions without origin failover configured may experience service disruptions if the primary origin fails.",
    "Mitigation": "Ensure CloudFront distributions have origin failover configured for high availability.",
    "Service": "AWS CloudFront"
  },
  {
    "Threat ID": "CODEBUILD_008",
    "Threat Name": "Unencrypted CodeBuild S3 Logs",
    "Source": "Lack of Encryption",
    "Target": "AWS CodeBuild Project",
    "Description": "CodeBuild S3 logs without encryption may expose sensitive build information to unauthorized access.",
    "Mitigation": "Ensure CodeBuild S3 logs are encrypted using Customer Managed Keys (CMKs).",
    "Service": "AWS CodeBuild"
  },
  {
    "Threat ID": "ELASTIC_BEANSTALK_009",
    "Threat Name": "Elastic Beanstalk Environment Without Enhanced Health Reporting",
    "Source": "Lack of Monitoring",
    "Target": "AWS Elastic Beanstalk Environment",
    "Description": "Elastic Beanstalk environments without enhanced health reporting may not provide sufficient insights into application health.",
    "Mitigation": "Ensure Elastic Beanstalk environments have enhanced health reporting enabled.",
    "Service": "AWS Elastic Beanstalk"
  },
  {
    "Threat ID": "RDS_010",
    "Threat Name": "RDS Cluster Without Copy Tags to Snapshots",
    "Source": "Incomplete Backup Metadata",
    "Target": "AWS RDS Cluster",
    "Description": "RDS clusters without the 'copy tags to snapshots' feature enabled may lead to inconsistent metadata tracking across backups.",
    "Mitigation": "Ensure RDS clusters are configured to copy tags to snapshots for better traceability.",
    "Service": "Amazon RDS"
  },
  {
    "Threat ID": "CODEBUILD_011",
    "Threat Name": "Missing Logging Configuration in CodeBuild",
    "Source": "Lack of Monitoring",
    "Target": "AWS CodeBuild Project",
    "Description": "CodeBuild projects without a logging configuration may hinder forensic investigations and compliance monitoring.",
    "Mitigation": "Ensure all AWS CodeBuild project environments have a logging configuration enabled.",
    "Service": "AWS CodeBuild"
  },
  {
    "Threat ID": "AUTOSCALING_012",
    "Threat Name": "EC2 Auto Scaling Groups Without Launch Templates",
    "Source": "Misconfigured Auto Scaling",
    "Target": "AWS EC2 Auto Scaling Group",
    "Description": "Auto Scaling groups using launch configurations instead of launch templates may lack access to newer EC2 features and security improvements.",
    "Mitigation": "Ensure EC2 Auto Scaling groups use EC2 launch templates instead of deprecated launch configurations.",
    "Service": "AWS Auto Scaling"
  },
  {
    "Threat ID": "CODEBUILD_013",
    "Threat Name": "Privileged Mode Enabled in CodeBuild Projects",
    "Source": "Excessive Privileges",
    "Target": "AWS CodeBuild Project",
    "Description": "CodeBuild projects with privileged mode enabled may lead to container breakout and privilege escalation risks.",
    "Mitigation": "Ensure CodeBuild project environments do not have privileged mode enabled unless explicitly required.",
    "Service": "AWS CodeBuild"
  },
  {
    "Threat ID": "ELASTICSEARCH_014",
    "Threat Name": "Missing Audit Logging in Elasticsearch Domain",
    "Source": "Lack of Monitoring",
    "Target": "AWS Elasticsearch Domain",
    "Description": "Elasticsearch domains without audit logging enabled may lack visibility into access patterns and security events.",
    "Mitigation": "Ensure Elasticsearch Domain Audit Logging is enabled to track changes and detect unauthorized access.",
    "Service": "AWS Elasticsearch"
  },
  {
    "Threat ID": "OPENSEARCH_015",
    "Threat Name": "Missing Audit Logging in OpenSearch Domain",
    "Source": "Lack of Monitoring",
    "Target": "AWS OpenSearchService Domain",
    "Description": "OpenSearch domains without audit logging enabled may lack visibility into access patterns and security events.",
    "Mitigation": "Ensure OpenSearch Domain Audit Logging is enabled to track changes and detect unauthorized access.",
    "Service": "AWS OpenSearch"
  },
  {
    "Threat ID": "ELASTICSEARCH_016",
    "Threat Name": "Insufficient Master Nodes in Elasticsearch",
    "Source": "Misconfigured High Availability",
    "Target": "AWS Elasticsearch Domain",
    "Description": "Elasticsearch domains with fewer than three dedicated master nodes may experience instability and loss of cluster quorum.",
    "Mitigation": "Ensure Elasticsearch domains are configured with at least three dedicated master nodes for high availability.",
    "Service": "AWS Elasticsearch"
  },
  {
    "Threat ID": "OPENSEARCH_017",
    "Threat Name": "Insufficient Master Nodes in OpenSearch",
    "Source": "Misconfigured High Availability",
    "Target": "AWS OpenSearchService Domain",
    "Description": "OpenSearch domains with fewer than three dedicated master nodes may experience instability and loss of cluster quorum.",
    "Mitigation": "Ensure OpenSearch domains are configured with at least three dedicated master nodes for high availability.",
    "Service": "AWS OpenSearch"
  },
  {
    "Threat ID": "CLOUDWATCH_018",
    "Threat Name": "Disabled CloudWatch Alarm Actions",
    "Source": "Lack of Alerting",
    "Target": "AWS CloudWatch Metric Alarm",
    "Description": "CloudWatch alarms without actions enabled may fail to notify administrators about critical events.",
    "Mitigation": "Ensure that CloudWatch alarm actions are enabled to trigger notifications and automated responses.",
    "Service": "AWS CloudWatch"
  },
  {
    "Threat ID": "REDSHIFT_019",
    "Threat Name": "Use of Default Database Name in Redshift",
    "Source": "Weak Default Configuration",
    "Target": "AWS Redshift Cluster",
    "Description": "Redshift clusters using the default database name may increase the risk of targeted attacks and misconfigurations.",
    "Mitigation": "Ensure Redshift clusters do not use the default database name by specifying a custom name during creation.",
    "Service": "Amazon Redshift"
  },
  {
    "Threat ID": "REDSHIFT_020",
    "Threat Name": "Lack of Enhanced VPC Routing in Redshift",
    "Source": "Unrestricted Network Access",
    "Target": "AWS Redshift Cluster",
    "Description": "Redshift clusters without enhanced VPC routing may transmit traffic over public networks, increasing exposure to attacks.",
    "Mitigation": "Ensure Redshift clusters use enhanced VPC routing to keep data within a private network.",
    "Service": "Amazon Redshift"
  },
  {
    "Threat ID": "ELASTICACHE_021",
    "Threat Name": "Auto Minor Version Upgrades Disabled in ElastiCache",
    "Source": "Outdated Software Version",
    "Target": "AWS ElastiCache Cluster",
    "Description": "ElastiCache clusters without automatic minor version upgrades may be vulnerable to known security issues.",
    "Mitigation": "Ensure ElastiCache for Redis cache clusters have auto minor version upgrades enabled.",
    "Service": "Amazon ElastiCache"
  },
  {
    "Threat ID": "ELASTICACHE_022",
    "Threat Name": "Use of Default Subnet Group in ElastiCache",
    "Source": "Weak Default Configuration",
    "Target": "AWS ElastiCache Cluster",
    "Description": "ElastiCache clusters using the default subnet group may lack network segmentation, increasing exposure to threats.",
    "Mitigation": "Ensure ElastiCache clusters do not use the default subnet group and instead use a custom subnet group.",
    "Service": "Amazon ElastiCache"
  },
  {
    "Threat ID": "RDS_023",
    "Threat Name": "RDS Cluster Log Capture Disabled",
    "Source": "Lack of Monitoring",
    "Target": "AWS RDS Cluster",
    "Description": "RDS clusters without log capture may lack visibility into database operations and potential security incidents.",
    "Mitigation": "Ensure that RDS Cluster log capture is enabled to track database activities.",
    "Service": "Amazon RDS"
  },
  {
    "Threat ID": "RDS_024",
    "Threat Name": "Audit Logging Disabled for RDS MySQL",
    "Source": "Lack of Compliance Controls",
    "Target": "AWS RDS Cluster",
    "Description": "RDS clusters running MySQL without audit logging may fail to meet compliance and security monitoring requirements.",
    "Mitigation": "Ensure that RDS Cluster audit logging is enabled for MySQL engine to track database access and modifications.",
    "Service": "Amazon RDS"
  },
  {
    "Threat ID": "RDS_025",
    "Threat Name": "Aurora Clusters Without Backtracking",
    "Source": "Data Recovery Risk",
    "Target": "AWS Aurora Cluster",
    "Description": "Aurora clusters without backtracking enabled may have limited recovery options, increasing downtime risks.",
    "Mitigation": "Ensure that RDS Aurora Clusters have backtracking enabled for efficient point-in-time recovery.",
    "Service": "Amazon RDS"
  },
  {
    "Threat ID": "RDS_026",
    "Threat Name": "Unencrypted RDS Clusters",
    "Source": "Unprotected Data Storage",
    "Target": "AWS RDS Cluster",
    "Description": "RDS clusters without encryption may store sensitive data in plaintext, increasing the risk of data breaches.",
    "Mitigation": "Ensure RDS Clusters are encrypted using KMS CMKs to protect sensitive information.",
    "Service": "Amazon RDS"
  },
  {
    "Threat ID": "ALB_027",
    "Threat Name": "Weak Desync Mitigation Mode in ALB",
    "Source": "Misconfigured Load Balancer",
    "Target": "AWS Application Load Balancer (ALB)",
    "Description": "ALBs not configured with defensive or strictest desync mitigation mode may be vulnerable to HTTP desync attacks.",
    "Mitigation": "Ensure that ALB is configured with defensive or strictest desync mitigation mode to prevent HTTP request smuggling attacks.",
    "Service": "Amazon ALB"
  },
  {
    "Threat ID": "ELB_028",
    "Threat Name": "Weak Desync Mitigation Mode in ELB",
    "Source": "Misconfigured Load Balancer",
    "Target": "AWS Elastic Load Balancer (ELB)",
    "Description": "ELBs not configured with defensive or strictest desync mitigation mode may be vulnerable to HTTP desync attacks.",
    "Mitigation": "Ensure that ELB is configured with defensive or strictest desync mitigation mode to prevent HTTP request smuggling attacks.",
    "Service": "Amazon ELB"
  },
  {
    "Threat ID": "ALB_029",
    "Threat Name": "Weak Desync Mitigation Mode in ALB",
    "Source": "Misconfigured Load Balancer",
    "Target": "AWS Application Load Balancer (ALB)",
    "Description": "ALBs not configured with defensive or strictest desync mitigation mode may be vulnerable to HTTP desync attacks.",
    "Mitigation": "Ensure that ALB is configured with defensive or strictest desync mitigation mode to prevent HTTP request smuggling attacks.",
    "Service": "Amazon ALB"
  },
  {
    "Threat ID": "EFS_030",
    "Threat Name": "Lack of Root Directory Enforcement in EFS Access Points",
    "Source": "Improper File Access Control",
    "Target": "AWS EFS Access Point",
    "Description": "EFS access points without enforced root directories may allow unintended access to sensitive directories.",
    "Mitigation": "Ensure EFS access points enforce a root directory to prevent unauthorized directory traversal.",
    "Service": "Amazon EFS"
  },
  {
    "Threat ID": "EFS_031",
    "Threat Name": "Lack of User Identity Enforcement in EFS Access Points",
    "Source": "Improper User Privileges",
    "Target": "AWS EFS Access Point",
    "Description": "EFS access points without enforced user identity may allow unauthorized users to access sensitive file systems.",
    "Mitigation": "Ensure EFS access points enforce a user identity to restrict access.",
    "Service": "Amazon EFS"
  },
  {
    "Threat ID": "TGW_032",
    "Threat Name": "Transit Gateway Automatically Accepting VPC Attachments",
    "Source": "Uncontrolled Network Expansion",
    "Target": "AWS EC2 Transit Gateway",
    "Description": "Transit gateways that automatically accept VPC attachment requests may introduce unauthorized connections.",
    "Mitigation": "Ensure Transit Gateways do not automatically accept VPC attachment requests to prevent unauthorized network access.",
    "Service": "Amazon EC2"
  },
  {
    "Threat ID": "ECS_033",
    "Threat Name": "Use of Outdated Fargate Platform Version",
    "Source": "Unpatched Vulnerabilities",
    "Target": "AWS ECS Fargate Service",
    "Description": "ECS Fargate services running on outdated platform versions may have security vulnerabilities.",
    "Mitigation": "Ensure ECS Fargate services run on the latest Fargate platform version to mitigate known vulnerabilities.",
    "Service": "Amazon ECS"
  },
  {
    "Threat ID": "ECS_034",
    "Threat Name": "ECS Services With Public IP Addresses",
    "Source": "Unrestricted Network Access",
    "Target": "AWS ECS Service",
    "Description": "ECS services with public IP addresses may expose workloads to the internet, increasing attack risk.",
    "Mitigation": "Ensure ECS services do not have public IP addresses assigned to them automatically to restrict exposure.",
    "Service": "Amazon ECS"
  },
  {
    "Threat ID": "ECS_035",
    "Threat Name": "ECS Containers Running as Privileged",
    "Source": "Escalation of Privileges",
    "Target": "AWS ECS Task Definition",
    "Description": "Privileged containers in ECS may grant attackers full control over the host system.",
    "Mitigation": "Ensure ECS containers run as non-privileged users to minimize attack impact.",
    "Service": "Amazon ECS"
  },
  {
    "Threat ID": "ECS_036",
    "Threat Name": "Host Process Namespace Sharing in ECS Tasks",
    "Source": "Unauthorized Process Access",
    "Target": "AWS ECS Task Definition",
    "Description": "ECS task definitions that share the host's process namespace may expose sensitive processes to other containers.",
    "Mitigation": "Ensure ECS task definitions do not share the host's process namespace to maintain isolation.",
    "Service": "Amazon ECS"
  },
  {
    "Threat ID": "ECS_037",
    "Threat Name": "Unrestricted Write Access to Root Filesystem in ECS Containers",
    "Source": "Uncontrolled File Modifications",
    "Target": "AWS ECS Task Definition",
    "Description": "Containers with unrestricted write access to the root filesystem may allow attackers to modify system files.",
    "Mitigation": "Ensure ECS containers are limited to read-only access to root filesystems to prevent unauthorized modifications.",
    "Service": "Amazon ECS"
  },
  {
    "Threat ID": "SSM_038",
    "Threat Name": "Unencrypted SSM Parameters",
    "Source": "Unprotected Configuration Secrets",
    "Target": "AWS SSM Parameter",
    "Description": "SSM parameters that are not encrypted may expose sensitive configuration data in plaintext.",
    "Mitigation": "Ensure SSM parameters are encrypted using KMS CMK to protect sensitive information.",
    "Service": "Amazon SSM"
  },
  {
    "Threat ID": "ALB_029",
    "Threat Name": "Weak Desync Mitigation Mode in ALB",
    "Source": "Misconfigured Load Balancer",
    "Target": "AWS Application Load Balancer (ALB)",
    "Description": "ALBs not configured with defensive or strictest desync mitigation mode may be vulnerable to HTTP desync attacks.",
    "Mitigation": "Ensure that ALB is configured with defensive or strictest desync mitigation mode to prevent HTTP request smuggling attacks.",
    "Service": "Amazon ALB"
  },
  {
    "Threat ID": "EFS_030",
    "Threat Name": "Lack of Root Directory Enforcement in EFS Access Points",
    "Source": "Improper File Access Control",
    "Target": "AWS EFS Access Point",
    "Description": "EFS access points without enforced root directories may allow unintended access to sensitive directories.",
    "Mitigation": "Ensure EFS access points enforce a root directory to prevent unauthorized directory traversal.",
    "Service": "Amazon EFS"
  },
  {
    "Threat ID": "EFS_031",
    "Threat Name": "Lack of User Identity Enforcement in EFS Access Points",
    "Source": "Improper User Privileges",
    "Target": "AWS EFS Access Point",
    "Description": "EFS access points without enforced user identity may allow unauthorized users to access sensitive file systems.",
    "Mitigation": "Ensure EFS access points enforce a user identity to restrict access.",
    "Service": "Amazon EFS"
  },
  {
    "Threat ID": "TGW_032",
    "Threat Name": "Transit Gateway Automatically Accepting VPC Attachments",
    "Source": "Uncontrolled Network Expansion",
    "Target": "AWS EC2 Transit Gateway",
    "Description": "Transit gateways that automatically accept VPC attachment requests may introduce unauthorized connections.",
    "Mitigation": "Ensure Transit Gateways do not automatically accept VPC attachment requests to prevent unauthorized network access.",
    "Service": "Amazon EC2"
  },
  {
    "Threat ID": "ECS_033",
    "Threat Name": "Use of Outdated Fargate Platform Version",
    "Source": "Unpatched Vulnerabilities",
    "Target": "AWS ECS Fargate Service",
    "Description": "ECS Fargate services running on outdated platform versions may have security vulnerabilities.",
    "Mitigation": "Ensure ECS Fargate services run on the latest Fargate platform version to mitigate known vulnerabilities.",
    "Service": "Amazon ECS"
  },
  {
    "Threat ID": "ECS_034",
    "Threat Name": "ECS Services With Public IP Addresses",
    "Source": "Unrestricted Network Access",
    "Target": "AWS ECS Service",
    "Description": "ECS services with public IP addresses may expose workloads to the internet, increasing attack risk.",
    "Mitigation": "Ensure ECS services do not have public IP addresses assigned to them automatically to restrict exposure.",
    "Service": "Amazon ECS"
  },
  {
    "Threat ID": "ECS_035",
    "Threat Name": "ECS Containers Running as Privileged",
    "Source": "Escalation of Privileges",
    "Target": "AWS ECS Task Definition",
    "Description": "Privileged containers in ECS may grant attackers full control over the host system.",
    "Mitigation": "Ensure ECS containers run as non-privileged users to minimize attack impact.",
    "Service": "Amazon ECS"
  },
  {
    "Threat ID": "ECS_036",
    "Threat Name": "Host Process Namespace Sharing in ECS Tasks",
    "Source": "Unauthorized Process Access",
    "Target": "AWS ECS Task Definition",
    "Description": "ECS task definitions that share the host's process namespace may expose sensitive processes to other containers.",
    "Mitigation": "Ensure ECS task definitions do not share the host's process namespace to maintain isolation.",
    "Service": "Amazon ECS"
  },
  {
    "Threat ID": "ECS_037",
    "Threat Name": "Unrestricted Write Access to Root Filesystem in ECS Containers",
    "Source": "Uncontrolled File Modifications",
    "Target": "AWS ECS Task Definition",
    "Description": "Containers with unrestricted write access to the root filesystem may allow attackers to modify system files.",
    "Mitigation": "Ensure ECS containers are limited to read-only access to root filesystems to prevent unauthorized modifications.",
    "Service": "Amazon ECS"
  },
  {
    "Threat ID": "SSM_038",
    "Threat Name": "Unencrypted SSM Parameters",
    "Source": "Unprotected Configuration Secrets",
    "Target": "AWS SSM Parameter",
    "Description": "SSM parameters that are not encrypted may expose sensitive configuration data in plaintext.",
    "Mitigation": "Ensure SSM parameters are encrypted using KMS CMK to protect sensitive information.",
    "Service": "Amazon SSM"
  },
  {
    "Threat ID": "CW_001",
    "Threat Name": "Insufficient Log Retention in CloudWatch",
    "Source": "Lack of Log Retention Policy",
    "Target": "AWS CloudWatch Log Group",
    "Description": "CloudWatch logs with insufficient retention periods may result in the loss of critical security and operational data.",
    "Mitigation": "Ensure CloudWatch log groups retain logs for at least 1 year to support compliance and security investigations.",
    "Service": "Amazon CloudWatch"
  },
  {
    "Threat ID": "EKS_002",
    "Threat Name": "Unsupported Kubernetes Version in EKS Cluster",
    "Source": "Outdated Kubernetes Version",
    "Target": "AWS EKS Cluster",
    "Description": "EKS clusters running unsupported Kubernetes versions may contain vulnerabilities and lack security updates.",
    "Mitigation": "Ensure EKS clusters run on a supported Kubernetes version to receive security patches and feature updates.",
    "Service": "Amazon EKS"
  },
  {
    "Threat ID": "EB_003",
    "Threat Name": "Elastic Beanstalk Without Managed Platform Updates",
    "Source": "Outdated Environment Configurations",
    "Target": "AWS Elastic Beanstalk Environment",
    "Description": "Elastic Beanstalk environments without managed platform updates may contain security vulnerabilities.",
    "Mitigation": "Enable managed platform updates in Elastic Beanstalk environments to ensure automatic security patching.",
    "Service": "AWS Elastic Beanstalk"
  },
  {
    "Threat ID": "LT_004",
    "Threat Name": "Excessive Metadata Response Hop Limit in Launch Template",
    "Source": "Metadata Service Misconfiguration",
    "Target": "AWS Launch Configuration / Launch Template",
    "Description": "A metadata response hop limit greater than 1 increases the risk of metadata exposure and potential compromise.",
    "Mitigation": "Ensure the launch template has a metadata response hop limit of 1 to prevent unauthorized access to instance metadata.",
    "Service": "Amazon EC2"
  },
  {
    "Threat ID": "WAF_005",
    "Threat Name": "WAF Rule Without Defined Actions",
    "Source": "Misconfigured Web Application Firewall",
    "Target": "AWS WAF Rule Group",
    "Description": "A WAF rule without defined actions may fail to block or monitor malicious traffic effectively.",
    "Mitigation": "Ensure WAF rules have specific actions assigned to enforce security policies effectively.",
    "Service": "AWS WAF"
  },
  {
    "Threat ID": "WAF_006",
    "Threat Name": "WAF Web ACL Without Defined Actions",
    "Source": "Unconfigured Web ACL Rules",
    "Target": "AWS WAF Web ACL",
    "Description": "WAF Web ACLs without defined rule actions may not effectively mitigate web-based threats.",
    "Mitigation": "Ensure WAF Web ACLs have properly defined rule actions to protect applications from attacks.",
    "Service": "AWS WAF"
  },
  {
    "Threat ID": "WAFR_007",
    "Threat Name": "WAFRegional Rule Group Without Defined Actions",
    "Source": "Incomplete Security Configuration",
    "Target": "AWS WAFRegional Rule Group",
    "Description": "A WAFRegional rule group without assigned actions may fail to filter malicious traffic.",
    "Mitigation": "Ensure WAFRegional rule groups include properly configured actions to enforce security policies.",
    "Service": "AWS WAF Regional"
  },
  {
    "Threat ID": "WAFR_008",
    "Threat Name": "WAFRegional Web ACL Without Defined Actions",
    "Source": "Weak Web Application Protection",
    "Target": "AWS WAFRegional Web ACL",
    "Description": "A WAFRegional Web ACL without rule actions may leave applications vulnerable to security threats.",
    "Mitigation": "Ensure WAFRegional Web ACLs have rule actions assigned to enforce web security.",
    "Service": "AWS WAF Regional"
  },
  {
    "Threat ID": "WAFV2_009",
    "Threat Name": "WAFv2 Rule Group Without Defined Actions",
    "Source": "Incomplete Web Security Configuration",
    "Target": "AWS WAFv2 Rule Group",
    "Description": "A WAFv2 rule group without properly assigned actions may not provide adequate web application security.",
    "Mitigation": "Ensure WAFv2 rule groups contain actions to enforce security policies effectively.",
    "Service": "AWS WAFv2"
  },
  {
    "Threat ID": "WAFV2_001",
    "Threat Name": "WAFv2 Web ACL Without Defined Actions",
    "Source": "Incomplete Web Security Configuration",
    "Target": "AWS WAFv2 Web ACL",
    "Description": "A WAFv2 Web ACL without defined rule actions may not provide effective web application security.",
    "Mitigation": "Ensure WAFv2 Web ACLs contain rule actions to enforce security policies effectively.",
    "Service": "AWS WAFv2"
  },
  {
    "Threat ID": "RS_002",
    "Threat Name": "Redshift Clusters Without Automatic Snapshots",
    "Source": "Data Loss Risk",
    "Target": "AWS Redshift Cluster",
    "Description": "Redshift clusters without automatic snapshots may result in data loss in case of failure or accidental deletion.",
    "Mitigation": "Ensure Amazon Redshift clusters have automatic snapshots enabled to provide data recovery options.",
    "Service": "Amazon Redshift"
  },
  {
    "Threat ID": "NFW_003",
    "Threat Name": "Network Firewall Without Deletion Protection",
    "Source": "Accidental Deletion Risk",
    "Target": "AWS Network Firewall",
    "Description": "Network Firewalls without deletion protection enabled can be accidentally removed, leading to security gaps.",
    "Mitigation": "Ensure that Network Firewalls have deletion protection enabled to prevent accidental removal.",
    "Service": "AWS Network Firewall"
  },
  {
    "Threat ID": "NFW_004",
    "Threat Name": "Network Firewall Encryption Without CMK",
    "Source": "Weak Encryption Configuration",
    "Target": "AWS Network Firewall",
    "Description": "Network firewalls that are not encrypted using a customer-managed key (CMK) may be vulnerable to unauthorized access.",
    "Mitigation": "Ensure that Network Firewall encryption is configured using a CMK to enhance security.",
    "Service": "AWS Network Firewall"
  },
  {
    "Threat ID": "NFW_005",
    "Threat Name": "Network Firewall Rule Group Encryption Without CMK",
    "Source": "Weak Encryption Configuration",
    "Target": "AWS Network Firewall Rule Group",
    "Description": "Network firewall rule groups that do not use CMK encryption may not provide adequate security for traffic inspection.",
    "Mitigation": "Ensure that Network Firewall Rule Group encryption is configured using a CMK.",
    "Service": "AWS Network Firewall"
  },
  {
    "Threat ID": "NFW_006",
    "Threat Name": "Network Firewall Policy Without CMK Encryption",
    "Source": "Weak Encryption Configuration",
    "Target": "AWS Network Firewall Policy",
    "Description": "Network firewall policies that do not use CMK encryption may be vulnerable to unauthorized modifications.",
    "Mitigation": "Ensure Network Firewall Policy defines an encryption configuration that uses a customer-managed key (CMK).",
    "Service": "AWS Network Firewall"
  },
  {
    "Threat ID": "NEPT_007",
    "Threat Name": "Unencrypted Neptune Cluster",
    "Source": "Data Exposure Risk",
    "Target": "AWS Neptune Cluster",
    "Description": "Neptune clusters that are not encrypted using a CMK may expose sensitive data to unauthorized access.",
    "Mitigation": "Ensure Neptune clusters are encrypted by KMS using a customer-managed key (CMK).",
    "Service": "Amazon Neptune"
  },
  {
    "Threat ID": "IAM_008",
    "Threat Name": "Root User with Access Keys",
    "Source": "IAM Misconfiguration",
    "Target": "AWS IAM Root User",
    "Description": "IAM root users with active access keys pose a significant security risk and may lead to unauthorized access.",
    "Mitigation": "Ensure IAM root user does not have access keys and enforce best practices for root user management.",
    "Service": "AWS IAM"
  },
  {
    "Threat ID": "EMR_009",
    "Threat Name": "Unencrypted EMR Local Disks",
    "Source": "Data Exposure Risk",
    "Target": "AWS EMR Cluster",
    "Description": "EMR clusters without local disk encryption may expose sensitive data to unauthorized access.",
    "Mitigation": "Ensure EMR Cluster security configuration encrypts local disks using a secure encryption method.",
    "Service": "Amazon EMR"
  },
  {
    "Threat ID": "EMR_010",
    "Threat Name": "Unencrypted EMR EBS Disks",
    "Source": "Data Exposure Risk",
    "Target": "AWS EMR Cluster",
    "Description": "EMR clusters without EBS disk encryption may expose sensitive data stored on attached volumes.",
    "Mitigation": "Ensure EMR Cluster security configuration encrypts EBS disks using a customer-managed key (CMK).",
    "Service": "Amazon EMR"
  },
  {
    "Threat ID": "EMR_011",
    "Threat Name": "Unencrypted In-Transit EMR Communication",
    "Source": "Unprotected Data Transmission",
    "Target": "AWS EMR Cluster",
    "Description": "EMR clusters that do not have in-transit encryption enabled may expose sensitive data during communication between nodes.",
    "Mitigation": "Ensure EMR Cluster security configuration encrypts in-transit data using TLS and KMS CMKs.",
    "Service": "Amazon EMR"
  },
  {
    "Threat ID": "NACL_012",
    "Threat Name": "NACL Allowing All Ingress Ports",
    "Source": "Overly Permissive Network ACLs",
    "Target": "AWS Network ACL",
    "Description": "Network ACL rules that allow ingress traffic on all ports pose a security risk by enabling unrestricted access.",
    "Mitigation": "Ensure NACL ingress rules do not allow all ports and follow the principle of least privilege.",
    "Service": "AWS VPC"
  },
  {
    "Threat ID": "RDS_013",
    "Threat Name": "RDS Instances Without Performance Insights",
    "Source": "Lack of Monitoring and Performance Metrics",
    "Target": "AWS RDS Instance",
    "Description": "RDS instances without performance insights enabled may lack visibility into query performance and resource utilization.",
    "Mitigation": "Enable RDS Performance Insights to gain detailed metrics and improve database performance monitoring.",
    "Service": "Amazon RDS"
  },
  {
    "Threat ID": "RDS_014",
    "Threat Name": "Unencrypted RDS Performance Insights",
    "Source": "Lack of Encryption for Monitoring Data",
    "Target": "AWS RDS Instance",
    "Description": "RDS Performance Insights data that is not encrypted using KMS CMKs may be vulnerable to unauthorized access.",
    "Mitigation": "Ensure RDS Performance Insights are encrypted using AWS KMS CMKs to enhance data security.",
    "Service": "Amazon RDS"
  },
  {
    "Threat ID": "IAM_015",
    "Threat Name": "IAM Policies Allowing Wildcard Resource Access",
    "Source": "Overly Permissive IAM Policies",
    "Target": "AWS IAM Policies",
    "Description": "IAM policies that allow '*' as a statement's resource for restrictable actions can lead to privilege escalation and unauthorized access.",
    "Mitigation": "Ensure no IAM policies allow '*' as a statement's resource for restrictable actions. Define specific resource ARNs where necessary.",
    "Service": "AWS IAM"
  },
  {
    "Threat ID": "IAM_016",
    "Threat Name": "IAM Policies Allowing Wildcard Resource Access",
    "Source": "Overly Permissive IAM Policies",
    "Target": "AWS IAM Policies",
    "Description": "IAM policies that allow '*' as a statement's resource for restrictable actions can lead to privilege escalation and unauthorized access.",
    "Mitigation": "Ensure no IAM policies allow '*' as a statement's resource for restrictable actions. Define specific resource ARNs where necessary.",
    "Service": "AWS IAM"
  },
  {
    "Threat ID": "TS_017",
    "Threat Name": "Unsecured Transfer Server Protocols",
    "Source": "Insecure Protocols Allowed",
    "Target": "AWS Transfer Server",
    "Description": "Allowing insecure protocols on AWS Transfer Server increases the risk of data interception and unauthorized access.",
    "Mitigation": "Ensure Transfer Server allows only secure protocols like SFTP, FTPS, and disable plaintext FTP.",
    "Service": "AWS Transfer Family"
  },
  {
    "Threat ID": "OIDC_018",
    "Threat Name": "Unsafe Claims in GitHub Actions OIDC Authorization Policies",
    "Source": "Unvalidated OIDC Claims",
    "Target": "AWS IAM Policy Document",
    "Description": "GitHub Actions OIDC policies that do not restrict claims and claim order properly may allow unauthorized access.",
    "Mitigation": "Ensure AWS GitHub Actions OIDC authorization policies only allow safe claims and enforce claim order validation.",
    "Service": "AWS IAM"
  },
  {
    "Threat ID": "Neptune_019",
    "Threat Name": "Neptune DB Cluster Without IAM Authentication",
    "Source": "Weak Authentication Mechanism",
    "Target": "AWS Neptune DB Cluster",
    "Description": "Neptune DB clusters without IAM authentication may rely on static credentials, increasing the risk of credential compromise.",
    "Mitigation": "Ensure Neptune DB clusters have IAM database authentication enabled for secure access control.",
    "Service": "Amazon Neptune"
  },
  {
    "Threat ID": "DocDB_020",
    "Threat Name": "Inadequate DocumentDB Backup Retention",
    "Source": "Insufficient Backup Policy",
    "Target": "AWS DocumentDB Cluster",
    "Description": "A short backup retention period may result in loss of critical data in case of failures or incidents.",
    "Mitigation": "Ensure DocumentDB has an adequate backup retention period to meet business continuity and compliance requirements.",
    "Service": "Amazon DocumentDB"
  },
  {
    "Threat ID": "Neptune_021",
    "Threat Name": "Neptune DB Cluster Without Automated Backups",
    "Source": "Insufficient Backup Protection",
    "Target": "AWS Neptune DB Cluster",
    "Description": "Neptune clusters without automated backups are at risk of data loss due to accidental deletions or failures.",
    "Mitigation": "Ensure Neptune DB clusters have automated backups enabled with an adequate retention period.",
    "Service": "Amazon Neptune"
  },
  {
    "Threat ID": "Neptune_022",
    "Threat Name": "Neptune DB Cluster Not Copying Tags to Snapshots",
    "Source": "Lack of Tag Propagation",
    "Target": "AWS Neptune DB Cluster",
    "Description": "Not copying tags to snapshots may cause compliance tracking issues and impact resource organization.",
    "Mitigation": "Ensure Neptune DB clusters are configured to copy tags to snapshots for proper governance and tracking.",
    "Service": "Amazon Neptune"
  },
  {
    "Threat ID": "Lambda_023",
    "Threat Name": "Use of Deprecated Lambda Runtime",
    "Source": "Outdated Execution Environment",
    "Target": "AWS Lambda Function",
    "Description": "Using deprecated Lambda runtimes may expose functions to unpatched security vulnerabilities and compatibility issues.",
    "Mitigation": "Ensure Lambda functions are using supported and up-to-date runtimes.",
    "Service": "AWS Lambda"
  },
  {
    "Threat ID": "Lambda_024",
    "Threat Name": "Overly Permissive Lambda Permissions",
    "Source": "Broad IAM Role Permissions",
    "Target": "AWS Lambda Permission",
    "Description": "Allowing AWS Lambda permissions without restricting access using SourceArn or SourceAccount may lead to unintended privilege escalation.",
    "Mitigation": "Ensure that AWS Lambda function permissions delegated to AWS services are limited by SourceArn or SourceAccount.",
    "Service": "AWS Lambda"
  },
  {
    "Threat ID": "SES_025",
    "Threat Name": "Unsecured SES Configuration Set",
    "Source": "Lack of Encryption in Transit",
    "Target": "AWS Simple Email Service (SES)",
    "Description": "Without enforcing TLS, emails sent via SES may be susceptible to interception during transmission.",
    "Mitigation": "Ensure SES Configuration Set enforces TLS usage to protect email communications.",
    "Service": "AWS SES"
  },
  {
    "Threat ID": "Cognito_026",
    "Threat Name": "Unauthenticated Guest Access in Cognito",
    "Source": "Unrestricted Identity Pool Access",
    "Target": "AWS Cognito Identity Pool",
    "Description": "Allowing unauthenticated guest access to Cognito identity pools can lead to unauthorized access to AWS resources.",
    "Mitigation": "Ensure AWS Cognito identity pool does not allow unauthenticated guest access and requires authentication for resource access.",
    "Service": "AWS Cognito"
  },
  {
    "Threat ID": "SageMaker_027",
    "Threat Name": "Unencrypted SageMaker Data Quality Job Artifacts",
    "Source": "Lack of Encryption at Rest",
    "Target": "Amazon SageMaker Data Quality Job",
    "Description": "SageMaker Data Quality Job artifacts that are not encrypted with KMS may be vulnerable to unauthorized access.",
    "Mitigation": "Ensure Amazon SageMaker Data Quality Job uses KMS to encrypt model artifacts to protect sensitive data.",
    "Service": "Amazon SageMaker"
  },
  {
    "Threat ID": "SageMaker_028",
    "Threat Name": "Unencrypted SageMaker Data Quality Job Storage",
    "Source": "Unprotected Data on Attached Storage",
    "Target": "Amazon SageMaker Data Quality Job",
    "Description": "Amazon SageMaker Data Quality Jobs that do not use KMS encryption for attached storage volumes may expose sensitive data to unauthorized access.",
    "Mitigation": "Ensure Amazon SageMaker Data Quality Job uses KMS to encrypt data on attached storage volume.",
    "Service": "Amazon SageMaker"
  },
  {
    "Threat ID": "SageMaker_029",
    "Threat Name": "Unencrypted Communication in SageMaker Monitoring Jobs",
    "Source": "Unprotected Data in Transit",
    "Target": "Amazon SageMaker Data Quality Job",
    "Description": "Without encryption, communications between instances used for monitoring jobs in Amazon SageMaker may be vulnerable to interception.",
    "Mitigation": "Ensure Amazon SageMaker Data Quality Job encrypts all communications between instances used for monitoring jobs.",
    "Service": "Amazon SageMaker"
  },
  {
    "Threat ID": "SageMaker_030",
    "Threat Name": "SageMaker Model Without Network Isolation",
    "Source": "Unrestricted Network Access",
    "Target": "Amazon SageMaker Model",
    "Description": "If network isolation is not enforced, a SageMaker model may have unintended access to external resources, increasing security risks.",
    "Mitigation": "Ensure Amazon SageMaker model uses network isolation to prevent unauthorized access.",
    "Service": "Amazon SageMaker"
  },
  {
    "Threat ID": "SageMaker_031",
    "Threat Name": "IMDSv1 Usage in SageMaker Notebook Instance",
    "Source": "Use of Less Secure Metadata Service",
    "Target": "Amazon SageMaker Notebook Instance",
    "Description": "Using Instance Metadata Service v1 (IMDSv1) in SageMaker Notebook Instances increases the risk of metadata exposure via SSRF attacks.",
    "Mitigation": "Ensure Amazon SageMaker Notebook Instance only allows for IMDSv2.",
    "Service": "Amazon SageMaker"
  },
  {
    "Threat ID": "SageMaker_032",
    "Threat Name": "Unencrypted SageMaker Flow Definition Outputs",
    "Source": "Lack of Encryption for Output Data",
    "Target": "Amazon SageMaker Flow Definition",
    "Description": "If KMS is not used for output configurations, SageMaker Flow Definition outputs may be vulnerable to unauthorized access.",
    "Mitigation": "Ensure Amazon SageMaker Flow Definition uses KMS for output configurations.",
    "Service": "Amazon SageMaker"
  },
  {
    "Threat ID": "Bedrock_033",
    "Threat Name": "Unencrypted Bedrock Agent",
    "Source": "Lack of Encryption at Rest",
    "Target": "AWS Bedrock Agent",
    "Description": "If Bedrock Agent is not encrypted using a customer-managed key (CMK), sensitive data stored by the agent may be at risk of exposure.",
    "Mitigation": "Ensure Bedrock Agent is encrypted with a CMK to protect stored data.",
    "Service": "AWS Bedrock"
  },
  {
    "Threat ID": "Bedrock_034",
    "Threat Name": "Unencrypted Bedrock Agent",
    "Source": "Lack of Encryption at Rest",
    "Target": "AWS Bedrock Agent",
    "Description": "If Bedrock Agent is not encrypted using a customer-managed key (CMK), sensitive data stored by the agent may be at risk of exposure.",
    "Mitigation": "Ensure Bedrock Agent is encrypted with a CMK to protect stored data.",
    "Service": "AWS Bedrock"
  },
  {
    "Threat ID": "CloudFront_035",
    "Threat Name": "Missing Geo Restriction in CloudFront",
    "Source": "Unrestricted Access to CloudFront Distribution",
    "Target": "AWS CloudFront Distribution",
    "Description": "CloudFront distributions without geo restrictions may expose content to unintended regions, increasing compliance and security risks.",
    "Mitigation": "Ensure AWS CloudFront web distribution has geo restriction enabled.",
    "Service": "AWS CloudFront"
  },
  {
    "Threat ID": "S3_036",
    "Threat Name": "S3 Bucket Global View ACL Permissions",
    "Source": "Overly Permissive Access Controls",
    "Target": "Amazon S3 Bucket",
    "Description": "S3 buckets with global view ACL permissions may expose sensitive data to unauthorized access.",
    "Mitigation": "Ensure AWS S3 bucket does not have global view ACL permissions enabled.",
    "Service": "Amazon S3"
  },
  {
    "Threat ID": "ELB_037",
    "Threat Name": "Unsecured ELB Listener",
    "Source": "Use of Unencrypted Transport",
    "Target": "AWS Elastic Load Balancer",
    "Description": "Elastic Load Balancers using unencrypted protocols such as HTTP increase the risk of data interception.",
    "Mitigation": "Ensure AWS Elastic Load Balancer listener uses TLS/SSL.",
    "Service": "AWS Elastic Load Balancer"
  },
  {
    "Threat ID": "Route53_038",
    "Threat Name": "Missing Transfer Lock in Route 53",
    "Source": "Domain Transfer Risk",
    "Target": "AWS Route 53 Domains",
    "Description": "Domains without transfer lock protection are susceptible to unauthorized transfers.",
    "Mitigation": "Ensure Route 53 domains have transfer lock protection.",
    "Service": "AWS Route 53"
  },
  {
    "Threat ID": "ALB_039",
    "Threat Name": "ALB Using Unsecured HTTP Protocol",
    "Source": "Unencrypted Data Transmission",
    "Target": "AWS Application Load Balancer",
    "Description": "ALB target groups using HTTP may expose data to interception or manipulation.",
    "Mitigation": "Ensure AWS Load Balancer doesn't use HTTP protocol.",
    "Service": "AWS Application Load Balancer"
  },
  {
    "Threat ID": "S3_040",
    "Threat Name": "S3 Bucket Without Secure Data Transport Policy",
    "Source": "Insecure Data Transmission",
    "Target": "Amazon S3 Bucket",
    "Description": "S3 buckets without secure data transport policies may allow unencrypted data transfers, increasing the risk of data interception.",
    "Mitigation": "Ensure AWS S3 bucket is configured with a secure data transport policy.",
    "Service": "Amazon S3"
  },
  {
    "Threat ID": "Transfer_041",
    "Threat Name": "Outdated Security Policy in AWS Transfer Server",
    "Source": "Use of Deprecated Security Policies",
    "Target": "AWS Transfer Server",
    "Description": "Using outdated security policies in AWS Transfer Server may expose data to vulnerabilities and compliance issues.",
    "Mitigation": "Ensure AWS Transfer Server uses the latest security policy to maintain strong encryption and security compliance.",
    "Service": "AWS Transfer"
  },
  {
    "Threat ID": "CodeGuru_042",
    "Threat Name": "Unencrypted AWS CodeGuru Reviewer Repository Association",
    "Source": "Lack of Encryption for Repository Association",
    "Target": "AWS CodeGuru Reviewer",
    "Description": "Without encryption, sensitive repository data used by AWS CodeGuru Reviewer may be at risk of unauthorized access.",
    "Mitigation": "Ensure AWS CodeGuru Reviewer repository association is encrypted using a customer-managed key (CMK).",
    "Service": "AWS CodeGuru Reviewer"
  },
  {
    "Threat ID": "SecurityGroup_043",
    "Threat Name": "Overly Permissive Security Group Egress Rules",
    "Source": "Unrestricted Outbound Traffic",
    "Target": "AWS Security Group",
    "Description": "Security groups allowing egress from 0.0.0.0/0 to all ports (-1) can lead to data exfiltration or unauthorized access.",
    "Mitigation": "Ensure no security groups allow egress from 0.0.0.0/0 to all ports (-1).",
    "Service": "AWS Security Groups"
  },
  {
    "Threat ID": "Bedrock_044",
    "Threat Name": "AWS Bedrock Agent Without Guardrails",
    "Source": "Unrestricted AI Model Behavior",
    "Target": "AWS Bedrock Agent",
    "Description": "Without guardrails, AWS Bedrock Agents may generate or process unauthorized or inappropriate responses, increasing risk.",
    "Mitigation": "Ensure AWS Bedrock agent is associated with Bedrock guardrails to maintain compliance and security policies.",
    "Service": "AWS Bedrock"
  },
  {
    "Threat ID": "SSM_045",
    "Threat Name": "Hard-Coded Secrets in AWS SSM Parameter Store",
    "Source": "Exposure of Sensitive Information",
    "Target": "AWS SSM Parameter Store",
    "Description": "Storing plaintext secrets in SSM Parameter Store increases the risk of accidental exposure or compromise.",
    "Mitigation": "Ensure no hard-coded secrets exist in Parameter Store values by using AWS Secrets Manager or KMS encryption.",
    "Service": "AWS Systems Manager (SSM)"
  },
  {
    "Threat ID": "AMI_046",
    "Threat Name": "Potential WhoAMI Cloud Image Name Confusion Attack",
    "Source": "Ambiguous or Misleading AMI Naming",
    "Target": "AWS AMI",
    "Description": "Misleading or unclear AMI names can lead to users deploying insecure or unauthorized images.",
    "Mitigation": "Reduce the potential for WhoAMI cloud image name confusion by using clear, verified, and approved AMI naming conventions.",
    "Service": "AWS AMI"
  },
  {
    "Threat ID": "NACL_047",
    "Threat Name": "Detached Network ACLs",
    "Source": "Unprotected Subnets",
    "Target": "AWS Network ACLs",
    "Description": "Unattached NACLs leave subnets without proper access control, increasing exposure to unauthorized traffic.",
    "Mitigation": "Ensure that all Network ACLs (NACLs) are attached to subnets to enforce security policies.",
    "Service": "AWS VPC"
  },
  {
    "Threat ID": "Subnet_048",
    "Threat Name": "Unprotected Subnets Due to Missing NACL",
    "Source": "Lack of Network Access Control",
    "Target": "AWS Subnets",
    "Description": "Subnets without an attached NACL may lack necessary network traffic controls, increasing exposure to security risks.",
    "Mitigation": "Ensure that all subnets have Network ACLs (NACLs) attached to enforce security controls.",
    "Service": "AWS VPC"
  },
  {
    "Threat ID": "EBS_049",
    "Threat Name": "Unencrypted EBS Volume Attached to EC2 Instances",
    "Source": "Unprotected Data at Rest",
    "Target": "AWS EBS Volumes",
    "Description": "Attaching unencrypted EBS volumes to EC2 instances can expose sensitive data if the instance is compromised.",
    "Mitigation": "Ensure that only encrypted EBS volumes are attached to EC2 instances using KMS CMKs.",
    "Service": "Amazon EBS"
  },
  {
    "Threat ID": "EBS_050",
    "Threat Name": "Unencrypted EBS Volume Attachment",
    "Source": "Lack of Data Encryption",
    "Target": "AWS EBS Volume Attachments",
    "Description": "EBS volume attachments that are not encrypted may expose sensitive data to unauthorized access.",
    "Mitigation": "Ensure that only encrypted EBS volumes are attached to EC2 instances.",
    "Service": "Amazon EBS"
  },
  {
    "Threat ID": "GuardDuty_051",
    "Threat Name": "GuardDuty Not Enabled for Specific Organization or Region",
    "Source": "Lack of Threat Detection",
    "Target": "AWS GuardDuty",
    "Description": "Without GuardDuty enabled in all regions or for the entire organization, potential threats may go undetected.",
    "Mitigation": "Ensure GuardDuty is enabled for all accounts in a specific organization and across all AWS regions.",
    "Service": "Amazon GuardDuty"
  },
  {
    "Threat ID": "GuardDuty_052",
    "Threat Name": "GuardDuty Organization-Wide Protection Not Configured",
    "Source": "Inconsistent Threat Monitoring",
    "Target": "AWS GuardDuty Organization Configuration",
    "Description": "If GuardDuty is not configured at an organizational level, some accounts may remain unprotected.",
    "Mitigation": "Ensure GuardDuty is enabled and properly configured at the organization level.",
    "Service": "Amazon GuardDuty"
  },
  {
    "Threat ID": "APIGateway_053",
    "Threat Name": "API Gateway Stage Without Proper Logging",
    "Source": "Lack of Visibility",
    "Target": "AWS API Gateway Stages",
    "Description": "API Gateway stages without logging may hinder the ability to monitor and investigate security events.",
    "Mitigation": "Ensure API Gateway stages have an appropriate logging level defined for security monitoring.",
    "Service": "Amazon API Gateway"
  },
  {
    "Threat ID": "APIGateway_054",
    "Threat Name": "API Gateway Method Logging Not Defined",
    "Source": "Insufficient Security Auditing",
    "Target": "AWS API Gateway Methods",
    "Description": "Without logging enabled at the API method level, security teams may lack insights into API calls and potential threats.",
    "Mitigation": "Ensure API Gateway methods have logging levels appropriately defined to capture relevant security events.",
    "Service": "Amazon API Gateway"
  },
  {
    "Threat ID": "SecurityGroup_055",
    "Threat Name": "Unattached Security Group",
    "Source": "Unused Security Group",
    "Target": "AWS Security Groups",
    "Description": "Security groups that are not attached to any resource may lead to misconfigurations and an increased attack surface.",
    "Mitigation": "Ensure that all security groups are attached to active AWS resources to maintain proper network security.",
    "Service": "Amazon EC2 Security Groups"
  },
  {
    "Threat ID": "S3_056",
    "Threat Name": "S3 Bucket Without Public Access Block",
    "Source": "Potential Data Exposure",
    "Target": "AWS S3 Buckets",
    "Description": "S3 buckets without public access block enabled may be at risk of accidental public exposure of sensitive data.",
    "Mitigation": "Ensure that all S3 buckets have a Public Access Block to restrict unauthorized access.",
    "Service": "Amazon S3"
  },
  {
    "Threat ID": "S3_057",
    "Threat Name": "S3 Public Access Block Not Configured",
    "Source": "Lack of Access Control",
    "Target": "AWS S3 Bucket Public Access Block",
    "Description": "Without a Public Access Block, an S3 bucket may be inadvertently exposed to public access, increasing the risk of data breaches.",
    "Mitigation": "Ensure that all S3 buckets are configured with a Public Access Block to prevent unauthorized access.",
    "Service": "Amazon S3"
  },
  {
    "Threat ID": "EMR_058",
    "Threat Name": "Amazon EMR Clusters With Open Security Groups",
    "Source": "Unrestricted Access",
    "Target": "AWS EMR Security Groups",
    "Description": "Amazon EMR clusters with security groups open to the world may be vulnerable to external attacks.",
    "Mitigation": "Ensure that Amazon EMR clusters' security groups are not open to the world and apply least privilege access.",
    "Service": "Amazon EMR"
  },
  {
    "Threat ID": "EMR_059",
    "Threat Name": "Amazon EMR Clusters with Open Security Groups",
    "Source": "Unrestricted Network Access",
    "Target": "AWS EMR Security Groups",
    "Description": "Amazon EMR clusters with security groups open to the world may be exposed to unauthorized access and potential attacks.",
    "Mitigation": "Ensure that Amazon EMR clusters' security groups are not open to the world and enforce least privilege access.",
    "Service": "Amazon EMR"
  },
  {
    "Threat ID": "RDS_060",
    "Threat Name": "RDS Clusters Without AWS Backup Plan",
    "Source": "Lack of Data Resilience",
    "Target": "AWS RDS Clusters",
    "Description": "RDS clusters without an AWS Backup plan may result in data loss in case of accidental deletion or corruption.",
    "Mitigation": "Ensure that RDS clusters are included in an AWS Backup plan to maintain data availability and integrity.",
    "Service": "Amazon RDS"
  },
  {
    "Threat ID": "EBS_061",
    "Threat Name": "EBS Volumes Not Included in AWS Backup Plan",
    "Source": "Lack of Backup Strategy",
    "Target": "AWS EBS Volumes",
    "Description": "EBS volumes not added to AWS Backup plans may lead to data loss in case of accidental deletion or failure.",
    "Mitigation": "Ensure that all critical EBS volumes are included in AWS Backup plans to facilitate data recovery.",
    "Service": "Amazon EBS"
  },
  {
    "Threat ID": "CloudTrail_062",
    "Threat Name": "CloudTrail Not Integrated with CloudWatch Logs",
    "Source": "Limited Security Monitoring",
    "Target": "AWS CloudTrail",
    "Description": "CloudTrail trails without integration with CloudWatch Logs may result in delayed detection of security events.",
    "Mitigation": "Ensure that all CloudTrail trails are integrated with CloudWatch Logs to enable real-time security monitoring.",
    "Service": "AWS CloudTrail"
  },
  {
    "Threat ID": "VPC_063",
    "Threat Name": "VPC Flow Logging Not Enabled",
    "Source": "Lack of Network Visibility",
    "Target": "AWS VPC",
    "Description": "VPCs without flow logging enabled may lead to difficulties in troubleshooting and detecting malicious activities.",
    "Mitigation": "Ensure VPC flow logging is enabled for all VPCs to monitor and analyze network traffic.",
    "Service": "Amazon VPC"
  },
  {
    "Threat ID": "VPC_064",
    "Threat Name": "Default Security Group Allows Unrestricted Traffic",
    "Source": "Overly Permissive Access Control",
    "Target": "AWS VPC Default Security Groups",
    "Description": "If the default security group in a VPC allows unrestricted traffic, it increases the risk of unauthorized access.",
    "Mitigation": "Ensure that the default security group of every VPC restricts all traffic unless explicitly configured.",
    "Service": "Amazon VPC"
  },
  {
    "Threat ID": "IAM_065",
    "Threat Name": "IAM Groups Without Members",
    "Source": "Orphaned IAM Groups",
    "Target": "AWS IAM Groups",
    "Description": "IAM groups without any members may lead to security misconfigurations and excessive permissions granted unnecessarily.",
    "Mitigation": "Ensure that all IAM groups contain at least one IAM user or role to maintain proper access control.",
    "Service": "AWS IAM"
  },
  {
    "Threat ID": "IAM_066",
    "Threat Name": "IAM Groups Without Assigned Users",
    "Source": "Unused IAM Groups",
    "Target": "AWS IAM Group Membership",
    "Description": "IAM groups without assigned users may result in permissions being granted to no one, leading to operational confusion.",
    "Mitigation": "Ensure that every IAM group includes at least one IAM user to avoid security misconfigurations.",
    "Service": "AWS IAM"
  },
  {
    "Threat ID": "ASG_067",
    "Threat Name": "Auto Scaling Groups Without Load Balancer Health Checks",
    "Source": "Inefficient Health Monitoring",
    "Target": "AWS Auto Scaling Groups",
    "Description": "Auto Scaling groups associated with a load balancer but not using ELB health checks may result in inefficient scaling and downtime.",
    "Mitigation": "Ensure that Auto Scaling groups that are associated with a load balancer use Elastic Load Balancing health checks for accurate scaling decisions.",
    "Service": "Amazon EC2 Auto Scaling"
  },
  {
    "Threat ID": "ELB_068",
    "Threat Name": "Auto Scaling Groups Without ELB Health Checks",
    "Source": "Unreliable Health Monitoring",
    "Target": "AWS Auto Scaling Groups",
    "Description": "Auto Scaling groups associated with a load balancer but not using ELB health checks may result in inefficient scaling and increased downtime.",
    "Mitigation": "Ensure that Auto Scaling groups that are associated with a load balancer use Elastic Load Balancing health checks for accurate scaling decisions.",
    "Service": "AWS Elastic Load Balancing"
  },
  {
    "Threat ID": "DDB_069",
    "Threat Name": "DynamoDB Tables Without Auto Scaling",
    "Source": "Unoptimized Performance",
    "Target": "Amazon DynamoDB Tables",
    "Description": "DynamoDB tables without Auto Scaling enabled may suffer from performance issues or excessive cost due to improper capacity planning.",
    "Mitigation": "Ensure that Auto Scaling is enabled on DynamoDB tables to automatically adjust read and write capacity based on demand.",
    "Service": "Amazon DynamoDB"
  },
  {
    "Threat ID": "EFS_070",
    "Threat Name": "EFS File Systems Not Added to AWS Backup Plans",
    "Source": "Lack of Backup Strategy",
    "Target": "Amazon EFS",
    "Description": "Amazon Elastic File System (EFS) file systems not included in AWS Backup plans may result in data loss in case of accidental deletion or failure.",
    "Mitigation": "Ensure that Elastic File System (EFS) file systems are added to AWS Backup plans to ensure data resilience.",
    "Service": "Amazon EFS"
  },
  {
    "Threat ID": "EIP_071",
    "Threat Name": "Unattached Elastic IPs",
    "Source": "Unused Public IPs",
    "Target": "Amazon Elastic IP (EIP)",
    "Description": "Elastic IP addresses allocated to a VPC but not attached to EC2 instances may lead to security risks or unintended costs.",
    "Mitigation": "Ensure that all EIP addresses allocated to a VPC are attached to EC2 instances to avoid unnecessary resource allocation.",
    "Service": "Amazon EC2"
  },
  {
    "Threat ID": "ALB_072",
    "Threat Name": "Application Load Balancer Not Enforcing HTTPS",
    "Source": "Unsecured Communication",
    "Target": "AWS Application Load Balancer (ALB)",
    "Description": "Application Load Balancers that do not redirect HTTP requests to HTTPS may expose sensitive data to interception.",
    "Mitigation": "Ensure that ALB redirects HTTP requests to HTTPS using appropriate listener rules to enforce secure communication.",
    "Service": "AWS Elastic Load Balancing"
  },
  {
    "Threat ID": "ALB_073",
    "Threat Name": "ALB Not Redirecting HTTP to HTTPS",
    "Source": "Unsecured Communication",
    "Target": "AWS Application Load Balancer (ALB)",
    "Description": "ALBs that do not redirect HTTP traffic to HTTPS may expose sensitive data to interception and compromise secure communication.",
    "Mitigation": "Ensure that ALB redirects HTTP requests to HTTPS by enforcing SSL policies at the listener level.",
    "Service": "AWS Elastic Load Balancing"
  },
  {
    "Threat ID": "IAM_074",
    "Threat Name": "IAM Users Without Group Membership",
    "Source": "Improper IAM Configuration",
    "Target": "AWS IAM Users",
    "Description": "IAM users who are not part of at least one IAM group may lead to inconsistent permission management and security risks.",
    "Mitigation": "Ensure that all IAM users are members of at least one IAM group to enforce role-based access controls.",
    "Service": "AWS Identity and Access Management"
  },
  {
    "Threat ID": "IAM_075",
    "Threat Name": "IAM User With Console Access",
    "Source": "Unnecessary Attack Surface",
    "Target": "AWS IAM Users",
    "Description": "IAM users with console access increase the attack surface and may be a potential security risk if not properly managed.",
    "Mitigation": "Ensure IAM users do not have unnecessary access to the AWS console, and enforce least privilege principles.",
    "Service": "AWS Identity and Access Management"
  },
  {
    "Threat ID": "Route53_076",
    "Threat Name": "Route 53 A Record Missing Attached Resource",
    "Source": "Misconfigured DNS Entry",
    "Target": "Amazon Route 53 DNS Records",
    "Description": "A Route 53 A record without an attached resource may lead to unreachable services and DNS misconfigurations.",
    "Mitigation": "Ensure that every Route 53 A record has a valid attached resource to maintain DNS integrity.",
    "Service": "Amazon Route 53"
  },
  {
    "Threat ID": "RDS_077",
    "Threat Name": "PostgreSQL RDS Cluster Without Query Logging",
    "Source": "Lack of Database Monitoring",
    "Target": "AWS RDS PostgreSQL Cluster",
    "Description": "RDS PostgreSQL clusters without query logging enabled may hinder security audits and troubleshooting efforts.",
    "Mitigation": "Enable query logging in PostgreSQL RDS clusters via cluster parameter groups for security auditing and performance monitoring.",
    "Service": "Amazon RDS"
  },
  {
    "Threat ID": "WAF_078",
    "Threat Name": "Public ALB Without WAF Protection",
    "Source": "Unprotected Public-Facing Load Balancer",
    "Target": "AWS Application Load Balancer",
    "Description": "Public-facing ALBs without AWS WAF protection may be vulnerable to web-based attacks such as SQL injection and cross-site scripting.",
    "Mitigation": "Ensure that public-facing ALBs are protected by AWS WAF to filter and mitigate web-based threats.",
    "Service": "AWS Web Application Firewall (WAF)"
  },
  {
    "Threat ID": "WAF_079",
    "Threat Name": "Public API Gateway Without WAF Protection",
    "Source": "Unprotected Public-Facing API Gateway",
    "Target": "AWS API Gateway",
    "Description": "Public API Gateways without AWS WAF protection are vulnerable to attacks such as DDoS, injection, and unauthorized access.",
    "Mitigation": "Ensure that public API Gateways are protected by AWS WAF to enforce web application security policies.",
    "Service": "AWS Web Application Firewall (WAF)"
  },
  {
    "Threat ID": "RDS_080",
    "Threat Name": "PostgreSQL RDS Instance Without Query Logging",
    "Source": "Lack of Database Monitoring",
    "Target": "Amazon RDS Instance",
    "Description": "PostgreSQL RDS instances without query logging enabled may hinder security audits and performance analysis.",
    "Mitigation": "Enable query logging in PostgreSQL RDS instances through the appropriate DB parameter group settings.",
    "Service": "Amazon RDS"
  },
  {
    "Threat ID": "WAF_081",
    "Threat Name": "WAFv2 Web ACL Without Logging Configuration",
    "Source": "Lack of Visibility and Monitoring",
    "Target": "AWS WAFv2 Web ACL",
    "Description": "WAFv2 Web ACLs without logging configuration may prevent security teams from monitoring and responding to threats effectively.",
    "Mitigation": "Ensure WAFv2 Web ACLs have a logging configuration enabled to capture request data for security analysis.",
    "Service": "AWS WAFv2"
  },
  {
    "Threat ID": "CFD_082",
    "Threat Name": "CloudFront Distribution Without Response Headers Policy",
    "Source": "Insecure HTTP Response Handling",
    "Target": "AWS CloudFront Distribution",
    "Description": "CloudFront distributions without a response headers policy may not enforce security headers, leaving applications vulnerable to attacks such as clickjacking and MIME sniffing.",
    "Mitigation": "Attach a response headers policy to the CloudFront distribution to enforce security headers such as Content-Security-Policy and X-Frame-Options.",
    "Service": "Amazon CloudFront"
  },
  {
    "Threat ID": "AppSync_083",
    "Threat Name": "AppSync Without WAF Protection",
    "Source": "Unprotected GraphQL API",
    "Target": "AWS AppSync",
    "Description": "AppSync APIs without WAF protection are vulnerable to injection attacks, DDoS, and other web-based threats.",
    "Mitigation": "Ensure AWS WAF is applied to AppSync GraphQL APIs to filter malicious requests and enhance security.",
    "Service": "AWS AppSync"
  },
  {
    "Threat ID": "SSM_084",
    "Threat Name": "Unencrypted SSM Parameter",
    "Source": "Exposure of Sensitive Configuration Data",
    "Target": "AWS Systems Manager Parameter Store",
    "Description": "Unencrypted SSM parameters may expose sensitive information such as credentials, API keys, and configuration secrets.",
    "Mitigation": "Ensure all SSM parameters are encrypted using AWS KMS to protect sensitive data.",
    "Service": "AWS Systems Manager"
  },
  {
    "Threat ID": "VPC_085",
    "Threat Name": "Absence of NAT Gateway for Default Route",
    "Source": "Unsecured Outbound Traffic",
    "Target": "AWS VPC Route Table",
    "Description": "A default route that does not use AWS NAT Gateway may expose private instances directly to the internet, increasing the attack surface.",
    "Mitigation": "Ensure that AWS NAT Gateways are utilized for private subnet default routes to maintain security.",
    "Service": "Amazon VPC"
  },
  {
    "Threat ID": "SSM_086",
    "Threat Name": "SSM Secrets Sent to Untrusted Domains",
    "Source": "Data Leakage",
    "Target": "AWS Systems Manager Parameter Store",
    "Description": "Terraform configurations that send SSM secrets over HTTP to untrusted domains may result in credential exposure.",
    "Mitigation": "Ensure Terraform is not configured to send sensitive SSM parameters to untrusted domains and enforce HTTPS for transmission.",
    "Service": "AWS Systems Manager"
  },
  {
    "Threat ID": "SSM_087",
    "Threat Name": "SSM Secrets Sent to Untrusted Domains",
    "Source": "Data Leakage via Terraform",
    "Target": "AWS Systems Manager Parameter Store",
    "Description": "Terraform configurations that send SSM secrets over HTTP to untrusted domains may result in credential exposure and data leakage.",
    "Mitigation": "Ensure Terraform is not configured to send sensitive SSM parameters to untrusted domains and enforce HTTPS for secure transmission.",
    "Service": "AWS Systems Manager"
  },
  {
    "Threat ID": "CodeCommit_088",
    "Threat Name": "CodeCommit Without Approval Rules",
    "Source": "Lack of Repository Approval Policies",
    "Target": "AWS CodeCommit",
    "Description": "Repositories without approval rules may allow unverified changes, leading to potential security vulnerabilities and compliance violations.",
    "Mitigation": "Ensure AWS CodeCommit repositories are configured with approval rules to enforce peer review and secure code changes.",
    "Service": "AWS CodeCommit"
  },
  {
    "Threat ID": "IAM_089",
    "Threat Name": "Lack of Access Analyzer Configuration",
    "Source": "Unmonitored IAM Policies",
    "Target": "AWS Access Analyzer",
    "Description": "Without AWS Access Analyzer, IAM policies and roles may unintentionally grant excessive permissions or expose resources publicly.",
    "Mitigation": "Ensure AWS Access Analyzer is enabled to continuously monitor access configurations and prevent privilege escalation.",
    "Service": "AWS Identity and Access Management (IAM)"
  },
  {
    "Threat ID": "Account_090",
    "Threat Name": "Unverified AWS Account Contacts",
    "Source": "Lack of Alternate and Primary Contact Information",
    "Target": "AWS Account",
    "Description": "AWS accounts without valid alternate and primary contacts may fail to receive critical security and compliance notifications.",
    "Mitigation": "Ensure AWS accounts have updated primary and alternate contacts to maintain security incident response readiness.",
    "Service": "AWS Account Management"
  },
  {
    "Threat ID": "ACM_091",
    "Threat Name": "Unvalidated ACM Certificates",
    "Source": "Misconfigured Certificate Validation",
    "Target": "AWS Certificate Manager (ACM)",
    "Description": "ACM certificates that are not properly validated may cause service disruptions due to expired or untrusted certificates.",
    "Mitigation": "Ensure ACM certificates have valid validation mechanisms such as DNS or email verification to maintain TLS security.",
    "Service": "AWS Certificate Manager (ACM)"
  },
  {
    "Threat ID": "ACM_092",
    "Threat Name": "Unprotected ACM Private Certificate Authority",
    "Source": "Improper Certificate Authority Configuration",
    "Target": "AWS Certificate Manager Private Certificate Authority (ACM PCA)",
    "Description": "Improperly configured ACM Private CA may issue unauthorized certificates, leading to man-in-the-middle attacks and compliance violations.",
    "Mitigation": "Ensure ACM PCA is properly secured, logs certificate issuance, and enforces role-based access controls.",
    "Service": "AWS Certificate Manager (ACM) PCA"
  },
  {
    "Threat ID": "ACMPCA_201",
    "Threat Name": "Unprotected ACM PCA Policies",
    "Source": "Improperly Configured ACM PCA Permissions",
    "Target": "AWS Certificate Manager Private Certificate Authority (ACM PCA)",
    "Description": "Misconfigured ACM PCA policies may allow unauthorized certificate issuance, leading to security breaches and compliance violations.",
    "Mitigation": "Ensure ACM PCA policies restrict access to authorized entities and enforce logging for certificate issuance.",
    "Service": "AWS Certificate Manager Private CA"
  },
  {
    "Threat ID": "ALB_202",
    "Threat Name": "Unprotected ALB Listeners and Rules",
    "Source": "Lack of Security Controls in Load Balancer Configuration",
    "Target": "AWS Application Load Balancer (ALB)",
    "Description": "Improperly configured ALB listeners, rules, and target groups may allow insecure traffic or unauthorized access.",
    "Mitigation": "Ensure ALB listeners enforce HTTPS and security policies, and restrict access to trusted IPs and services.",
    "Service": "AWS Application Load Balancer (ALB)"
  },
  {
    "Threat ID": "ALB_203",
    "Threat Name": "Unsecured ALB Listener Certificates",
    "Source": "Improper Management of SSL/TLS Certificates",
    "Target": "AWS ALB Listener",
    "Description": "ALB listeners without properly assigned SSL/TLS certificates may expose services to man-in-the-middle (MITM) attacks.",
    "Mitigation": "Ensure ALB listeners use valid TLS certificates and enforce modern security policies.",
    "Service": "AWS Application Load Balancer (ALB)"
  },
  {
    "Threat ID": "ALB_204",
    "Threat Name": "Unrestricted ALB Target Group Access",
    "Source": "Overly Permissive Target Group Configuration",
    "Target": "AWS ALB Target Group",
    "Description": "Improperly configured target groups may expose backend services to unauthorized access or excessive traffic.",
    "Mitigation": "Ensure ALB target groups are restricted to specific sources and enforce security group policies.",
    "Service": "AWS Application Load Balancer (ALB)"
  },
  {
    "Threat ID": "ALB_205",
    "Threat Name": "Unsecured ALB Listener Rules",
    "Source": "Improper Access Control in Listener Rules",
    "Target": "AWS ALB Listener Rules",
    "Description": "Weak or misconfigured listener rules may allow traffic redirection to untrusted endpoints.",
    "Mitigation": "Ensure ALB listener rules follow the principle of least privilege and allow traffic only to authorized destinations.",
    "Service": "AWS Application Load Balancer (ALB)"
  },
  {
     "Threat ID": "CODECOMMIT_101",
     "Threat Name": "Lack of CodeCommit Approval Rules",
     "Source": "Unprotected CodeCommit Repositories",
     "Target": "AWS CodeCommit",
     "Description": "Repositories without approval rules may allow unverified changes, leading to security vulnerabilities.",
     "Mitigation": "Ensure CodeCommit repositories enforce mandatory approval rules before merging pull requests.",
     "Service": "AWS CodeCommit"
  },
    {
        "Threat ID": "ROUTE53_001",
        "Threat Name": "Lack of DNSSEC Signing in Route 53",
        "Source": "Tampered DNS Responses",
        "Target": "Amazon Route 53 Public Hosted Zones",
        "Description": "Without DNSSEC signing, DNS responses can be forged or manipulated, leading to security risks such as DNS spoofing or cache poisoning.",
        "Mitigation": "Enable Domain Name System Security Extensions (DNSSEC) signing for all public hosted zones in Amazon Route 53.",
        "Service": "Amazon Route 53"
    },
    {
        "Threat ID": "ROUTE53_002",
        "Threat Name": "Lack of DNS Query Logging",
        "Source": "Undetected DNS Traffic Anomalies",
        "Target": "Amazon Route 53 Hosted Zones",
        "Description": "Without DNS query logging, organizations lack visibility into potential DNS-based attacks, misconfigurations, or unusual query activity.",
        "Mitigation": "Ensure Domain Name System (DNS) query logging is enabled for Amazon Route 53 hosted zones to monitor DNS traffic.",
        "Service": "Amazon Route 53"
    },
    {
        "Threat ID": "IAM_101",
        "Threat Name": "IAM Policy Grants Full Privileges",
        "Source": "Overly Permissive IAM Policies",
        "Target": "AWS IAM Roles, Users, and Groups",
        "Description": "IAM policies granting full administrative privileges (`*` actions on `*` resources) can lead to privilege escalation and unauthorized access.",
        "Mitigation": "Review and restrict IAM policies to follow the principle of least privilege, ensuring only necessary permissions are granted.",
        "Service": "AWS IAM"
    },
    {
        "Threat ID": "EC2_201",
        "Threat Name": "Missing IAM Role on EC2 Instances",
        "Source": "Lack of Scoped AWS Permissions",
        "Target": "Amazon EC2 Instances",
        "Description": "EC2 instances without an attached IAM role cannot securely access AWS resources, potentially leading to hardcoded credentials or security workarounds.",
        "Mitigation": "Attach an IAM role with least privilege permissions to all EC2 instances requiring access to AWS services.",
        "Service": "Amazon EC2"
    },
    {
        "Threat ID": "CF_301",
        "Threat Name": "CloudFront Distribution Without Custom SSL",
        "Source": "Use of Default TLS Certificates",
        "Target": "Amazon CloudFront Distributions",
        "Description": "CloudFront distributions using default AWS SSL certificates instead of custom domain-specific certificates may expose data to security risks.",
        "Mitigation": "Ensure that all Amazon CloudFront distributions use a custom SSL certificate for secure HTTPS communication.",
        "Service": "Amazon CloudFront"
    },
    {
        "Threat ID": "S3_401",
        "Threat Name": "S3 Bucket ACL Allows Access to All Authenticated Users",
        "Source": "Unrestricted Data Access",
        "Target": "Amazon S3 Buckets",
        "Description": "S3 buckets with ACLs that allow access to 'All Authenticated Users' can lead to unauthorized data exposure.",
        "Mitigation": "Restrict bucket ACLs to only allow access to specific IAM roles, users, or accounts, ensuring data is not broadly accessible.",
        "Service": "Amazon S3"
    },
    {
        "Threat ID": "S3_015",
        "Threat Name": "S3 Bucket Allows Access to All Authenticated Users",
        "Source": "Overly Permissive Bucket Access",
        "Target": "Amazon S3 Bucket",
        "Description": "S3 buckets with ACLs that allow access to 'All Authenticated Users' may expose sensitive data to unintended AWS accounts.",
        "Mitigation": "Restrict bucket ACLs to only allow access to specific IAM roles, users, or accounts, and use bucket policies for fine-grained access control.",
        "Service": "Amazon S3"
    },
    {
        "Threat ID": "VPC_001",
        "Threat Name": "Overly Permissive VPC Peering Route Table",
        "Source": "Unrestricted Traffic Flow",
        "Target": "AWS VPC Peering Route Table",
        "Description": "A VPC route table with overly permissive rules may allow unintended access between peered VPCs, increasing the attack surface.",
        "Mitigation": "Restrict VPC peering route table entries to specific CIDR ranges and ensure proper access controls are in place.",
        "Service": "Amazon VPC"
    },
    {
        "Threat ID": "CFG_002",
        "Threat Name": "AWS Config Recorder Not Enabled",
        "Source": "Lack of Resource Visibility",
        "Target": "AWS Config",
        "Description": "Without AWS Config recording all supported resources, security misconfigurations and compliance violations may go undetected.",
        "Mitigation": "Enable AWS Config to record all supported resources and ensure the configuration recorder is active.",
        "Service": "AWS Config"
    },
    {
        "Threat ID": "CFD_003",
        "Threat Name": "CloudFront Distribution Missing Origin Access Control",
        "Source": "Unauthorized Access to S3 Origin",
        "Target": "Amazon CloudFront Distribution",
        "Description": "A CloudFront distribution without Origin Access enabled may allow unauthorized access to the underlying S3 bucket.",
        "Mitigation": "Ensure Origin Access Control is enabled to restrict access to the S3 bucket only via CloudFront.",
        "Service": "Amazon CloudFront"
    },
    {
        "Threat ID": "WAF_004",
        "Threat Name": "CloudFront WAFv2 WebACL Missing AMR for Log4j Vulnerability",
        "Source": "Exploitation of Log4j Vulnerability",
        "Target": "AWS WAFv2 WebACL attached to CloudFront",
        "Description": "Without an AWS Managed Rule (AMR) configured for Log4j, CloudFront applications may be vulnerable to remote code execution (RCE) attacks.",
        "Mitigation": "Ensure AWS WAFv2 WebACL attached to CloudFront includes AWS Managed Rules (AMR) to mitigate Log4j vulnerabilities.",
        "Service": "AWS WAFv2"
    },
    {
        "Threat ID": "DMS_005",
        "Threat Name": "AWS DMS Endpoint Lacking SSL Configuration",
        "Source": "Unencrypted Data Transmission",
        "Target": "AWS Database Migration Service (DMS) Endpoint",
        "Description": "DMS endpoints without SSL enabled may expose sensitive data to eavesdropping during migration.",
        "Mitigation": "Ensure all AWS DMS endpoints use SSL/TLS to encrypt data in transit.",
        "Service": "AWS DMS"
    },
    {
        "Threat ID": "ELC_006",
        "Threat Name": "ElastiCache Redis Cluster Without Multi-AZ Failover",
        "Source": "Single Point of Failure",
        "Target": "AWS ElastiCache Redis Cluster",
        "Description": "ElastiCache Redis clusters without Multi-AZ Automatic Failover enabled may experience availability issues in the event of a failure.",
        "Mitigation": "Enable Multi-AZ Automatic Failover for ElastiCache Redis clusters to ensure high availability and failover support.",
        "Service": "Amazon ElastiCache"
    },
    {
        "Threat ID": "ELC_007",
        "Threat Name": "ElastiCache Redis Cluster Lacking Multi-AZ Automatic Failover",
        "Source": "Single Point of Failure",
        "Target": "AWS ElastiCache Redis Cluster",
        "Description": "ElastiCache Redis clusters without Multi-AZ Automatic Failover enabled may suffer from availability issues in case of failure.",
        "Mitigation": "Enable Multi-AZ Automatic Failover for AWS ElastiCache Redis clusters to ensure high availability.",
        "Service": "Amazon ElastiCache"
    },
    {
        "Threat ID": "API_008",
        "Threat Name": "API Gateway Endpoints Without Client Certificate Authentication",
        "Source": "Weak Authentication Mechanism",
        "Target": "AWS API Gateway",
        "Description": "API Gateway endpoints that do not use client certificate authentication may allow unauthorized access to sensitive resources.",
        "Mitigation": "Ensure AWS API Gateway endpoints enforce client certificate authentication to restrict access to trusted clients.",
        "Service": "AWS API Gateway"
    },
    {
        "Threat ID": "ES_009",
        "Threat Name": "ElasticSearch/OpenSearch Without Fine-Grained Access Control",
        "Source": "Overly Permissive Access",
        "Target": "AWS ElasticSearch/OpenSearch",
        "Description": "AWS ElasticSearch/OpenSearch domains without fine-grained access control may allow unauthorized users to access and modify sensitive data.",
        "Mitigation": "Enable fine-grained access control to ensure only authorized users and applications have appropriate access.",
        "Service": "AWS OpenSearch Service"
    },
    {
        "Threat ID": "API_010",
        "Threat Name": "API Gateway Requests Not Validated",
        "Source": "Unvalidated API Requests",
        "Target": "AWS API Gateway",
        "Description": "If API Gateway requests are not validated, malicious actors may send improperly formatted or insecure API requests, leading to application vulnerabilities.",
        "Mitigation": "Ensure API Gateway request validation is enabled to enforce schema compliance and protect against injection attacks.",
        "Service": "AWS API Gateway"
    },
    {
        "Threat ID": "CFD_011",
        "Threat Name": "CloudFront Distribution Using Insecure SSL Protocols",
        "Source": "Weak HTTPS Communication",
        "Target": "AWS CloudFront",
        "Description": "CloudFront distributions using outdated or weak SSL protocols may expose data to interception and compromise.",
        "Mitigation": "Ensure AWS CloudFront distributions enforce secure TLS 1.2 or later for HTTPS communication.",
        "Service": "Amazon CloudFront"
    },
    {
        "Threat ID": "EMR_012",
        "Threat Name": "EMR Cluster Without Security Configuration",
        "Source": "Unsecured Data Processing",
        "Target": "AWS EMR Cluster",
        "Description": "AWS EMR clusters without security configuration may expose data and processing resources to unauthorized access.",
        "Mitigation": "Ensure EMR clusters are configured with a security configuration that enforces encryption and access controls.",
        "Service": "Amazon EMR"
    },
    {
        "Threat ID": "IAM_013",
        "Threat Name": "AWS Managed IAMFullAccess Policy Used",
        "Source": "Overly Permissive IAM Policy",
        "Target": "AWS IAM",
        "Description": "Using the AWS Managed IAMFullAccess policy grants excessive permissions, increasing the risk of privilege escalation and data breaches.",
        "Mitigation": "Ensure AWS IAM roles and groups do not use the IAMFullAccess managed policy. Apply the principle of least privilege.",
        "Service": "AWS IAM"
    },
    {
        "Threat ID": "IAM_014",
        "Threat Name": "Overuse of AWS Managed IAMFullAccess Policy",
        "Source": "Excessive IAM Privileges",
        "Target": "AWS IAM Roles and Policies",
        "Description": "Using the AWS Managed IAMFullAccess policy grants excessive privileges, increasing the risk of privilege escalation and security breaches.",
        "Mitigation": "Ensure AWS IAM roles, users, and groups do not use IAMFullAccess managed policy. Apply the principle of least privilege.",
        "Service": "AWS IAM"
    },
    {
        "Threat ID": "SEC_015",
        "Threat Name": "Secrets Manager Secrets Without Automatic Rotation",
        "Source": "Static Long-Lived Secrets",
        "Target": "AWS Secrets Manager",
        "Description": "Secrets stored in AWS Secrets Manager that are not automatically rotated may lead to credential leakage and long-term security risks.",
        "Mitigation": "Enable automatic secret rotation in AWS Secrets Manager to regularly update and secure credentials.",
        "Service": "AWS Secrets Manager"
    },
    {
        "Threat ID": "NEP_016",
        "Threat Name": "Neptune Cluster Lacking Deletion Protection",
        "Source": "Accidental Data Loss",
        "Target": "AWS Neptune Cluster",
        "Description": "Neptune clusters without deletion protection enabled can be accidentally deleted, leading to irreversible data loss.",
        "Mitigation": "Enable deletion protection on Neptune clusters to prevent accidental deletions.",
        "Service": "Amazon Neptune"
    },
    {
        "Threat ID": "ES_017",
        "Threat Name": "ElasticSearch/OpenSearch Without Dedicated Master Node",
        "Source": "Cluster Management Issues",
        "Target": "AWS ElasticSearch/OpenSearch",
        "Description": "ElasticSearch/OpenSearch clusters without dedicated master nodes may experience stability issues, leading to downtime and degraded performance.",
        "Mitigation": "Enable dedicated master nodes to improve cluster stability and ensure reliable operation.",
        "Service": "AWS OpenSearch Service"
    },
    {
        "Threat ID": "RDS_018",
        "Threat Name": "RDS Instance Without Copy Tags to Snapshots Enabled",
        "Source": "Inconsistent Backup Management",
        "Target": "Amazon RDS",
        "Description": "RDS instances that do not copy tags to snapshots may lead to difficulties in backup management and compliance tracking.",
        "Mitigation": "Ensure that 'copy tags to snapshots' is enabled to maintain consistent metadata across backups.",
        "Service": "Amazon RDS"
    },
    {
        "Threat ID": "S3_019",
        "Threat Name": "S3 Bucket Without Lifecycle Configuration",
        "Source": "Accumulation of Unused Data",
        "Target": "Amazon S3 Bucket",
        "Description": "S3 buckets without lifecycle policies may accumulate unused or obsolete data, leading to increased storage costs and security risks.",
        "Mitigation": "Enable and enforce S3 lifecycle policies to automatically manage and expire older object versions.",
        "Service": "Amazon S3"
    },
    {
        "Threat ID": "S3_020",
        "Threat Name": "Missing S3 Event Notifications",
        "Source": "Unmonitored Changes",
        "Target": "Amazon S3 Bucket",
        "Description": "S3 buckets without event notifications may result in security events, data modifications, or deletions going unnoticed.",
        "Mitigation": "Ensure event notifications are enabled to trigger alerts or automation when changes occur in the bucket.",
        "Service": "Amazon S3"
    },
    {
        "Threat ID": "NWF_021",
        "Threat Name": "Network Firewall Lacks Logging",
        "Source": "Insufficient Monitoring",
        "Target": "AWS Network Firewall",
        "Description": "A network firewall without logging enabled may lead to undetected security events and network anomalies.",
        "Mitigation": "Ensure logging is configured for AWS Network Firewall to enable visibility into traffic and security incidents.",
        "Service": "AWS Network Firewall"
    },
    {
        "Threat ID": "KMS_022",
        "Threat Name": "Undefined KMS Key Policy",
        "Source": "Weak Access Control",
        "Target": "AWS KMS Key",
        "Description": "KMS keys without properly defined policies may allow unintended access, leading to data compromise or unauthorized decryption.",
        "Mitigation": "Ensure a well-defined and restrictive policy is applied to KMS keys to enforce least privilege access.",
        "Service": "AWS Key Management Service (KMS)"
    },
    {
        "Threat ID": "S3_023",
        "Threat Name": "S3 Buckets with Enabled Access Control Lists (ACLs)",
        "Source": "Insecure Access Permissions",
        "Target": "Amazon S3 Bucket",
        "Description": "S3 buckets using ACLs instead of bucket policies may lead to unintended exposure and misconfiguration risks.",
        "Mitigation": "Disable access control lists (ACLs) and enforce fine-grained access control using bucket policies.",
        "Service": "Amazon S3"
    },
    {
        "Threat ID": "MWAA_024",
        "Threat Name": "MWAA Environment is Publicly Accessible",
        "Source": "Unrestricted Access",
        "Target": "AWS Managed Workflows for Apache Airflow (MWAA)",
        "Description": "Publicly accessible MWAA environments may expose sensitive data and workflows to unauthorized users.",
        "Mitigation": "Ensure MWAA environments are configured with appropriate VPC settings to restrict public access.",
        "Service": "AWS MWAA"
    },
    {
        "Threat ID": "IAM_025",
        "Threat Name": "Overly Permissive SageMaker Notebook IAM Policy",
        "Source": "Excessive Privileges",
        "Target": "AWS IAM Roles for SageMaker",
        "Description": "IAM policies attached to SageMaker notebooks with excessive permissions may allow privilege escalation or unauthorized access.",
        "Mitigation": "Apply the principle of least privilege by restricting IAM permissions for SageMaker notebook instances.",
        "Service": "AWS SageMaker"
    },
    {
        "Threat ID": "RDS_026",
        "Threat Name": "RDS Database Lacks Encryption in Transit",
        "Source": "Unencrypted Data Transmission",
        "Target": "AWS RDS Database",
        "Description": "RDS databases without encryption in transit may allow data interception by attackers during transmission.",
        "Mitigation": "Enable encryption in transit (TLS) for all AWS RDS database instances to protect data integrity.",
        "Service": "Amazon RDS"
    },
    {
        "Threat ID": "RDS_027",
        "Threat Name": "Unencrypted RDS Database in Transit",
        "Source": "Unsecured Data Transmission",
        "Target": "Amazon RDS Database",
        "Description": "RDS database instances without encryption in transit may expose sensitive data to interception during communication.",
        "Mitigation": "Ensure that RDS database instances have encryption in transit enabled using SSL/TLS.",
        "Service": "Amazon RDS"
    },
    {
        "Threat ID": "API_028",
        "Threat Name": "API Gateway Lacks Authorization",
        "Source": "Uncontrolled Access",
        "Target": "AWS API Gateway",
        "Description": "API methods without authorization or API keys may allow unrestricted access to backend services, leading to data exposure or misuse.",
        "Mitigation": "Ensure API Gateway methods have authorization mechanisms or API keys enforced.",
        "Service": "AWS API Gateway"
    },
    {
        "Threat ID": "ACM_029",
        "Threat Name": "Wildcard ACM Certificates",
        "Source": "Overly Broad TLS Certificate Scope",
        "Target": "AWS Certificate Manager",
        "Description": "Using wildcard certificates may lead to an increased attack surface if one subdomain is compromised.",
        "Mitigation": "Ensure ACM certificates are issued for specific domain names instead of using wildcards.",
        "Service": "AWS Certificate Manager"
    },
    {
        "Threat ID": "CFD_030",
        "Threat Name": "CloudFront Allows Non-HTTPS Connections",
        "Source": "Unsecured Content Delivery",
        "Target": "AWS CloudFront Distribution",
        "Description": "CloudFront origins allowing HTTP connections may expose data to interception and man-in-the-middle attacks.",
        "Mitigation": "Enforce HTTPS-only origin protocol policy in CloudFront distributions to protect data in transit.",
        "Service": "AWS CloudFront"
    },
    {
        "Threat ID": "SQS_031",
        "Threat Name": "SQS Encryption Uses Default AWS Keys",
        "Source": "Weak Key Management",
        "Target": "Amazon SQS Queue",
        "Description": "Using AWS default keys for SQS encryption may result in a lack of fine-grained control over data access and key management.",
        "Mitigation": "Ensure that SQS queues are encrypted using Customer Managed Keys (CMKs) instead of AWS default keys.",
        "Service": "Amazon SQS"
    }
]